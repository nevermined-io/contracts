{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x2aD96e8E16E8917Ab4104d60606059B6A91133f6",
    "txHash": "0x431e9b8a2ad7f9f695e69955877f66ed7dce8a3eec7c2c1afdf24efac31e676a"
  },
  "proxies": [
    {
      "address": "0x57BF4E0e569406f5f9760BFf314F24ca3BA87963",
      "txHash": "0x68d667984d4adda6ab39b5d08e8c33373ef6f9e432842fd3e1b9a48d4f017c54",
      "kind": "transparent"
    },
    {
      "address": "0x93605C644181f3dD03A37228528649A76822Fcf1",
      "txHash": "0x5018f8a36a15b14d3671520d58f4a5bfb92e93948096dcc151ae9974068e9b3e",
      "kind": "transparent"
    },
    {
      "address": "0xca8F953c8F97971F7eA4b3659E199422e416cA87",
      "txHash": "0x70271cec831eed6cbc4bb840fdd67372328317f57148cea2bff536e3c8f59c7e",
      "kind": "transparent"
    },
    {
      "address": "0x605cB0DB42694c14eE2c711D7067b3B972B78a8c",
      "txHash": "0xe04d9db4a1d12ebbf6bd3b6bd8ce32cde3c74f0d498e19e2f09fade441afa8de",
      "kind": "transparent"
    },
    {
      "address": "0xED1F1F9092f34e1A9b4FF870213f561d5fc05f5A",
      "txHash": "0xac4e28d31e36779863d5dd9bc8d65c69d74296238ff10b1bc0ab7288ab43cbf8",
      "kind": "transparent"
    },
    {
      "address": "0xa785886Adb1B325D1C698d9779D2AFf70Cf37322",
      "txHash": "0x6d938a44f3794cb6828bef950bdfd9d9f6557762f81faf56d6149d0c0fe590ec",
      "kind": "transparent"
    },
    {
      "address": "0x1bcA156f746C6Eb8b18d61654293e2Fc5b653fF5",
      "txHash": "0xf8f47b6fb5bafdb9397d96e7e36b8acb5e0cf1fc394fd051b5dc980bdd570083",
      "kind": "transparent"
    }
  ],
  "impls": {
    "c052704e26501368af105c501926dc09c9552b95d186c57d857a63685b909b95": {
      "address": "0xD1Cacdf5fA4C167D7e5F3598415b05809B33764C",
      "txHash": "0xb5e9d58fa8521b41522097949b4959053b9de2d429023721123a632145827417",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)2646_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          },
          {
            "label": "marketplaceFee",
            "offset": 0,
            "slot": "201",
            "type": "t_uint256",
            "contract": "NeverminedConfig",
            "src": "contracts/governance/NeverminedConfig.sol:22"
          },
          {
            "label": "feeReceiver",
            "offset": 0,
            "slot": "202",
            "type": "t_address",
            "contract": "NeverminedConfig",
            "src": "contracts/governance/NeverminedConfig.sol:26"
          },
          {
            "label": "provenanceOff",
            "offset": 20,
            "slot": "202",
            "type": "t_bool",
            "contract": "NeverminedConfig",
            "src": "contracts/governance/NeverminedConfig.sol:29"
          },
          {
            "label": "trustedForwarder",
            "offset": 0,
            "slot": "203",
            "type": "t_address",
            "contract": "NeverminedConfig",
            "src": "contracts/governance/NeverminedConfig.sol:31"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)2646_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)2646_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "bf37ecb745428fc4b9c4ad88bb8516e0593a33c15f95f333aebf31bdf9a18bcf": {
      "address": "0x34C231880304cCc57585Ae5D523c032bcC13e3A4",
      "txHash": "0x17e681a159534e8f52d803ca2fbffa21f3842a3c8be79f9b1731dba9161a6c5c",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)2646_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          },
          {
            "label": "provenanceRegistry",
            "offset": 0,
            "slot": "201",
            "type": "t_struct(ProvenanceRegistryList)30009_storage",
            "contract": "ProvenanceRegistry",
            "src": "contracts/registry/ProvenanceRegistry.sol:56"
          },
          {
            "label": "didRegisterList",
            "offset": 0,
            "slot": "202",
            "type": "t_struct(DIDRegisterList)29144_storage",
            "contract": "DIDFactory",
            "src": "contracts/registry/DIDFactory.sol:27"
          },
          {
            "label": "didPermissions",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_bytes32,t_mapping(t_address,t_bool))",
            "contract": "DIDFactory",
            "src": "contracts/registry/DIDFactory.sol:30"
          },
          {
            "label": "manager",
            "offset": 0,
            "slot": "204",
            "type": "t_address",
            "contract": "DIDFactory",
            "src": "contracts/registry/DIDFactory.sol:32"
          },
          {
            "label": "erc1155",
            "offset": 0,
            "slot": "205",
            "type": "t_contract(NFT1155Upgradeable)37332",
            "contract": "DIDRegistry",
            "src": "contracts/registry/DIDRegistry.sol:35"
          },
          {
            "label": "erc721",
            "offset": 0,
            "slot": "206",
            "type": "t_contract(NFT721Upgradeable)38327",
            "contract": "DIDRegistry",
            "src": "contracts/registry/DIDRegistry.sol:36"
          },
          {
            "label": "royaltiesCheckers",
            "offset": 0,
            "slot": "207",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "DIDRegistry",
            "src": "contracts/registry/DIDRegistry.sol:38"
          },
          {
            "label": "defaultRoyalties",
            "offset": 0,
            "slot": "208",
            "type": "t_contract(StandardRoyalties)31336",
            "contract": "DIDRegistry",
            "src": "contracts/registry/DIDRegistry.sol:39"
          },
          {
            "label": "nvmConfig",
            "offset": 0,
            "slot": "209",
            "type": "t_contract(INVMConfig)22577",
            "contract": "DIDRegistry",
            "src": "contracts/registry/DIDRegistry.sol:41"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_contract(INVMConfig)22577": {
            "label": "contract INVMConfig",
            "numberOfBytes": "20"
          },
          "t_contract(IRoyaltyScheme)23811": {
            "label": "contract IRoyaltyScheme",
            "numberOfBytes": "20"
          },
          "t_contract(NFT1155Upgradeable)37332": {
            "label": "contract NFT1155Upgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(NFT721Upgradeable)38327": {
            "label": "contract NFT721Upgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(StandardRoyalties)31336": {
            "label": "contract StandardRoyalties",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_address,t_bool))": {
            "label": "mapping(bytes32 => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(DIDRegister)29138_storage)": {
            "label": "mapping(bytes32 => struct DIDRegistryLibrary.DIDRegister)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(Provenance)30003_storage)": {
            "label": "mapping(bytes32 => struct ProvenanceRegistry.Provenance)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)2646_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(DIDRegister)29138_storage": {
            "label": "struct DIDRegistryLibrary.DIDRegister",
            "members": [
              {
                "label": "owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "royalties",
                "type": "t_uint8",
                "offset": 20,
                "slot": "0"
              },
              {
                "label": "nftInitialized",
                "type": "t_bool",
                "offset": 21,
                "slot": "0"
              },
              {
                "label": "nftContractAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "creator",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "lastChecksum",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "url",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "lastUpdatedBy",
                "type": "t_address",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "blockNumberUpdated",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "providers",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "delegates",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "royaltyRecipient",
                "type": "t_address",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "royaltyScheme",
                "type": "t_contract(IRoyaltyScheme)23811",
                "offset": 0,
                "slot": "10"
              },
              {
                "label": "immutableUrl",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "11"
              }
            ],
            "numberOfBytes": "384"
          },
          "t_struct(DIDRegisterList)29144_storage": {
            "label": "struct DIDRegistryLibrary.DIDRegisterList",
            "members": [
              {
                "label": "didRegisters",
                "type": "t_mapping(t_bytes32,t_struct(DIDRegister)29138_storage)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Provenance)30003_storage": {
            "label": "struct ProvenanceRegistry.Provenance",
            "members": [
              {
                "label": "did",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "relatedDid",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "agentId",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "activityId",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "agentInvolvedId",
                "type": "t_address",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "method",
                "type": "t_uint8",
                "offset": 20,
                "slot": "4"
              },
              {
                "label": "createdBy",
                "type": "t_address",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "blockNumberUpdated",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "signature",
                "type": "t_bytes_storage",
                "offset": 0,
                "slot": "7"
              }
            ],
            "numberOfBytes": "256"
          },
          "t_struct(ProvenanceRegistryList)30009_storage": {
            "label": "struct ProvenanceRegistry.ProvenanceRegistryList",
            "members": [
              {
                "label": "list",
                "type": "t_mapping(t_bytes32,t_struct(Provenance)30003_storage)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)2646_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "87e20b70979c973da67a20ee5e997c3aa81a6ac42c220f88905df29d0a9fb913": {
      "address": "0x7AEa2c1E1b2FB3B4D0e2138D866a2d01D9fE3C1b",
      "txHash": "0x748c7aad7fd84658cb12457cbbbbeb4197dce8cb2fb5dbaf3174f0efa6f31603",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "registry",
            "offset": 2,
            "slot": "0",
            "type": "t_contract(DIDRegistry)29102",
            "contract": "StandardRoyalties",
            "src": "contracts/royalties/StandardRoyalties.sol:18"
          },
          {
            "label": "royalties",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "StandardRoyalties",
            "src": "contracts/royalties/StandardRoyalties.sol:22"
          }
        ],
        "types": {
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(DIDRegistry)29102": {
            "label": "contract DIDRegistry",
            "numberOfBytes": "20"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "a7767b02d7d6d34e880523d61326f1f255d473464c2e0872fc185219d08b63d2": {
      "address": "0x1165c7fDb410dc2341989dd42927189CFFA9F2CD",
      "txHash": "0x60627e9118117ccafc9ed9f4924875fb39bdca8ba055c94af103e2f7aa278ec6",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:25"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:28"
          },
          {
            "label": "_uri",
            "offset": 0,
            "slot": "153",
            "type": "t_string_storage",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "154",
            "type": "t_array(t_uint256)47_storage",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:528"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)2646_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          },
          {
            "label": "_royalties",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)35838_storage)",
            "contract": "NFTBase",
            "src": "contracts/token/NFTBase.sol:56"
          },
          {
            "label": "_nftAttributes",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_uint256,t_struct(NFTAttributes)35847_storage)",
            "contract": "NFTBase",
            "src": "contracts/token/NFTBase.sol:58"
          },
          {
            "label": "_expiration",
            "offset": 0,
            "slot": "253",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NFTBase",
            "src": "contracts/token/NFTBase.sol:62"
          },
          {
            "label": "_contractMetadataUri",
            "offset": 0,
            "slot": "254",
            "type": "t_string_storage",
            "contract": "NFTBase",
            "src": "contracts/token/NFTBase.sol:65"
          },
          {
            "label": "nvmConfig",
            "offset": 0,
            "slot": "255",
            "type": "t_address",
            "contract": "NFTBase",
            "src": "contracts/token/NFTBase.sol:67"
          },
          {
            "label": "name",
            "offset": 0,
            "slot": "256",
            "type": "t_string_storage",
            "contract": "NFT1155Upgradeable",
            "src": "contracts/token/erc1155/NFT1155Upgradeable.sol:17"
          },
          {
            "label": "symbol",
            "offset": 0,
            "slot": "257",
            "type": "t_string_storage",
            "contract": "NFT1155Upgradeable",
            "src": "contracts/token/erc1155/NFT1155Upgradeable.sol:20"
          },
          {
            "label": "nftRegistry",
            "offset": 0,
            "slot": "258",
            "type": "t_contract(IExternalRegistry)23771",
            "contract": "NFT1155Upgradeable",
            "src": "contracts/token/erc1155/NFT1155Upgradeable.sol:22"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]",
            "numberOfBytes": "1504"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IExternalRegistry)23771": {
            "label": "contract IExternalRegistry",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)2646_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(NFTAttributes)35847_storage)": {
            "label": "mapping(uint256 => struct NFTBase.NFTAttributes)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(RoyaltyInfo)35838_storage)": {
            "label": "mapping(uint256 => struct NFTBase.RoyaltyInfo)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(NFTAttributes)35847_storage": {
            "label": "struct NFTBase.NFTAttributes",
            "members": [
              {
                "label": "nftInitialized",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "nftSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "mintCap",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "nftURI",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(RoleData)2646_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoyaltyInfo)35838_storage": {
            "label": "struct NFTBase.RoyaltyInfo",
            "members": [
              {
                "label": "receiver",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "royaltyAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "3c3f22ec4df5181d538b70f3b6e709f0b379e6f5798c71bbfa4b67eeed34ed5b": {
      "address": "0x83520876CE160d88CEB22E429AC8CeEF0f37E7aa",
      "txHash": "0xd1d4e7b68072a08376bd8402a397f5a05822eeadf9e35b7b551eac28981c1a53",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "151",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "152",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "156",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "157",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:517"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)2646_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          },
          {
            "label": "_royalties",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)35838_storage)",
            "contract": "NFTBase",
            "src": "contracts/token/NFTBase.sol:56"
          },
          {
            "label": "_nftAttributes",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_uint256,t_struct(NFTAttributes)35847_storage)",
            "contract": "NFTBase",
            "src": "contracts/token/NFTBase.sol:58"
          },
          {
            "label": "_expiration",
            "offset": 0,
            "slot": "253",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NFTBase",
            "src": "contracts/token/NFTBase.sol:62"
          },
          {
            "label": "_contractMetadataUri",
            "offset": 0,
            "slot": "254",
            "type": "t_string_storage",
            "contract": "NFTBase",
            "src": "contracts/token/NFTBase.sol:65"
          },
          {
            "label": "nvmConfig",
            "offset": 0,
            "slot": "255",
            "type": "t_address",
            "contract": "NFTBase",
            "src": "contracts/token/NFTBase.sol:67"
          },
          {
            "label": "_nftContractCap",
            "offset": 0,
            "slot": "256",
            "type": "t_uint256",
            "contract": "NFT721Upgradeable",
            "src": "contracts/token/erc721/NFT721Upgradeable.sol:19"
          },
          {
            "label": "nftRegistry",
            "offset": 0,
            "slot": "257",
            "type": "t_contract(IExternalRegistry)23771",
            "contract": "NFT721Upgradeable",
            "src": "contracts/token/erc721/NFT721Upgradeable.sol:21"
          },
          {
            "label": "_counterMinted",
            "offset": 0,
            "slot": "258",
            "type": "t_struct(Counter)8119_storage",
            "contract": "NFT721Upgradeable",
            "src": "contracts/token/erc721/NFT721Upgradeable.sol:26"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IExternalRegistry)23771": {
            "label": "contract IExternalRegistry",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)2646_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(NFTAttributes)35847_storage)": {
            "label": "mapping(uint256 => struct NFTBase.NFTAttributes)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(RoyaltyInfo)35838_storage)": {
            "label": "mapping(uint256 => struct NFTBase.RoyaltyInfo)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)8119_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(NFTAttributes)35847_storage": {
            "label": "struct NFTBase.NFTAttributes",
            "members": [
              {
                "label": "nftInitialized",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "nftSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "mintCap",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "nftURI",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(RoleData)2646_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoyaltyInfo)35838_storage": {
            "label": "struct NFTBase.RoyaltyInfo",
            "members": [
              {
                "label": "receiver",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "royaltyAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "85a565a5bf5635513c02d5f61e9f22c27f1de21da1225d92483c74e67042f5fc": {
      "address": "0x283FB6189A477bb68dDE83ca18E977FD0248c4de",
      "txHash": "0x2604daf0a426f0ea81aed05e70e19454b9a51711850fd6330efc324b393ed9d6",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "151",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "152",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "156",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "157",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:517"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)2646_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          },
          {
            "label": "_royalties",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)35838_storage)",
            "contract": "NFTBase",
            "src": "contracts/token/NFTBase.sol:56"
          },
          {
            "label": "_nftAttributes",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_uint256,t_struct(NFTAttributes)35847_storage)",
            "contract": "NFTBase",
            "src": "contracts/token/NFTBase.sol:58"
          },
          {
            "label": "_expiration",
            "offset": 0,
            "slot": "253",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NFTBase",
            "src": "contracts/token/NFTBase.sol:62"
          },
          {
            "label": "_contractMetadataUri",
            "offset": 0,
            "slot": "254",
            "type": "t_string_storage",
            "contract": "NFTBase",
            "src": "contracts/token/NFTBase.sol:65"
          },
          {
            "label": "nvmConfig",
            "offset": 0,
            "slot": "255",
            "type": "t_address",
            "contract": "NFTBase",
            "src": "contracts/token/NFTBase.sol:67"
          },
          {
            "label": "_nftContractCap",
            "offset": 0,
            "slot": "256",
            "type": "t_uint256",
            "contract": "NFT721Upgradeable",
            "src": "contracts/token/erc721/NFT721Upgradeable.sol:19"
          },
          {
            "label": "nftRegistry",
            "offset": 0,
            "slot": "257",
            "type": "t_contract(IExternalRegistry)23771",
            "contract": "NFT721Upgradeable",
            "src": "contracts/token/erc721/NFT721Upgradeable.sol:21"
          },
          {
            "label": "_counterMinted",
            "offset": 0,
            "slot": "258",
            "type": "t_struct(Counter)8119_storage",
            "contract": "NFT721Upgradeable",
            "src": "contracts/token/erc721/NFT721Upgradeable.sol:26"
          },
          {
            "label": "_tokens",
            "offset": 0,
            "slot": "259",
            "type": "t_mapping(t_address,t_array(t_struct(MintedTokens)37345_storage)dyn_storage)",
            "contract": "NFT721SubscriptionUpgradeable",
            "src": "contracts/token/erc721/NFT721SubscriptionUpgradeable.sol:17"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(MintedTokens)37345_storage)dyn_storage": {
            "label": "struct NFT721SubscriptionUpgradeable.MintedTokens[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IExternalRegistry)23771": {
            "label": "contract IExternalRegistry",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_array(t_struct(MintedTokens)37345_storage)dyn_storage)": {
            "label": "mapping(address => struct NFT721SubscriptionUpgradeable.MintedTokens[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)2646_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(NFTAttributes)35847_storage)": {
            "label": "mapping(uint256 => struct NFTBase.NFTAttributes)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(RoyaltyInfo)35838_storage)": {
            "label": "mapping(uint256 => struct NFTBase.RoyaltyInfo)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)8119_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(MintedTokens)37345_storage": {
            "label": "struct NFT721SubscriptionUpgradeable.MintedTokens",
            "members": [
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "expirationBlock",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "mintBlock",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(NFTAttributes)35847_storage": {
            "label": "struct NFTBase.NFTAttributes",
            "members": [
              {
                "label": "nftInitialized",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "nftSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "mintCap",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "nftURI",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(RoleData)2646_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoyaltyInfo)35838_storage": {
            "label": "struct NFTBase.RoyaltyInfo",
            "members": [
              {
                "label": "receiver",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "royaltyAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "a8cfac9cccffe21e8af4d39ba4191bfa88dd68000257ee1e19b92ca2a56e4828": {
      "address": "0x58f0f540e5AFFD5EBc00c3A2C5D30c51CFBf8adD",
      "txHash": "0x15df6d6673c7ecc03c79dbbe6e5c8eaff17cda31dec5d00529955364d0713fb3",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)2646_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "202",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "203",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "204",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "205",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "206",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:400"
          },
          {
            "label": "_cap",
            "offset": 0,
            "slot": "251",
            "type": "t_uint256",
            "contract": "ERC20CappedUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20CappedUpgradeable.sol:15"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC20CappedUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20CappedUpgradeable.sol:50"
          },
          {
            "label": "nvmConfig",
            "offset": 0,
            "slot": "302",
            "type": "t_address",
            "contract": "NeverminedToken",
            "src": "contracts/NeverminedToken.sol:26"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)2646_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)2646_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    }
  }
}

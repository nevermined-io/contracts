{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x2aD96e8E16E8917Ab4104d60606059B6A91133f6",
    "txHash": "0x797607339ed83099c533993ec94749e31c6444adc33e2f489f609837e57cfa42"
  },
  "proxies": [
    {
      "address": "0x57BF4E0e569406f5f9760BFf314F24ca3BA87963",
      "txHash": "0xd8c5b908a7af4599f3068d6eba6c8541fbe150cecd600deeed711ac9b72e8374",
      "kind": "transparent"
    },
    {
      "address": "0x93605C644181f3dD03A37228528649A76822Fcf1",
      "txHash": "0x7bc91e6e4aef33799091e2337e650c14f982ee0b39be1efc5165233216721239",
      "kind": "transparent"
    },
    {
      "address": "0xca8F953c8F97971F7eA4b3659E199422e416cA87",
      "txHash": "0x0f4cff76df7034e13060b1e5dd5b8b5da69dd333027cfda4081653d5b816f26b",
      "kind": "transparent"
    },
    {
      "address": "0x605cB0DB42694c14eE2c711D7067b3B972B78a8c",
      "txHash": "0x9bb0052f43f1960910c7a71a9685f1ae696dd83e7df1ce2711ba799167cd7b80",
      "kind": "transparent"
    },
    {
      "address": "0xED1F1F9092f34e1A9b4FF870213f561d5fc05f5A",
      "txHash": "0xb32eb18ff7658e24cf666e076c5aa05395042e0cdca1d5bfb782cf771687281d",
      "kind": "transparent"
    },
    {
      "address": "0xE7Cb58D2a076235F12948986Ee4a4ed9aC54Cb16",
      "txHash": "0x7d37ba94dc193ec9ae237fae3f9479dc5625e5eb2075a49a16474a3cb8fc6dd7",
      "kind": "transparent"
    },
    {
      "address": "0x7dc496Bb472126cD65149c4b0fF53e55E5e515d7",
      "txHash": "0x524e0d90c6f5da2703088de568368c161f50636724133a4689b88feeeb7d9fb4",
      "kind": "transparent"
    },
    {
      "address": "0x0dE91319747399675c98d6a6D20Bd2590FB27e37",
      "txHash": "0xbf905000d81e6bf26e599ca435e1d4ecafe6f75a48981ac0034c131909832a8c",
      "kind": "transparent"
    },
    {
      "address": "0x23B276c4A9f152DE0Ef5Ddfd8d138F5C5947a2f0",
      "txHash": "0x1ec1a425a80e9e4d4e1709e30a4e29bb37b44b904ff2efbbe2321f5313f9233d",
      "kind": "transparent"
    },
    {
      "address": "0x569DADC91c67405d75BD2A7f154928003ebC1e02",
      "txHash": "0x3674443dd401c5a389e83c6d11a226184f1e07b57858992f31d6a2f43aef7863",
      "kind": "transparent"
    }
  ],
  "impls": {
    "c052704e26501368af105c501926dc09c9552b95d186c57d857a63685b909b95": {
      "address": "0xD1Cacdf5fA4C167D7e5F3598415b05809B33764C",
      "txHash": "0xc4bcc3c33068288b10627f120f2281293d767a322bdae225e5249a142175c9a0",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          },
          {
            "label": "marketplaceFee",
            "offset": 0,
            "slot": "201",
            "type": "t_uint256",
            "contract": "NeverminedConfig",
            "src": "contracts/governance/NeverminedConfig.sol:22"
          },
          {
            "label": "feeReceiver",
            "offset": 0,
            "slot": "202",
            "type": "t_address",
            "contract": "NeverminedConfig",
            "src": "contracts/governance/NeverminedConfig.sol:26"
          },
          {
            "label": "provenanceOff",
            "offset": 20,
            "slot": "202",
            "type": "t_bool",
            "contract": "NeverminedConfig",
            "src": "contracts/governance/NeverminedConfig.sol:29"
          },
          {
            "label": "trustedForwarder",
            "offset": 0,
            "slot": "203",
            "type": "t_address",
            "contract": "NeverminedConfig",
            "src": "contracts/governance/NeverminedConfig.sol:31"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "bf37ecb745428fc4b9c4ad88bb8516e0593a33c15f95f333aebf31bdf9a18bcf": {
      "address": "0x34C231880304cCc57585Ae5D523c032bcC13e3A4",
      "txHash": "0x240c1699ec9c521df9b952488f09de8b2437041d404bfb368b449101c8d04c6f",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          },
          {
            "label": "provenanceRegistry",
            "offset": 0,
            "slot": "201",
            "type": "t_struct(ProvenanceRegistryList)26669_storage",
            "contract": "ProvenanceRegistry",
            "src": "contracts/registry/ProvenanceRegistry.sol:56"
          },
          {
            "label": "didRegisterList",
            "offset": 0,
            "slot": "202",
            "type": "t_struct(DIDRegisterList)25804_storage",
            "contract": "DIDFactory",
            "src": "contracts/registry/DIDFactory.sol:27"
          },
          {
            "label": "didPermissions",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_bytes32,t_mapping(t_address,t_bool))",
            "contract": "DIDFactory",
            "src": "contracts/registry/DIDFactory.sol:30"
          },
          {
            "label": "manager",
            "offset": 0,
            "slot": "204",
            "type": "t_address",
            "contract": "DIDFactory",
            "src": "contracts/registry/DIDFactory.sol:32"
          },
          {
            "label": "erc1155",
            "offset": 0,
            "slot": "205",
            "type": "t_contract(NFT1155Upgradeable)33173",
            "contract": "DIDRegistry",
            "src": "contracts/registry/DIDRegistry.sol:35"
          },
          {
            "label": "erc721",
            "offset": 0,
            "slot": "206",
            "type": "t_contract(NFT721Upgradeable)33949",
            "contract": "DIDRegistry",
            "src": "contracts/registry/DIDRegistry.sol:36"
          },
          {
            "label": "royaltiesCheckers",
            "offset": 0,
            "slot": "207",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "DIDRegistry",
            "src": "contracts/registry/DIDRegistry.sol:38"
          },
          {
            "label": "defaultRoyalties",
            "offset": 0,
            "slot": "208",
            "type": "t_contract(StandardRoyalties)27996",
            "contract": "DIDRegistry",
            "src": "contracts/registry/DIDRegistry.sol:39"
          },
          {
            "label": "nvmConfig",
            "offset": 0,
            "slot": "209",
            "type": "t_contract(INVMConfig)19505",
            "contract": "DIDRegistry",
            "src": "contracts/registry/DIDRegistry.sol:41"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_contract(INVMConfig)19505": {
            "label": "contract INVMConfig",
            "numberOfBytes": "20"
          },
          "t_contract(IRoyaltyScheme)20730": {
            "label": "contract IRoyaltyScheme",
            "numberOfBytes": "20"
          },
          "t_contract(NFT1155Upgradeable)33173": {
            "label": "contract NFT1155Upgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(NFT721Upgradeable)33949": {
            "label": "contract NFT721Upgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(StandardRoyalties)27996": {
            "label": "contract StandardRoyalties",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_address,t_bool))": {
            "label": "mapping(bytes32 => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(DIDRegister)25798_storage)": {
            "label": "mapping(bytes32 => struct DIDRegistryLibrary.DIDRegister)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(Provenance)26663_storage)": {
            "label": "mapping(bytes32 => struct ProvenanceRegistry.Provenance)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(DIDRegister)25798_storage": {
            "label": "struct DIDRegistryLibrary.DIDRegister",
            "members": [
              {
                "label": "owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "royalties",
                "type": "t_uint8",
                "offset": 20,
                "slot": "0"
              },
              {
                "label": "nftInitialized",
                "type": "t_bool",
                "offset": 21,
                "slot": "0"
              },
              {
                "label": "nftContractAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "creator",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "lastChecksum",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "url",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "lastUpdatedBy",
                "type": "t_address",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "blockNumberUpdated",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "providers",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "delegates",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "royaltyRecipient",
                "type": "t_address",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "royaltyScheme",
                "type": "t_contract(IRoyaltyScheme)20730",
                "offset": 0,
                "slot": "10"
              },
              {
                "label": "immutableUrl",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "11"
              }
            ],
            "numberOfBytes": "384"
          },
          "t_struct(DIDRegisterList)25804_storage": {
            "label": "struct DIDRegistryLibrary.DIDRegisterList",
            "members": [
              {
                "label": "didRegisters",
                "type": "t_mapping(t_bytes32,t_struct(DIDRegister)25798_storage)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Provenance)26663_storage": {
            "label": "struct ProvenanceRegistry.Provenance",
            "members": [
              {
                "label": "did",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "relatedDid",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "agentId",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "activityId",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "agentInvolvedId",
                "type": "t_address",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "method",
                "type": "t_uint8",
                "offset": 20,
                "slot": "4"
              },
              {
                "label": "createdBy",
                "type": "t_address",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "blockNumberUpdated",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "signature",
                "type": "t_bytes_storage",
                "offset": 0,
                "slot": "7"
              }
            ],
            "numberOfBytes": "256"
          },
          "t_struct(ProvenanceRegistryList)26669_storage": {
            "label": "struct ProvenanceRegistry.ProvenanceRegistryList",
            "members": [
              {
                "label": "list",
                "type": "t_mapping(t_bytes32,t_struct(Provenance)26663_storage)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "87e20b70979c973da67a20ee5e997c3aa81a6ac42c220f88905df29d0a9fb913": {
      "address": "0x7AEa2c1E1b2FB3B4D0e2138D866a2d01D9fE3C1b",
      "txHash": "0x10e5cce045691896d9b8fb89e760fcb83699cfa7aca01e16ff60e13bce35bb56",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "registry",
            "offset": 2,
            "slot": "0",
            "type": "t_contract(DIDRegistry)25762",
            "contract": "StandardRoyalties",
            "src": "contracts/royalties/StandardRoyalties.sol:18"
          },
          {
            "label": "royalties",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "StandardRoyalties",
            "src": "contracts/royalties/StandardRoyalties.sol:22"
          }
        ],
        "types": {
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(DIDRegistry)25762": {
            "label": "contract DIDRegistry",
            "numberOfBytes": "20"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "0844fa0c231f1ccb2dbde30f6eae379aa4222290c02509b0c350eb02a2b3ca88": {
      "address": "0x1165c7fDb410dc2341989dd42927189CFFA9F2CD",
      "txHash": "0xba0f6bcd109cf6083f6c297835a90159f2eb200b45834b95cfc371ff06c219c5",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:25"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:28"
          },
          {
            "label": "_uri",
            "offset": 0,
            "slot": "153",
            "type": "t_string_storage",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "154",
            "type": "t_array(t_uint256)47_storage",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:528"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          },
          {
            "label": "_royalties",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)31981_storage)",
            "contract": "NFTBase",
            "src": "contracts/token/NFTBase.sol:56"
          },
          {
            "label": "_nftAttributes",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_uint256,t_struct(NFTAttributes)31990_storage)",
            "contract": "NFTBase",
            "src": "contracts/token/NFTBase.sol:58"
          },
          {
            "label": "_expiration",
            "offset": 0,
            "slot": "253",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NFTBase",
            "src": "contracts/token/NFTBase.sol:62"
          },
          {
            "label": "_contractMetadataUri",
            "offset": 0,
            "slot": "254",
            "type": "t_string_storage",
            "contract": "NFTBase",
            "src": "contracts/token/NFTBase.sol:65"
          },
          {
            "label": "nvmConfig",
            "offset": 0,
            "slot": "255",
            "type": "t_address",
            "contract": "NFTBase",
            "src": "contracts/token/NFTBase.sol:67"
          },
          {
            "label": "name",
            "offset": 0,
            "slot": "256",
            "type": "t_string_storage",
            "contract": "NFT1155Upgradeable",
            "src": "contracts/token/erc1155/NFT1155Upgradeable.sol:17"
          },
          {
            "label": "symbol",
            "offset": 0,
            "slot": "257",
            "type": "t_string_storage",
            "contract": "NFT1155Upgradeable",
            "src": "contracts/token/erc1155/NFT1155Upgradeable.sol:20"
          },
          {
            "label": "nftRegistry",
            "offset": 0,
            "slot": "258",
            "type": "t_contract(IExternalRegistry)20690",
            "contract": "NFT1155Upgradeable",
            "src": "contracts/token/erc1155/NFT1155Upgradeable.sol:22"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]",
            "numberOfBytes": "1504"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IExternalRegistry)20690": {
            "label": "contract IExternalRegistry",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(NFTAttributes)31990_storage)": {
            "label": "mapping(uint256 => struct NFTBase.NFTAttributes)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(RoyaltyInfo)31981_storage)": {
            "label": "mapping(uint256 => struct NFTBase.RoyaltyInfo)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(NFTAttributes)31990_storage": {
            "label": "struct NFTBase.NFTAttributes",
            "members": [
              {
                "label": "nftInitialized",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "nftSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "mintCap",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "nftURI",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoyaltyInfo)31981_storage": {
            "label": "struct NFTBase.RoyaltyInfo",
            "members": [
              {
                "label": "receiver",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "royaltyAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "d14fc4d89bb6042acce70060cb5289b2526ae0edbd0366cbc7f5da72cc1197d7": {
      "address": "0x83520876CE160d88CEB22E429AC8CeEF0f37E7aa",
      "txHash": "0x0429950dbd023bad87b5ba6b01d750ec8e411a5328caeb1c5378b7a7543dec9a",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "151",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "152",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "156",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "157",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:517"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          },
          {
            "label": "_royalties",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)31981_storage)",
            "contract": "NFTBase",
            "src": "contracts/token/NFTBase.sol:56"
          },
          {
            "label": "_nftAttributes",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_uint256,t_struct(NFTAttributes)31990_storage)",
            "contract": "NFTBase",
            "src": "contracts/token/NFTBase.sol:58"
          },
          {
            "label": "_expiration",
            "offset": 0,
            "slot": "253",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NFTBase",
            "src": "contracts/token/NFTBase.sol:62"
          },
          {
            "label": "_contractMetadataUri",
            "offset": 0,
            "slot": "254",
            "type": "t_string_storage",
            "contract": "NFTBase",
            "src": "contracts/token/NFTBase.sol:65"
          },
          {
            "label": "nvmConfig",
            "offset": 0,
            "slot": "255",
            "type": "t_address",
            "contract": "NFTBase",
            "src": "contracts/token/NFTBase.sol:67"
          },
          {
            "label": "_nftContractCap",
            "offset": 0,
            "slot": "256",
            "type": "t_uint256",
            "contract": "NFT721Upgradeable",
            "src": "contracts/token/erc721/NFT721Upgradeable.sol:19"
          },
          {
            "label": "nftRegistry",
            "offset": 0,
            "slot": "257",
            "type": "t_contract(IExternalRegistry)20690",
            "contract": "NFT721Upgradeable",
            "src": "contracts/token/erc721/NFT721Upgradeable.sol:21"
          },
          {
            "label": "_counterMinted",
            "offset": 0,
            "slot": "258",
            "type": "t_struct(Counter)5507_storage",
            "contract": "NFT721Upgradeable",
            "src": "contracts/token/erc721/NFT721Upgradeable.sol:26"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IExternalRegistry)20690": {
            "label": "contract IExternalRegistry",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(NFTAttributes)31990_storage)": {
            "label": "mapping(uint256 => struct NFTBase.NFTAttributes)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(RoyaltyInfo)31981_storage)": {
            "label": "mapping(uint256 => struct NFTBase.RoyaltyInfo)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)5507_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(NFTAttributes)31990_storage": {
            "label": "struct NFTBase.NFTAttributes",
            "members": [
              {
                "label": "nftInitialized",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "nftSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "mintCap",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "nftURI",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoyaltyInfo)31981_storage": {
            "label": "struct NFTBase.RoyaltyInfo",
            "members": [
              {
                "label": "receiver",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "royaltyAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    }
  }
}

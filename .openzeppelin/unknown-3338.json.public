{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x9618BB3C9177d6592cd28600C35eB90f402Dc8a4",
    "txHash": "0x2466d5623a50eff27a167b76d4204ed33e89b11cd5eb0ccccb622750b5acd26c"
  },
  "proxies": [
    {
      "address": "0xAFA0eF9fdc66581dCA192714322EEAe9574FEEA1",
      "txHash": "0x613ca5b3584fe4b958a60d4bb33a3c17e2c398b86b1ef379ddeaa3047edb7e2b",
      "kind": "transparent"
    },
    {
      "address": "0xE57a81fD46D7b4D6213dBB8FE302B6F93DF9C7C4",
      "txHash": "0xfd18742093c6ca74f59cb1d1806a3b27f82a7cba4c00dfaa4eef621395df9350",
      "kind": "transparent"
    },
    {
      "address": "0x18e0626508241DF4A2f36E5978fBfE53374ABab2",
      "txHash": "0x440928b1c1e825cd1c62a92d117b6018ae3ad2c6f63415082a5ba09ce02f4e5a",
      "kind": "transparent"
    },
    {
      "address": "0x2503007E5fdab885e4Fd01C51b47C3F4B50c3439",
      "txHash": "0xa2c472bba14371fdcdf0f7b3a9ab93c7c46e75835feadccae5a9007e0c1a6560",
      "kind": "transparent"
    },
    {
      "address": "0xBaE7C99C071cA2C179383dC82b7C4d95D43F2464",
      "txHash": "0x0bbfb3243f849cfad51f11f0ac1cef8a16b8e256fbcd21c59435959fb2954a27",
      "kind": "transparent"
    },
    {
      "address": "0xA22fd72345df8e4BB24aa94d84262FdDb4ae2251",
      "txHash": "0xcb0b3fc07010c5010219fb710c0784ac3216bd50ed674a2b6e833c066c095c5a",
      "kind": "transparent"
    },
    {
      "address": "0xE6F969DE25fe457b13ce91C4Bd175589EB6f3a4E",
      "txHash": "0x2cf8972fce2f4de168369ecf7a88aa124576b50ada51a282ef4e102795277422",
      "kind": "transparent"
    }
  ],
  "impls": {
    "892b6797ed627265a679caf78277fe602443a8fa2c3ac1a5a6090c0027c21052": {
      "address": "0xCCf9db936b81A82650E777F8FE885f8C67CAbF43",
      "txHash": "0xcfc8ec78acc1707332419545d9acf101c8b9b36fa28bf13daca32c15d0b7bed9",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)2646_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          },
          {
            "label": "marketplaceFee",
            "offset": 0,
            "slot": "201",
            "type": "t_uint256",
            "contract": "NeverminedConfig",
            "src": "contracts/governance/NeverminedConfig.sol:25"
          },
          {
            "label": "feeReceiver",
            "offset": 0,
            "slot": "202",
            "type": "t_address",
            "contract": "NeverminedConfig",
            "src": "contracts/governance/NeverminedConfig.sol:29"
          },
          {
            "label": "provenanceOff",
            "offset": 20,
            "slot": "202",
            "type": "t_bool",
            "contract": "NeverminedConfig",
            "src": "contracts/governance/NeverminedConfig.sol:32"
          },
          {
            "label": "trustedForwarder",
            "offset": 0,
            "slot": "203",
            "type": "t_address",
            "contract": "NeverminedConfig",
            "src": "contracts/governance/NeverminedConfig.sol:34"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)2646_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)2646_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "16275ea04ec6a399b470a73b8c3437c16990e2e154606370b11ddc456d12b693": {
      "address": "0x9F1c0bD108C042B7501ac1F609D1ae5869Bfe082",
      "txHash": "0xc5ecfb169c98150bbaac9ec840f58a6bea4a99144f0103c8cf4ea29feb5965f0",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)2646_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          },
          {
            "label": "provenanceRegistry",
            "offset": 0,
            "slot": "201",
            "type": "t_struct(ProvenanceRegistryList)32635_storage",
            "contract": "ProvenanceRegistry",
            "src": "contracts/registry/ProvenanceRegistry.sol:56"
          },
          {
            "label": "didRegisterList",
            "offset": 0,
            "slot": "202",
            "type": "t_struct(DIDRegisterList)31770_storage",
            "contract": "DIDFactory",
            "src": "contracts/registry/DIDFactory.sol:27"
          },
          {
            "label": "didPermissions",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_bytes32,t_mapping(t_address,t_bool))",
            "contract": "DIDFactory",
            "src": "contracts/registry/DIDFactory.sol:30"
          },
          {
            "label": "manager",
            "offset": 0,
            "slot": "204",
            "type": "t_address",
            "contract": "DIDFactory",
            "src": "contracts/registry/DIDFactory.sol:32"
          },
          {
            "label": "erc1155",
            "offset": 0,
            "slot": "205",
            "type": "t_contract(NFT1155Upgradeable)41079",
            "contract": "DIDRegistry",
            "src": "contracts/registry/DIDRegistry.sol:35"
          },
          {
            "label": "erc721",
            "offset": 0,
            "slot": "206",
            "type": "t_contract(NFT721Upgradeable)42090",
            "contract": "DIDRegistry",
            "src": "contracts/registry/DIDRegistry.sol:36"
          },
          {
            "label": "royaltiesCheckers",
            "offset": 0,
            "slot": "207",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "DIDRegistry",
            "src": "contracts/registry/DIDRegistry.sol:38"
          },
          {
            "label": "defaultRoyalties",
            "offset": 0,
            "slot": "208",
            "type": "t_contract(StandardRoyalties)33962",
            "contract": "DIDRegistry",
            "src": "contracts/registry/DIDRegistry.sol:39"
          },
          {
            "label": "nvmConfig",
            "offset": 0,
            "slot": "209",
            "type": "t_contract(INVMConfig)25130",
            "contract": "DIDRegistry",
            "src": "contracts/registry/DIDRegistry.sol:41"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_contract(INVMConfig)25130": {
            "label": "contract INVMConfig",
            "numberOfBytes": "20"
          },
          "t_contract(IRoyaltyScheme)26427": {
            "label": "contract IRoyaltyScheme",
            "numberOfBytes": "20"
          },
          "t_contract(NFT1155Upgradeable)41079": {
            "label": "contract NFT1155Upgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(NFT721Upgradeable)42090": {
            "label": "contract NFT721Upgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(StandardRoyalties)33962": {
            "label": "contract StandardRoyalties",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_address,t_bool))": {
            "label": "mapping(bytes32 => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(DIDRegister)31764_storage)": {
            "label": "mapping(bytes32 => struct DIDRegistryLibrary.DIDRegister)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(Provenance)32629_storage)": {
            "label": "mapping(bytes32 => struct ProvenanceRegistry.Provenance)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)2646_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(DIDRegister)31764_storage": {
            "label": "struct DIDRegistryLibrary.DIDRegister",
            "members": [
              {
                "label": "owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "royalties",
                "type": "t_uint8",
                "offset": 20,
                "slot": "0"
              },
              {
                "label": "nftInitialized",
                "type": "t_bool",
                "offset": 21,
                "slot": "0"
              },
              {
                "label": "nftContractAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "creator",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "lastChecksum",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "url",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "lastUpdatedBy",
                "type": "t_address",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "blockNumberUpdated",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "providers",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "delegates",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "royaltyRecipient",
                "type": "t_address",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "royaltyScheme",
                "type": "t_contract(IRoyaltyScheme)26427",
                "offset": 0,
                "slot": "10"
              },
              {
                "label": "immutableUrl",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "11"
              }
            ],
            "numberOfBytes": "384"
          },
          "t_struct(DIDRegisterList)31770_storage": {
            "label": "struct DIDRegistryLibrary.DIDRegisterList",
            "members": [
              {
                "label": "didRegisters",
                "type": "t_mapping(t_bytes32,t_struct(DIDRegister)31764_storage)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Provenance)32629_storage": {
            "label": "struct ProvenanceRegistry.Provenance",
            "members": [
              {
                "label": "did",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "relatedDid",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "agentId",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "activityId",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "agentInvolvedId",
                "type": "t_address",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "method",
                "type": "t_uint8",
                "offset": 20,
                "slot": "4"
              },
              {
                "label": "createdBy",
                "type": "t_address",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "blockNumberUpdated",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "signature",
                "type": "t_bytes_storage",
                "offset": 0,
                "slot": "7"
              }
            ],
            "numberOfBytes": "256"
          },
          "t_struct(ProvenanceRegistryList)32635_storage": {
            "label": "struct ProvenanceRegistry.ProvenanceRegistryList",
            "members": [
              {
                "label": "list",
                "type": "t_mapping(t_bytes32,t_struct(Provenance)32629_storage)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)2646_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "008194aeb76ab8c710f50c713046918035e3c2654b7b810057790734815c9147": {
      "address": "0xcfD22a8d3613a5AEFb6999Ab94D579cBf45Cb63C",
      "txHash": "0x0d155ac5b0e5e25dac82c0896310dcedba481729f3545dbf30ff9cb24ee0705f",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "registry",
            "offset": 2,
            "slot": "0",
            "type": "t_contract(DIDRegistry)31728",
            "contract": "StandardRoyalties",
            "src": "contracts/royalties/StandardRoyalties.sol:18"
          },
          {
            "label": "royalties",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "StandardRoyalties",
            "src": "contracts/royalties/StandardRoyalties.sol:22"
          }
        ],
        "types": {
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(DIDRegistry)31728": {
            "label": "contract DIDRegistry",
            "numberOfBytes": "20"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "66ef9bbdb5257df506473135d5e11cfcde9a0713e22a81f920de728d8a2f3341": {
      "address": "0xEe7Da4AA5a8AAe9994a6Ccc480d2a25bB3d25bc4",
      "txHash": "0x86612674dd0365b6fea4fb220352e69a0030a99cf588fbc845dc3076b220fc7f",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:25"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:28"
          },
          {
            "label": "_uri",
            "offset": 0,
            "slot": "153",
            "type": "t_string_storage",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "154",
            "type": "t_array(t_uint256)47_storage",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:528"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)2646_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          },
          {
            "label": "_royalties",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)39074_storage)",
            "contract": "NFTBase",
            "src": "contracts/token/NFTBase.sol:57"
          },
          {
            "label": "_nftAttributes",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_uint256,t_struct(NFTAttributes)39083_storage)",
            "contract": "NFTBase",
            "src": "contracts/token/NFTBase.sol:59"
          },
          {
            "label": "_expiration",
            "offset": 0,
            "slot": "253",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NFTBase",
            "src": "contracts/token/NFTBase.sol:63"
          },
          {
            "label": "_contractMetadataUri",
            "offset": 0,
            "slot": "254",
            "type": "t_string_storage",
            "contract": "NFTBase",
            "src": "contracts/token/NFTBase.sol:66"
          },
          {
            "label": "nvmConfig",
            "offset": 0,
            "slot": "255",
            "type": "t_address",
            "contract": "NFTBase",
            "src": "contracts/token/NFTBase.sol:68"
          },
          {
            "label": "name",
            "offset": 0,
            "slot": "256",
            "type": "t_string_storage",
            "contract": "NFT1155Upgradeable",
            "src": "contracts/token/erc1155/NFT1155Upgradeable.sol:17"
          },
          {
            "label": "symbol",
            "offset": 0,
            "slot": "257",
            "type": "t_string_storage",
            "contract": "NFT1155Upgradeable",
            "src": "contracts/token/erc1155/NFT1155Upgradeable.sol:20"
          },
          {
            "label": "nftRegistry",
            "offset": 0,
            "slot": "258",
            "type": "t_contract(IExternalRegistry)26387",
            "contract": "NFT1155Upgradeable",
            "src": "contracts/token/erc1155/NFT1155Upgradeable.sol:22"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]",
            "numberOfBytes": "1504"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IExternalRegistry)26387": {
            "label": "contract IExternalRegistry",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)2646_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(NFTAttributes)39083_storage)": {
            "label": "mapping(uint256 => struct NFTBase.NFTAttributes)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(RoyaltyInfo)39074_storage)": {
            "label": "mapping(uint256 => struct NFTBase.RoyaltyInfo)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(NFTAttributes)39083_storage": {
            "label": "struct NFTBase.NFTAttributes",
            "members": [
              {
                "label": "nftInitialized",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "nftSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "mintCap",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "nftURI",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(RoleData)2646_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoyaltyInfo)39074_storage": {
            "label": "struct NFTBase.RoyaltyInfo",
            "members": [
              {
                "label": "receiver",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "royaltyAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "95c2848f38c41b9986375afb2c46947b4b975e7e2d1ca6b535e885fefe99d125": {
      "address": "0x3a05d1244ED3dC1f5AE0C2b831BE853F32CBC146",
      "txHash": "0xc2b77fbd004ba93fd8ac65c92238524ae181b8fb3b6cf9a23a430b4bbc85b722",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "151",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "152",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "156",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "157",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:517"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)2646_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          },
          {
            "label": "_royalties",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)39074_storage)",
            "contract": "NFTBase",
            "src": "contracts/token/NFTBase.sol:57"
          },
          {
            "label": "_nftAttributes",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_uint256,t_struct(NFTAttributes)39083_storage)",
            "contract": "NFTBase",
            "src": "contracts/token/NFTBase.sol:59"
          },
          {
            "label": "_expiration",
            "offset": 0,
            "slot": "253",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NFTBase",
            "src": "contracts/token/NFTBase.sol:63"
          },
          {
            "label": "_contractMetadataUri",
            "offset": 0,
            "slot": "254",
            "type": "t_string_storage",
            "contract": "NFTBase",
            "src": "contracts/token/NFTBase.sol:66"
          },
          {
            "label": "nvmConfig",
            "offset": 0,
            "slot": "255",
            "type": "t_address",
            "contract": "NFTBase",
            "src": "contracts/token/NFTBase.sol:68"
          },
          {
            "label": "_nftContractCap",
            "offset": 0,
            "slot": "256",
            "type": "t_uint256",
            "contract": "NFT721Upgradeable",
            "src": "contracts/token/erc721/NFT721Upgradeable.sol:18"
          },
          {
            "label": "nftRegistry",
            "offset": 0,
            "slot": "257",
            "type": "t_contract(IExternalRegistry)26387",
            "contract": "NFT721Upgradeable",
            "src": "contracts/token/erc721/NFT721Upgradeable.sol:20"
          },
          {
            "label": "_counterMinted",
            "offset": 0,
            "slot": "258",
            "type": "t_struct(Counter)8119_storage",
            "contract": "NFT721Upgradeable",
            "src": "contracts/token/erc721/NFT721Upgradeable.sol:25"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IExternalRegistry)26387": {
            "label": "contract IExternalRegistry",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)2646_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(NFTAttributes)39083_storage)": {
            "label": "mapping(uint256 => struct NFTBase.NFTAttributes)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(RoyaltyInfo)39074_storage)": {
            "label": "mapping(uint256 => struct NFTBase.RoyaltyInfo)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)8119_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(NFTAttributes)39083_storage": {
            "label": "struct NFTBase.NFTAttributes",
            "members": [
              {
                "label": "nftInitialized",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "nftSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "mintCap",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "nftURI",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(RoleData)2646_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoyaltyInfo)39074_storage": {
            "label": "struct NFTBase.RoyaltyInfo",
            "members": [
              {
                "label": "receiver",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "royaltyAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "289f043618cad820bbb3f983f4a43bfb59eae2d262cf1798bbdc3acb40a2656c": {
      "address": "0x89D9a4d5868f60ada896cFc1De3955F157995225",
      "txHash": "0xed8d2e1f6a5f5cc5db96aff6fc96e2ad1a11276627874d6af2d7afc83f2805f9",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "151",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "152",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "156",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "157",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:517"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)2646_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          },
          {
            "label": "_royalties",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)39074_storage)",
            "contract": "NFTBase",
            "src": "contracts/token/NFTBase.sol:57"
          },
          {
            "label": "_nftAttributes",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_uint256,t_struct(NFTAttributes)39083_storage)",
            "contract": "NFTBase",
            "src": "contracts/token/NFTBase.sol:59"
          },
          {
            "label": "_expiration",
            "offset": 0,
            "slot": "253",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NFTBase",
            "src": "contracts/token/NFTBase.sol:63"
          },
          {
            "label": "_contractMetadataUri",
            "offset": 0,
            "slot": "254",
            "type": "t_string_storage",
            "contract": "NFTBase",
            "src": "contracts/token/NFTBase.sol:66"
          },
          {
            "label": "nvmConfig",
            "offset": 0,
            "slot": "255",
            "type": "t_address",
            "contract": "NFTBase",
            "src": "contracts/token/NFTBase.sol:68"
          },
          {
            "label": "_nftContractCap",
            "offset": 0,
            "slot": "256",
            "type": "t_uint256",
            "contract": "NFT721Upgradeable",
            "src": "contracts/token/erc721/NFT721Upgradeable.sol:18"
          },
          {
            "label": "nftRegistry",
            "offset": 0,
            "slot": "257",
            "type": "t_contract(IExternalRegistry)26387",
            "contract": "NFT721Upgradeable",
            "src": "contracts/token/erc721/NFT721Upgradeable.sol:20"
          },
          {
            "label": "_counterMinted",
            "offset": 0,
            "slot": "258",
            "type": "t_struct(Counter)8119_storage",
            "contract": "NFT721Upgradeable",
            "src": "contracts/token/erc721/NFT721Upgradeable.sol:25"
          },
          {
            "label": "_tokens",
            "offset": 0,
            "slot": "259",
            "type": "t_mapping(t_address,t_array(t_struct(MintedTokens)41092_storage)dyn_storage)",
            "contract": "NFT721SubscriptionUpgradeable",
            "src": "contracts/token/erc721/NFT721SubscriptionUpgradeable.sol:17"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(MintedTokens)41092_storage)dyn_storage": {
            "label": "struct NFT721SubscriptionUpgradeable.MintedTokens[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IExternalRegistry)26387": {
            "label": "contract IExternalRegistry",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_array(t_struct(MintedTokens)41092_storage)dyn_storage)": {
            "label": "mapping(address => struct NFT721SubscriptionUpgradeable.MintedTokens[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)2646_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(NFTAttributes)39083_storage)": {
            "label": "mapping(uint256 => struct NFTBase.NFTAttributes)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(RoyaltyInfo)39074_storage)": {
            "label": "mapping(uint256 => struct NFTBase.RoyaltyInfo)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)8119_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(MintedTokens)41092_storage": {
            "label": "struct NFT721SubscriptionUpgradeable.MintedTokens",
            "members": [
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "expirationBlock",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "mintBlock",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(NFTAttributes)39083_storage": {
            "label": "struct NFTBase.NFTAttributes",
            "members": [
              {
                "label": "nftInitialized",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "nftSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "mintCap",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "nftURI",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(RoleData)2646_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoyaltyInfo)39074_storage": {
            "label": "struct NFTBase.RoyaltyInfo",
            "members": [
              {
                "label": "receiver",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "royaltyAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "90b75b698a55b1359b8319ee21dea9c8f95914d4613ae65adf3df10bf66fbc44": {
      "address": "0x90c3491Cf8dbD206C50440CCB892039C18DFc7e8",
      "txHash": "0x4cba44ac6b3c4a7c25437f01575922e73b4a6e78e444744e2a56c903f1532fde",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:25"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:28"
          },
          {
            "label": "_uri",
            "offset": 0,
            "slot": "153",
            "type": "t_string_storage",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "154",
            "type": "t_array(t_uint256)47_storage",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:528"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)2646_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          },
          {
            "label": "_royalties",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)39074_storage)",
            "contract": "NFTBase",
            "src": "contracts/token/NFTBase.sol:57"
          },
          {
            "label": "_nftAttributes",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_uint256,t_struct(NFTAttributes)39083_storage)",
            "contract": "NFTBase",
            "src": "contracts/token/NFTBase.sol:59"
          },
          {
            "label": "_expiration",
            "offset": 0,
            "slot": "253",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NFTBase",
            "src": "contracts/token/NFTBase.sol:63"
          },
          {
            "label": "_contractMetadataUri",
            "offset": 0,
            "slot": "254",
            "type": "t_string_storage",
            "contract": "NFTBase",
            "src": "contracts/token/NFTBase.sol:66"
          },
          {
            "label": "nvmConfig",
            "offset": 0,
            "slot": "255",
            "type": "t_address",
            "contract": "NFTBase",
            "src": "contracts/token/NFTBase.sol:68"
          },
          {
            "label": "name",
            "offset": 0,
            "slot": "256",
            "type": "t_string_storage",
            "contract": "NFT1155Upgradeable",
            "src": "contracts/token/erc1155/NFT1155Upgradeable.sol:17"
          },
          {
            "label": "symbol",
            "offset": 0,
            "slot": "257",
            "type": "t_string_storage",
            "contract": "NFT1155Upgradeable",
            "src": "contracts/token/erc1155/NFT1155Upgradeable.sol:20"
          },
          {
            "label": "nftRegistry",
            "offset": 0,
            "slot": "258",
            "type": "t_contract(IExternalRegistry)26387",
            "contract": "NFT1155Upgradeable",
            "src": "contracts/token/erc1155/NFT1155Upgradeable.sol:22"
          },
          {
            "label": "_tokens",
            "offset": 0,
            "slot": "259",
            "type": "t_mapping(t_bytes32,t_array(t_struct(MintedTokens)39464_storage)dyn_storage)",
            "contract": "NFT1155SubscriptionUpgradeable",
            "src": "contracts/token/erc1155/NFT1155SubscriptionUpgradeable.sol:18"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(MintedTokens)39464_storage)dyn_storage": {
            "label": "struct NFT1155SubscriptionUpgradeable.MintedTokens[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]",
            "numberOfBytes": "1504"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IExternalRegistry)26387": {
            "label": "contract IExternalRegistry",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_array(t_struct(MintedTokens)39464_storage)dyn_storage)": {
            "label": "mapping(bytes32 => struct NFT1155SubscriptionUpgradeable.MintedTokens[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)2646_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(NFTAttributes)39083_storage)": {
            "label": "mapping(uint256 => struct NFTBase.NFTAttributes)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(RoyaltyInfo)39074_storage)": {
            "label": "mapping(uint256 => struct NFTBase.RoyaltyInfo)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(MintedTokens)39464_storage": {
            "label": "struct NFT1155SubscriptionUpgradeable.MintedTokens",
            "members": [
              {
                "label": "amountMinted",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "expirationBlock",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "mintBlock",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "isMintOps",
                "type": "t_bool",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(NFTAttributes)39083_storage": {
            "label": "struct NFTBase.NFTAttributes",
            "members": [
              {
                "label": "nftInitialized",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "nftSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "mintCap",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "nftURI",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(RoleData)2646_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoyaltyInfo)39074_storage": {
            "label": "struct NFTBase.RoyaltyInfo",
            "members": [
              {
                "label": "receiver",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "royaltyAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    }
  }
}

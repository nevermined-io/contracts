{
  "version": "3.2",
  "log": [
    {
      "AccessControlUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:50",
        "inherit": [
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "IAccessControlUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "StringsUpgradeable"
        ],
        "methods": [
          "supportsInterface(bytes4)",
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            },
            {
              "label": "_roles",
              "offset": 0,
              "slot": "101",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
              "contract": "AccessControlUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "102",
              "type": "t_array(t_uint256)49_storage",
              "contract": "AccessControlUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:247"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)34_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IAccessControlUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC2981Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/interfaces/IERC2981Upgradeable.sol:16",
        "inherit": [
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "royaltyInfo(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:57",
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ReentrancyGuardUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:23",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
            }
          ],
          "types": {
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC1155Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:21",
        "version": {
          "withMetadata": "3ab102c1a024fb82968d8f96d12f52caacc1bb35fe99d42edc13da2992e2979f",
          "withoutMetadata": "0fb5e1514bb66ce3c5adda291cf34ee6cd1ad1ef34384b5a5389275c5176a03c",
          "linkedWithoutMetadata": "0fb5e1514bb66ce3c5adda291cf34ee6cd1ad1ef34384b5a5389275c5176a03c"
        },
        "inherit": [
          "IERC1155MetadataURIUpgradeable",
          "IERC1155Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [
          "supportsInterface(bytes4)",
          "uri(uint256)",
          "balanceOf(address,uint256)",
          "balanceOfBatch(address[],uint256[])",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "101",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "contract": "ERC1155Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:25"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "102",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC1155Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:28"
            },
            {
              "label": "_uri",
              "offset": 0,
              "slot": "103",
              "type": "t_string_storage",
              "contract": "ERC1155Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:31"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "104",
              "type": "t_array(t_uint256)47_storage",
              "contract": "ERC1155Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:522"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)47_storage": {
              "label": "uint256[47]",
              "numberOfBytes": "1504"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC1155ReceiverUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155ReceiverUpgradeable.sol:11",
        "inherit": [
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC1155Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155Upgradeable.sol:14",
        "inherit": [
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address,uint256)",
          "balanceOfBatch(address[],uint256[])",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC1155BurnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155BurnableUpgradeable.sol:15",
        "inherit": [
          "ERC1155Upgradeable",
          "IERC1155MetadataURIUpgradeable",
          "IERC1155Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "burn(address,uint256,uint256)",
          "burnBatch(address,uint256[],uint256[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "101",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "contract": "ERC1155Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:25"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "102",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC1155Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:28"
            },
            {
              "label": "_uri",
              "offset": 0,
              "slot": "103",
              "type": "t_string_storage",
              "contract": "ERC1155Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:31"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "104",
              "type": "t_array(t_uint256)47_storage",
              "contract": "ERC1155Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:522"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1155BurnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155BurnableUpgradeable.sol:52"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)47_storage": {
              "label": "uint256[47]",
              "numberOfBytes": "1504"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC1155MetadataURIUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/IERC1155MetadataURIUpgradeable.sol:14",
        "inherit": [
          "IERC1155Upgradeable",
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "uri(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:36",
        "version": {
          "withMetadata": "2b9c6e352bef7b94b8b29cd1b9bf104627f19666d76a499ad4c5e17dafe4011f",
          "withoutMetadata": "cb84000dd3d54f07b85fdfb4cdf4ad3408e53f1647802516f25b75e0713ea9b0",
          "linkedWithoutMetadata": "cb84000dd3d54f07b85fdfb4cdf4ad3408e53f1647802516f25b75e0713ea9b0"
        },
        "inherit": [
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC20CappedUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20CappedUpgradeable.sol:14",
        "inherit": [
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "cap()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "_cap",
              "offset": 0,
              "slot": "101",
              "type": "t_uint256",
              "contract": "ERC20CappedUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20CappedUpgradeable.sol:15"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "102",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC20CappedUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20CappedUpgradeable.sol:50"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20MetadataUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol:13",
        "inherit": [
          "IERC20Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol:18",
        "version": {
          "withMetadata": "ae468315c4b3cf3b222676b6a3250ad1a256f993d0a601740ca1bca9c04eab69",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC721Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:20",
        "version": {
          "withMetadata": "5a3deac92652e0feb560bed35af24b99f231ccd43f01d97ae189cdb1cc3a5c59",
          "withoutMetadata": "3f72589323d69c916ee87de9fb3f57fa49a7de0d414d5a9203ffc9531eba6c23",
          "linkedWithoutMetadata": "3f72589323d69c916ee87de9fb3f57fa49a7de0d414d5a9203ffc9531eba6c23"
        },
        "inherit": [
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "AddressUpgradeable",
          "StringsUpgradeable"
        ],
        "methods": [
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "101",
              "type": "t_string_storage",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "102",
              "type": "t_string_storage",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "103",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "104",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "105",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "106",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "107",
              "type": "t_array(t_uint256)44_storage",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:458"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)44_storage": {
              "label": "uint256[44]",
              "numberOfBytes": "1408"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC721ReceiverUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721ReceiverUpgradeable.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol:11",
        "inherit": [
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC721EnumerableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:15",
        "inherit": [
          "IERC721EnumerableUpgradeable",
          "ERC721Upgradeable",
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)",
          "tokenOfOwnerByIndex(address,uint256)",
          "totalSupply()",
          "tokenByIndex(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "101",
              "type": "t_string_storage",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "102",
              "type": "t_string_storage",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "103",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "104",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "105",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "106",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "107",
              "type": "t_array(t_uint256)44_storage",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:458"
            },
            {
              "label": "_ownedTokens",
              "offset": 0,
              "slot": "151",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "ERC721EnumerableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
            },
            {
              "label": "_ownedTokensIndex",
              "offset": 0,
              "slot": "152",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "ERC721EnumerableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
            },
            {
              "label": "_allTokens",
              "offset": 0,
              "slot": "153",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "ERC721EnumerableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
            },
            {
              "label": "_allTokensIndex",
              "offset": 0,
              "slot": "154",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "ERC721EnumerableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "155",
              "type": "t_array(t_uint256)46_storage",
              "contract": "ERC721EnumerableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:175"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)44_storage": {
              "label": "uint256[44]",
              "numberOfBytes": "1408"
            },
            "t_array(t_uint256)46_storage": {
              "label": "uint256[46]",
              "numberOfBytes": "1472"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(address => mapping(uint256 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC721URIStorageUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:12",
        "inherit": [
          "ERC721Upgradeable",
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "StringsUpgradeable"
        ],
        "methods": [
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "101",
              "type": "t_string_storage",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "102",
              "type": "t_string_storage",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "103",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "104",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "105",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "106",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "107",
              "type": "t_array(t_uint256)44_storage",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:458"
            },
            {
              "label": "_tokenURIs",
              "offset": 0,
              "slot": "151",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "ERC721URIStorageUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:21"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "152",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ERC721URIStorageUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:79"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)44_storage": {
              "label": "uint256[44]",
              "numberOfBytes": "1408"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC721EnumerableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/IERC721EnumerableUpgradeable.sol:12",
        "inherit": [
          "IERC721Upgradeable",
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "tokenOfOwnerByIndex(address,uint256)",
          "tokenByIndex(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721MetadataUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/IERC721MetadataUpgradeable.sol:12",
        "inherit": [
          "IERC721Upgradeable",
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "2749e0a8fae4260b339d34a19e1ffbb57b6ce2a206510533271bce9ace425b10",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:17",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "CountersUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol:14",
        "version": {
          "withMetadata": "bc0b0e55c35b9e297e581e583cb37abd9ae62a54d4b0e6249118e089f895d052",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "StringsUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol:9",
        "version": {
          "withMetadata": "bc9f0a88572d0794128fce303627cbaadad2e4e10591dcadc362f198570ebc25",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ECDSAUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol:14",
        "version": {
          "withMetadata": "4ec26962a90f2429e54d08cf7a93c9411f8e06e89e09b7a1f769a68ab7b319eb",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "StringsUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC165StorageUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165StorageUpgradeable.sol:15",
        "inherit": [
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            },
            {
              "label": "_supportedInterfaces",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_bytes4,t_bool)",
              "contract": "ERC165StorageUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165StorageUpgradeable.sol:24"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ERC165StorageUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165StorageUpgradeable.sol:54"
            }
          ],
          "types": {
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes4": {
              "label": "bytes4",
              "numberOfBytes": "4"
            },
            "t_mapping(t_bytes4,t_bool)": {
              "label": "mapping(bytes4 => bool)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC165Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:23",
        "inherit": [
          "IERC165Upgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC165Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeMathUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol:16",
        "version": {
          "withMetadata": "db051d22691103849be0a2b90872f776496133ad2bc2867e5b174a7295c850b3",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Common": {
        "src": "contracts/Common.sol:13",
        "version": {
          "withMetadata": "0cb204637c40b40e58075059884b675cc335aebc3791efde43acff3f108f6b63",
          "withoutMetadata": "c44735d8e5e6d5d2fec674b16ba3b308379c131e3b24666747e419ec68d22f55",
          "linkedWithoutMetadata": "c44735d8e5e6d5d2fec674b16ba3b308379c131e3b24666747e419ec68d22f55"
        },
        "inherit": [],
        "libraries": [
          "SafeMathUpgradeable",
          "ECDSAUpgradeable"
        ],
        "methods": [
          "getCurrentBlockNumber()",
          "isContract(address)",
          "provenanceSignatureIsCorrect(address,bytes32,bytes)",
          "calculateTotalAmount(uint256[])",
          "addressToBytes32(address)",
          "bytes32ToAddress(bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Dispenser": {
        "src": "contracts/Dispenser.sol:15",
        "version": {
          "withMetadata": "df07b59dacf7505c64620d47a6fb371965484b7335c1e3c0ef9fd57641a27786",
          "withoutMetadata": "adc756f95af55864e34bd159c49bec6735d785800816bb13a6bceefa8029eeac",
          "linkedWithoutMetadata": "adc756f95af55864e34bd159c49bec6735d785800816bb13a6bceefa8029eeac"
        },
        "inherit": [
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize(address,address)",
          "requestTokens(uint256)",
          "setMinPeriod(uint256)",
          "setMaxAmount(uint256)",
          "setMaxMintAmount(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "tokenRequests",
              "offset": 0,
              "slot": "101",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Dispenser",
              "src": "contracts/Dispenser.sol:22"
            },
            {
              "label": "totalMintAmount",
              "offset": 0,
              "slot": "102",
              "type": "t_uint256",
              "contract": "Dispenser",
              "src": "contracts/Dispenser.sol:24"
            },
            {
              "label": "maxAmount",
              "offset": 0,
              "slot": "103",
              "type": "t_uint256",
              "contract": "Dispenser",
              "src": "contracts/Dispenser.sol:27"
            },
            {
              "label": "maxMintAmount",
              "offset": 0,
              "slot": "104",
              "type": "t_uint256",
              "contract": "Dispenser",
              "src": "contracts/Dispenser.sol:30"
            },
            {
              "label": "minPeriod",
              "offset": 0,
              "slot": "105",
              "type": "t_uint256",
              "contract": "Dispenser",
              "src": "contracts/Dispenser.sol:33"
            },
            {
              "label": "scale",
              "offset": 0,
              "slot": "106",
              "type": "t_uint256",
              "contract": "Dispenser",
              "src": "contracts/Dispenser.sol:36"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "107",
              "type": "t_contract(NeverminedToken)7172",
              "contract": "Dispenser",
              "src": "contracts/Dispenser.sol:38"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(NeverminedToken)7172": {
              "label": "contract NeverminedToken",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "HashLists": {
        "src": "contracts/HashLists.sol:23",
        "version": {
          "withMetadata": "053c00eff967976dec95e89c3756db623077e60aaf56855ab5d78f518626a3dc",
          "withoutMetadata": "08024345002a43dca27dcc0eacb8ca52d9b481493fd8d0e12b2dbef4854b418a",
          "linkedWithoutMetadata": "08024345002a43dca27dcc0eacb8ca52d9b481493fd8d0e12b2dbef4854b418a"
        },
        "inherit": [
          "IList",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "HashListLibrary"
        ],
        "methods": [
          "initialize(address)",
          "hash(address)",
          "add(bytes32[])",
          "add(bytes32)",
          "update(bytes32,bytes32)",
          "index(uint256,uint256)",
          "has(bytes32,bytes32)",
          "has(bytes32)",
          "remove(bytes32)",
          "get(bytes32,uint256)",
          "size(bytes32)",
          "all(bytes32)",
          "indexOf(bytes32,bytes32)",
          "ownedBy(bytes32)",
          "isIndexed(bytes32)"
        ],
        "linkReferences": [
          {
            "src": "contracts/libraries/HashListLibrary.sol",
            "name": "HashListLibrary",
            "length": 20,
            "start": 717,
            "placeholder": "__$5b5e40fcf77e6c8e6f55f186dbefc951ae$__"
          },
          {
            "src": "contracts/libraries/HashListLibrary.sol",
            "name": "HashListLibrary",
            "length": 20,
            "start": 864,
            "placeholder": "__$5b5e40fcf77e6c8e6f55f186dbefc951ae$__"
          },
          {
            "src": "contracts/libraries/HashListLibrary.sol",
            "name": "HashListLibrary",
            "length": 20,
            "start": 1020,
            "placeholder": "__$5b5e40fcf77e6c8e6f55f186dbefc951ae$__"
          },
          {
            "src": "contracts/libraries/HashListLibrary.sol",
            "name": "HashListLibrary",
            "length": 20,
            "start": 1194,
            "placeholder": "__$5b5e40fcf77e6c8e6f55f186dbefc951ae$__"
          },
          {
            "src": "contracts/libraries/HashListLibrary.sol",
            "name": "HashListLibrary",
            "length": 20,
            "start": 1348,
            "placeholder": "__$5b5e40fcf77e6c8e6f55f186dbefc951ae$__"
          },
          {
            "src": "contracts/libraries/HashListLibrary.sol",
            "name": "HashListLibrary",
            "length": 20,
            "start": 1468,
            "placeholder": "__$5b5e40fcf77e6c8e6f55f186dbefc951ae$__"
          },
          {
            "src": "contracts/libraries/HashListLibrary.sol",
            "name": "HashListLibrary",
            "length": 20,
            "start": 1685,
            "placeholder": "__$5b5e40fcf77e6c8e6f55f186dbefc951ae$__"
          },
          {
            "src": "contracts/libraries/HashListLibrary.sol",
            "name": "HashListLibrary",
            "length": 20,
            "start": 1762,
            "placeholder": "__$5b5e40fcf77e6c8e6f55f186dbefc951ae$__"
          },
          {
            "src": "contracts/libraries/HashListLibrary.sol",
            "name": "HashListLibrary",
            "length": 20,
            "start": 1921,
            "placeholder": "__$5b5e40fcf77e6c8e6f55f186dbefc951ae$__"
          },
          {
            "src": "contracts/libraries/HashListLibrary.sol",
            "name": "HashListLibrary",
            "length": 20,
            "start": 2028,
            "placeholder": "__$5b5e40fcf77e6c8e6f55f186dbefc951ae$__"
          },
          {
            "src": "contracts/libraries/HashListLibrary.sol",
            "name": "HashListLibrary",
            "length": 20,
            "start": 2099,
            "placeholder": "__$5b5e40fcf77e6c8e6f55f186dbefc951ae$__"
          },
          {
            "src": "contracts/libraries/HashListLibrary.sol",
            "name": "HashListLibrary",
            "length": 20,
            "start": 2237,
            "placeholder": "__$5b5e40fcf77e6c8e6f55f186dbefc951ae$__"
          },
          {
            "src": "contracts/libraries/HashListLibrary.sol",
            "name": "HashListLibrary",
            "length": 20,
            "start": 2438,
            "placeholder": "__$5b5e40fcf77e6c8e6f55f186dbefc951ae$__"
          },
          {
            "src": "contracts/libraries/HashListLibrary.sol",
            "name": "HashListLibrary",
            "length": 20,
            "start": 2601,
            "placeholder": "__$5b5e40fcf77e6c8e6f55f186dbefc951ae$__"
          },
          {
            "src": "contracts/libraries/HashListLibrary.sol",
            "name": "HashListLibrary",
            "length": 20,
            "start": 2763,
            "placeholder": "__$5b5e40fcf77e6c8e6f55f186dbefc951ae$__"
          },
          {
            "src": "contracts/libraries/HashListLibrary.sol",
            "name": "HashListLibrary",
            "length": 20,
            "start": 2917,
            "placeholder": "__$5b5e40fcf77e6c8e6f55f186dbefc951ae$__"
          },
          {
            "src": "contracts/libraries/HashListLibrary.sol",
            "name": "HashListLibrary",
            "length": 20,
            "start": 3037,
            "placeholder": "__$5b5e40fcf77e6c8e6f55f186dbefc951ae$__"
          }
        ],
        "errors": [
          {
            "kind": "external-library-linking",
            "name": "HashListLibrary",
            "src": "contracts/libraries/HashListLibrary.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "lists",
              "offset": 0,
              "slot": "101",
              "type": "t_mapping(t_bytes32,t_struct(List)19442_storage)",
              "contract": "HashLists",
              "src": "contracts/HashLists.sol:26"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(List)19442_storage)": {
              "label": "mapping(bytes32 => struct HashListLibrary.List)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(List)19442_storage": {
              "label": "struct HashListLibrary.List",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "indices",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "NeverminedToken": {
        "src": "contracts/NeverminedToken.sol:20",
        "version": {
          "withMetadata": "591c11f1f2b4f3ada69ef13b54eeaa41ef76e3c4cbe5e0445189f5df154c4ce6",
          "withoutMetadata": "21eac7221deef9c415e754ccc9fd7c7212456fa792be5f86be88a3b4973c3291",
          "linkedWithoutMetadata": "21eac7221deef9c415e754ccc9fd7c7212456fa792be5f86be88a3b4973c3291"
        },
        "inherit": [
          "ERC20CappedUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "OwnableUpgradeable",
          "AccessControlUpgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "IAccessControlUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize(address,address payable)",
          "mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            },
            {
              "label": "_roles",
              "offset": 0,
              "slot": "101",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
              "contract": "AccessControlUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "102",
              "type": "t_array(t_uint256)49_storage",
              "contract": "AccessControlUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:247"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "151",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "152",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "201",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "202",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "203",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "204",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "205",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "206",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "_cap",
              "offset": 0,
              "slot": "251",
              "type": "t_uint256",
              "contract": "ERC20CappedUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20CappedUpgradeable.sol:15"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "252",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC20CappedUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20CappedUpgradeable.sol:50"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)34_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "AgreementStoreLibrary": {
        "src": "contracts/agreements/AgreementStoreLibrary.sol:20",
        "version": {
          "withMetadata": "27a348553784e1a061bd225d9da7d5d3b37b3d5aa2b97eb618fe06c0f91db6b3",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AgreementStoreManager": {
        "src": "contracts/agreements/AgreementStoreManager.sol:31",
        "version": {
          "withMetadata": "0fa7274dd4644beda2de15c69e1976e6c7c9d301992ec9cd9f313758dd3f3703",
          "withoutMetadata": "49bdd90f367576658ff98eb363406c524051ce3b3309fb74881723a423013902",
          "linkedWithoutMetadata": "49bdd90f367576658ff98eb363406c524051ce3b3309fb74881723a423013902"
        },
        "inherit": [
          "AccessControlUpgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "IAccessControlUpgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "AgreementStoreLibrary"
        ],
        "methods": [
          "grantProxyRole(address)",
          "revokeProxyRole(address)",
          "initialize(address,address,address,address)",
          "fullConditionId(bytes32,address,bytes32)",
          "agreementId(bytes32,address)",
          "createAgreement(bytes32,bytes32,address[],bytes32[],uint256[],uint256[])",
          "createAgreementAndPay((bytes32,bytes32,address[],bytes32[],uint256[],uint256[],address,uint256,address payable,address,uint256[],address[]))",
          "createAgreementAndFulfill(bytes32,bytes32,address[],bytes32[],uint256[],uint256[],address[],uint256[],bytes[])",
          "getAgreementTemplate(bytes32)",
          "getDIDRegistryAddress()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            },
            {
              "label": "_roles",
              "offset": 0,
              "slot": "151",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
              "contract": "AccessControlUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "152",
              "type": "t_array(t_uint256)49_storage",
              "contract": "AccessControlUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:247"
            },
            {
              "label": "agreementList",
              "offset": 0,
              "slot": "201",
              "type": "t_struct(AgreementList)7206_storage",
              "contract": "AgreementStoreManager",
              "src": "contracts/agreements/AgreementStoreManager.sol:51"
            },
            {
              "label": "conditionStoreManager",
              "offset": 0,
              "slot": "205",
              "type": "t_contract(ConditionStoreManager)9399",
              "contract": "AgreementStoreManager",
              "src": "contracts/agreements/AgreementStoreManager.sol:53"
            },
            {
              "label": "templateStoreManager",
              "offset": 0,
              "slot": "206",
              "type": "t_contract(TemplateStoreManager)29485",
              "contract": "AgreementStoreManager",
              "src": "contracts/agreements/AgreementStoreManager.sol:54"
            },
            {
              "label": "didRegistry",
              "offset": 0,
              "slot": "207",
              "type": "t_contract(DIDRegistry)23815",
              "contract": "AgreementStoreManager",
              "src": "contracts/agreements/AgreementStoreManager.sol:55"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(ConditionStoreManager)9399": {
              "label": "contract ConditionStoreManager",
              "numberOfBytes": "20"
            },
            "t_contract(DIDRegistry)23815": {
              "label": "contract DIDRegistry",
              "numberOfBytes": "20"
            },
            "t_contract(TemplateStoreManager)29485": {
              "label": "contract TemplateStoreManager",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_array(t_bytes32)dyn_storage)": {
              "label": "mapping(address => bytes32[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_array(t_bytes32)dyn_storage)": {
              "label": "mapping(bytes32 => bytes32[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(Agreement)7187_storage)": {
              "label": "mapping(bytes32 => struct AgreementStoreLibrary.Agreement)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
              "numberOfBytes": "32"
            },
            "t_struct(Agreement)7187_storage": {
              "label": "struct AgreementStoreLibrary.Agreement",
              "members": [
                {
                  "label": "did",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "templateId",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "conditionIds",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "lastUpdatedBy",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "blockNumberUpdated",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(AgreementList)7206_storage": {
              "label": "struct AgreementStoreLibrary.AgreementList",
              "members": [
                {
                  "label": "agreements",
                  "type": "t_mapping(t_bytes32,t_struct(Agreement)7187_storage)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "didToAgreementIds",
                  "type": "t_mapping(t_bytes32,t_array(t_bytes32)dyn_storage)",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "templateIdToAgreementIds",
                  "type": "t_mapping(t_address,t_array(t_bytes32)dyn_storage)",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "agreementIds",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(RoleData)34_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Template": {
        "src": "contracts/agreements/AgreementStoreManager.sol:17",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getConditionTypes()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AccessCondition": {
        "src": "contracts/conditions/AccessCondition.sol:27",
        "version": {
          "withMetadata": "1056c934140fa432f33596bcfb19943a71ec61b471f7006f02ce8163cfe75ba7",
          "withoutMetadata": "ebfd40db8ea2076ca7d9deb2200af596c860fe1d1cd4a44e463e62d3385edc89",
          "linkedWithoutMetadata": "ebfd40db8ea2076ca7d9deb2200af596c860fe1d1cd4a44e463e62d3385edc89"
        },
        "inherit": [
          "ISecretStorePermission",
          "ISecretStore",
          "Condition",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "ConditionStoreLibrary"
        ],
        "methods": [
          "initialize(address,address,address)",
          "reinitialize()",
          "hashValues(bytes32,address)",
          "fulfill(bytes32,bytes32,address)",
          "grantPermission(address,bytes32)",
          "renouncePermission(address,bytes32)",
          "checkPermissions(address,bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "conditionStoreManager",
              "offset": 0,
              "slot": "101",
              "type": "t_contract(ConditionStoreManager)9399",
              "contract": "Condition",
              "src": "contracts/conditions/Condition.sol:25"
            },
            {
              "label": "documentPermissions",
              "offset": 0,
              "slot": "102",
              "type": "t_mapping(t_bytes32,t_struct(DocumentPermission)7819_storage)",
              "contract": "AccessCondition",
              "src": "contracts/conditions/AccessCondition.sol:37"
            },
            {
              "label": "agreementStoreManager",
              "offset": 0,
              "slot": "103",
              "type": "t_contract(AgreementStoreManager)7793",
              "contract": "AccessCondition",
              "src": "contracts/conditions/AccessCondition.sol:38"
            },
            {
              "label": "didRegistry",
              "offset": 0,
              "slot": "104",
              "type": "t_contract(DIDRegistry)23815",
              "contract": "AccessCondition",
              "src": "contracts/conditions/AccessCondition.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(AgreementStoreManager)7793": {
              "label": "contract AgreementStoreManager",
              "numberOfBytes": "20"
            },
            "t_contract(ConditionStoreManager)9399": {
              "label": "contract ConditionStoreManager",
              "numberOfBytes": "20"
            },
            "t_contract(DIDRegistry)23815": {
              "label": "contract DIDRegistry",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(DocumentPermission)7819_storage)": {
              "label": "mapping(bytes32 => struct AccessCondition.DocumentPermission)",
              "numberOfBytes": "32"
            },
            "t_struct(DocumentPermission)7819_storage": {
              "label": "struct AccessCondition.DocumentPermission",
              "members": [
                {
                  "label": "agreementIdDeprecated",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "permission",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "AccessProofCondition": {
        "src": "contracts/conditions/AccessProofCondition.sol:30",
        "version": {
          "withMetadata": "5ec5a42d650c537c10a7ecaee654ffcbd6c1c83a15ead6d30aee11dacc487a85",
          "withoutMetadata": "11f6aca12e0bb83f31f9464e9d986df61082e19c8453f574202b2613bbfa374e",
          "linkedWithoutMetadata": "11f6aca12e0bb83f31f9464e9d986df61082e19c8453f574202b2613bbfa374e"
        },
        "inherit": [
          "Condition",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "ConditionStoreLibrary"
        ],
        "methods": [
          "initialize(address,address,address,address)",
          "changeDisputeManager(address)",
          "hashValues(uint256,uint256[2],uint256[2])",
          "fulfill(bytes32,uint256,uint256[2],uint256[2],uint256[2],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "conditionStoreManager",
              "offset": 0,
              "slot": "101",
              "type": "t_contract(ConditionStoreManager)9399",
              "contract": "Condition",
              "src": "contracts/conditions/Condition.sol:25"
            },
            {
              "label": "agreementStoreManager",
              "offset": 0,
              "slot": "102",
              "type": "t_contract(AgreementStoreManager)7793",
              "contract": "AccessProofCondition",
              "src": "contracts/conditions/AccessProofCondition.sol:34"
            },
            {
              "label": "disputeManager",
              "offset": 0,
              "slot": "103",
              "type": "t_contract(IDisputeManager)8085",
              "contract": "AccessProofCondition",
              "src": "contracts/conditions/AccessProofCondition.sol:35"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(AgreementStoreManager)7793": {
              "label": "contract AgreementStoreManager",
              "numberOfBytes": "20"
            },
            "t_contract(ConditionStoreManager)9399": {
              "label": "contract ConditionStoreManager",
              "numberOfBytes": "20"
            },
            "t_contract(IDisputeManager)8085": {
              "label": "contract IDisputeManager",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IDisputeManager": {
        "src": "contracts/conditions/AccessProofCondition.sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "verifyProof(bytes,uint256[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ComputeExecutionCondition": {
        "src": "contracts/conditions/ComputeExecutionCondition.sol:23",
        "version": {
          "withMetadata": "fc06fbb12655ef0d759c327066cfcff13543cedf459d9c20aab80a86bfaea262",
          "withoutMetadata": "e1ef5ada8d806e5cad1f07d5d8c81c38ea760f25bf06a2ef77051916584967bc",
          "linkedWithoutMetadata": "e1ef5ada8d806e5cad1f07d5d8c81c38ea760f25bf06a2ef77051916584967bc"
        },
        "inherit": [
          "Condition",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "ConditionStoreLibrary"
        ],
        "methods": [
          "initialize(address,address,address)",
          "hashValues(bytes32,address)",
          "fulfill(bytes32,bytes32,address)",
          "wasComputeTriggered(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "conditionStoreManager",
              "offset": 0,
              "slot": "101",
              "type": "t_contract(ConditionStoreManager)9399",
              "contract": "Condition",
              "src": "contracts/conditions/Condition.sol:25"
            },
            {
              "label": "computeExecutionStatus",
              "offset": 0,
              "slot": "102",
              "type": "t_mapping(t_bytes32,t_mapping(t_address,t_bool))",
              "contract": "ComputeExecutionCondition",
              "src": "contracts/conditions/ComputeExecutionCondition.sol:28"
            },
            {
              "label": "agreementStoreManager",
              "offset": 0,
              "slot": "103",
              "type": "t_contract(AgreementStoreManager)7793",
              "contract": "ComputeExecutionCondition",
              "src": "contracts/conditions/ComputeExecutionCondition.sol:30"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(AgreementStoreManager)7793": {
              "label": "contract AgreementStoreManager",
              "numberOfBytes": "20"
            },
            "t_contract(ConditionStoreManager)9399": {
              "label": "contract ConditionStoreManager",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_mapping(t_address,t_bool))": {
              "label": "mapping(bytes32 => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Condition": {
        "src": "contracts/conditions/Condition.sol:23",
        "version": {
          "withMetadata": "c1f8177859553f9a78ce24e2a987fc498ceb0dad5465eb364161af8d3aece6ac",
          "withoutMetadata": "58acb80ecaddfc147b57e20fb62bfdc0fea99cf07c8d36851d43f81877782b3d",
          "linkedWithoutMetadata": "58acb80ecaddfc147b57e20fb62bfdc0fea99cf07c8d36851d43f81877782b3d"
        },
        "inherit": [
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "ConditionStoreLibrary"
        ],
        "methods": [
          "generateId(bytes32,bytes32)",
          "abortByTimeOut(bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "conditionStoreManager",
              "offset": 0,
              "slot": "101",
              "type": "t_contract(ConditionStoreManager)9399",
              "contract": "Condition",
              "src": "contracts/conditions/Condition.sol:25"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ConditionStoreManager)9399": {
              "label": "contract ConditionStoreManager",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ConditionStoreLibrary": {
        "src": "contracts/conditions/ConditionStoreLibrary.sol:20",
        "version": {
          "withMetadata": "8cc9d7c8da4bdcaad615474275e19e90bb4bf68f56c215a9f5f61aa92a87cbb0",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ConditionStoreManager": {
        "src": "contracts/conditions/ConditionStoreManager.sol:30",
        "version": {
          "withMetadata": "2b6423a94574f965ffa4735baf29ab8c6ab5f62459e1988529fde5e3f1e7148f",
          "withoutMetadata": "d0a745a5e824d9b50ffc630a625dc1c8cf29b9012a62f7af1af4f51bdb18ba71",
          "linkedWithoutMetadata": "d0a745a5e824d9b50ffc630a625dc1c8cf29b9012a62f7af1af4f51bdb18ba71"
        },
        "inherit": [
          "Common",
          "AccessControlUpgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "IAccessControlUpgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "ConditionStoreLibrary",
          "EpochLibrary"
        ],
        "methods": [
          "initialize(address,address,address)",
          "getCreateRole()",
          "getNvmConfigAddress()",
          "setNvmConfigAddress(address)",
          "delegateCreateRole(address)",
          "delegateUpdateRole(bytes32,address)",
          "grantProxyRole(address)",
          "revokeProxyRole(address)",
          "createCondition(bytes32,address)",
          "createCondition2(bytes32,address)",
          "createCondition(bytes32,address,uint256,uint256)",
          "updateConditionState(bytes32,uint8)",
          "updateConditionMapping(bytes32,bytes32,bytes32)",
          "updateConditionMappingProxy(bytes32,bytes32,bytes32)",
          "getCondition(bytes32)",
          "getConditionState(bytes32)",
          "getConditionTypeRef(bytes32)",
          "getMappingValue(bytes32,bytes32)",
          "isConditionTimeLocked(bytes32)",
          "isConditionTimedOut(bytes32)"
        ],
        "linkReferences": [
          {
            "src": "contracts/libraries/EpochLibrary.sol",
            "name": "EpochLibrary",
            "length": 20,
            "start": 2230,
            "placeholder": "__$b78708992bd2b6ad851535b2e1a51ed3e2$__"
          },
          {
            "src": "contracts/libraries/EpochLibrary.sol",
            "name": "EpochLibrary",
            "length": 20,
            "start": 2458,
            "placeholder": "__$b78708992bd2b6ad851535b2e1a51ed3e2$__"
          }
        ],
        "errors": [
          {
            "kind": "external-library-linking",
            "name": "EpochLibrary",
            "src": "contracts/libraries/EpochLibrary.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            },
            {
              "label": "_roles",
              "offset": 0,
              "slot": "151",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
              "contract": "AccessControlUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "152",
              "type": "t_array(t_uint256)49_storage",
              "contract": "AccessControlUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:247"
            },
            {
              "label": "createRole",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "ConditionStoreManager",
              "src": "contracts/conditions/ConditionStoreManager.sol:38"
            },
            {
              "label": "conditionList",
              "offset": 0,
              "slot": "202",
              "type": "t_struct(ConditionList)8657_storage",
              "contract": "ConditionStoreManager",
              "src": "contracts/conditions/ConditionStoreManager.sol:39"
            },
            {
              "label": "epochList",
              "offset": 0,
              "slot": "205",
              "type": "t_struct(EpochList)19258_storage",
              "contract": "ConditionStoreManager",
              "src": "contracts/conditions/ConditionStoreManager.sol:40"
            },
            {
              "label": "nvmConfigAddress",
              "offset": 0,
              "slot": "207",
              "type": "t_address",
              "contract": "ConditionStoreManager",
              "src": "contracts/conditions/ConditionStoreManager.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_enum(ConditionState)8630": {
              "label": "enum ConditionStoreLibrary.ConditionState",
              "members": [
                "Uninitialized",
                "Unfulfilled",
                "Fulfilled",
                "Aborted"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_bytes32)": {
              "label": "mapping(bytes32 => bytes32)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_mapping(t_bytes32,t_bytes32))": {
              "label": "mapping(bytes32 => mapping(bytes32 => bytes32))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(Condition)8642_storage)": {
              "label": "mapping(bytes32 => struct ConditionStoreLibrary.Condition)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(Epoch)19249_storage)": {
              "label": "mapping(bytes32 => struct EpochLibrary.Epoch)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
              "numberOfBytes": "32"
            },
            "t_struct(Condition)8642_storage": {
              "label": "struct ConditionStoreLibrary.Condition",
              "members": [
                {
                  "label": "typeRef",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "state",
                  "type": "t_enum(ConditionState)8630",
                  "offset": 20,
                  "slot": "0"
                },
                {
                  "label": "createdBy",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastUpdatedBy",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "blockNumberUpdated",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(ConditionList)8657_storage": {
              "label": "struct ConditionStoreLibrary.ConditionList",
              "members": [
                {
                  "label": "conditions",
                  "type": "t_mapping(t_bytes32,t_struct(Condition)8642_storage)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "map",
                  "type": "t_mapping(t_bytes32,t_mapping(t_bytes32,t_bytes32))",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "conditionIds",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(Epoch)19249_storage": {
              "label": "struct EpochLibrary.Epoch",
              "members": [
                {
                  "label": "timeLock",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "timeOut",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "blockNumber",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(EpochList)19258_storage": {
              "label": "struct EpochLibrary.EpochList",
              "members": [
                {
                  "label": "epochs",
                  "type": "t_mapping(t_bytes32,t_struct(Epoch)19249_storage)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "epochIds",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(RoleData)34_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "HashLockCondition": {
        "src": "contracts/conditions/HashLockCondition.sol:16",
        "version": {
          "withMetadata": "b7ec46c3d1c2abc1ce8bc97c63dd94d43321eedd3e7cc11ddaae168306f79e70",
          "withoutMetadata": "caf6fb784038161568b9bc41a9231801823226d5cc552959a128bc539e2b040c",
          "linkedWithoutMetadata": "caf6fb784038161568b9bc41a9231801823226d5cc552959a128bc539e2b040c"
        },
        "inherit": [
          "Condition",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "ConditionStoreLibrary"
        ],
        "methods": [
          "initialize(address,address)",
          "hashValues(uint256)",
          "hashValues(string)",
          "hashValues(bytes32)",
          "fulfill(bytes32,uint256)",
          "fulfill(bytes32,string)",
          "fulfill(bytes32,bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "conditionStoreManager",
              "offset": 0,
              "slot": "101",
              "type": "t_contract(ConditionStoreManager)9399",
              "contract": "Condition",
              "src": "contracts/conditions/Condition.sol:25"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ConditionStoreManager)9399": {
              "label": "contract ConditionStoreManager",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ICondition": {
        "src": "contracts/conditions/ICondition.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "fulfillProxy(address,bytes32,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ILockPayment": {
        "src": "contracts/conditions/ILockPayment.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "hashValues(bytes32,address,address,uint256[],address[])",
          "fulfill(bytes32,bytes32,address payable,address,uint256[],address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "LockPaymentCondition": {
        "src": "contracts/conditions/LockPaymentCondition.sol:26",
        "version": {
          "withMetadata": "be35371cb15c9ebc6cefc524657f34c6a76ab7113cc73f32f219bebb3d7f802c",
          "withoutMetadata": "5f429b65f74e3efc898e24a9a35f023bdafdf9e50efb954d5b5b9570146401c2",
          "linkedWithoutMetadata": "5f429b65f74e3efc898e24a9a35f023bdafdf9e50efb954d5b5b9570146401c2"
        },
        "inherit": [
          "ICondition",
          "AccessControlUpgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "IAccessControlUpgradeable",
          "Common",
          "Condition",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "ReentrancyGuardUpgradeable",
          "Initializable",
          "ILockPayment"
        ],
        "libraries": [
          "SafeERC20Upgradeable",
          "SafeMathUpgradeable",
          "ConditionStoreLibrary"
        ],
        "methods": [
          "grantProxyRole(address)",
          "revokeProxyRole(address)",
          "grantExternalContractRole(address)",
          "revokeExternalContractRole(address)",
          "initialize(address,address,address)",
          "reinitialize()",
          "hashValues(bytes32,address,address,uint256[],address[])",
          "fulfill(bytes32,bytes32,address payable,address,uint256[],address[])",
          "fulfillExternal(bytes32,bytes32,address payable,address,bytes32,uint256[],address[])",
          "encodeParams(bytes32,address payable,address,uint256[],address[])",
          "fulfillProxy(address,bytes32,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "101",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "102",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "conditionStoreManager",
              "offset": 0,
              "slot": "151",
              "type": "t_contract(ConditionStoreManager)9399",
              "contract": "Condition",
              "src": "contracts/conditions/Condition.sol:25"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "152",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            },
            {
              "label": "_roles",
              "offset": 0,
              "slot": "202",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
              "contract": "AccessControlUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "203",
              "type": "t_array(t_uint256)49_storage",
              "contract": "AccessControlUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:247"
            },
            {
              "label": "didRegistry",
              "offset": 0,
              "slot": "252",
              "type": "t_contract(DIDRegistry)23815",
              "contract": "LockPaymentCondition",
              "src": "contracts/conditions/LockPaymentCondition.sol:31"
            },
            {
              "label": "nvmConfig",
              "offset": 0,
              "slot": "253",
              "type": "t_contract(INVMConfig)17547",
              "contract": "LockPaymentCondition",
              "src": "contracts/conditions/LockPaymentCondition.sol:32"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(ConditionStoreManager)9399": {
              "label": "contract ConditionStoreManager",
              "numberOfBytes": "20"
            },
            "t_contract(DIDRegistry)23815": {
              "label": "contract DIDRegistry",
              "numberOfBytes": "20"
            },
            "t_contract(INVMConfig)17547": {
              "label": "contract INVMConfig",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)34_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "DistributeNFTCollateralCondition": {
        "src": "contracts/conditions/NFTs/DistributeNFTCollateralCondition.sol:19",
        "version": {
          "withMetadata": "29a4473657dce6ed771452d8cb6386b30897821d2584bc62ae8081050c7f18c6",
          "withoutMetadata": "e2f7835e09f7dffef389c74457744d35aa75589e46645a429f203094d57aa33c",
          "linkedWithoutMetadata": "e2f7835e09f7dffef389c74457744d35aa75589e46645a429f203094d57aa33c"
        },
        "inherit": [
          "ReentrancyGuardUpgradeable",
          "Condition",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "ConditionStoreLibrary"
        ],
        "methods": [
          "initialize(address,address,address)",
          "hashValues(bytes32,address,address)",
          "fulfill(bytes32,bytes32,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "conditionStoreManager",
              "offset": 0,
              "slot": "101",
              "type": "t_contract(ConditionStoreManager)9399",
              "contract": "Condition",
              "src": "contracts/conditions/Condition.sol:25"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "102",
              "type": "t_uint256",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "103",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
            },
            {
              "label": "aaveCreditVault",
              "offset": 0,
              "slot": "152",
              "type": "t_contract(AaveCreditVault)15417",
              "contract": "DistributeNFTCollateralCondition",
              "src": "contracts/conditions/NFTs/DistributeNFTCollateralCondition.sol:23"
            },
            {
              "label": "_lockConditionAddress",
              "offset": 0,
              "slot": "153",
              "type": "t_address",
              "contract": "DistributeNFTCollateralCondition",
              "src": "contracts/conditions/NFTs/DistributeNFTCollateralCondition.sol:25"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(AaveCreditVault)15417": {
              "label": "contract AaveCreditVault",
              "numberOfBytes": "20"
            },
            "t_contract(ConditionStoreManager)9399": {
              "label": "contract ConditionStoreManager",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "INFTAccess": {
        "src": "contracts/conditions/NFTs/INFTAccess.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "hashValues(bytes32,address,address)",
          "fulfill(bytes32,bytes32,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "INFTHolder": {
        "src": "contracts/conditions/NFTs/INFTHolder.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "hashValues(bytes32,address,uint256,address)",
          "fulfill(bytes32,bytes32,address,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "INFTLock": {
        "src": "contracts/conditions/NFTs/INFTLock.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "hashValues(bytes32,address,uint256,address)",
          "hashValuesMarked(bytes32,address,uint256,address,address)",
          "fulfill(bytes32,bytes32,address,uint256,address)",
          "fulfillMarked(bytes32,bytes32,address,uint256,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ITransferNFT": {
        "src": "contracts/conditions/NFTs/ITransferNFT.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "hashValues(bytes32,address,address,uint256,bytes32,address,bool)",
          "fulfill(bytes32,bytes32,address,uint256,bytes32,address,bool)",
          "getNFTDefaultAddress()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "NFT721HolderCondition": {
        "src": "contracts/conditions/NFTs/NFT721HolderCondition.sol:18",
        "version": {
          "withMetadata": "1e546ef5471c08e3bce1e1d2f32ffe20d1708860210fb95341bf1922dab44a83",
          "withoutMetadata": "d9bdd5932150ec76709d18ef95706fc3017c6acd5738c146776f5fb55e7d12ad",
          "linkedWithoutMetadata": "d9bdd5932150ec76709d18ef95706fc3017c6acd5738c146776f5fb55e7d12ad"
        },
        "inherit": [
          "INFTHolder",
          "Condition",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "ConditionStoreLibrary"
        ],
        "methods": [
          "initialize(address,address)",
          "hashValues(bytes32,address,uint256,address)",
          "fulfill(bytes32,bytes32,address,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "conditionStoreManager",
              "offset": 0,
              "slot": "101",
              "type": "t_contract(ConditionStoreManager)9399",
              "contract": "Condition",
              "src": "contracts/conditions/Condition.sol:25"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ConditionStoreManager)9399": {
              "label": "contract ConditionStoreManager",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "NFT721LockCondition": {
        "src": "contracts/conditions/NFTs/NFT721LockCondition.sol:19",
        "version": {
          "withMetadata": "611bfc3c2f0596b31745f88431a57fc663ee396f561caff4dfeb9b1bf6be4ad3",
          "withoutMetadata": "28cfab553744a234104fa0cbe560b792bdc6ff5ee83af720e118c4c635aa27ff",
          "linkedWithoutMetadata": "28cfab553744a234104fa0cbe560b792bdc6ff5ee83af720e118c4c635aa27ff"
        },
        "inherit": [
          "IERC721ReceiverUpgradeable",
          "ReentrancyGuardUpgradeable",
          "INFTLock",
          "Condition",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "ConditionStoreLibrary"
        ],
        "methods": [
          "initialize(address,address)",
          "hashValues(bytes32,address,uint256,address)",
          "hashValuesMarked(bytes32,address,uint256,address,address)",
          "fulfillMarked(bytes32,bytes32,address,uint256,address,address)",
          "fulfill(bytes32,bytes32,address,uint256,address)",
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "conditionStoreManager",
              "offset": 0,
              "slot": "101",
              "type": "t_contract(ConditionStoreManager)9399",
              "contract": "Condition",
              "src": "contracts/conditions/Condition.sol:25"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "102",
              "type": "t_uint256",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "103",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ConditionStoreManager)9399": {
              "label": "contract ConditionStoreManager",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "NFTAccessCondition": {
        "src": "contracts/conditions/NFTs/NFTAccessCondition.sol:19",
        "version": {
          "withMetadata": "da8c834079cd69806fd4fc7acc75c2726fb05fceb826825ea8950bb2267c3e89",
          "withoutMetadata": "a312dd573bb89501701235998f9cfb8cb1ff29117daeb2e13654e098717dffe4",
          "linkedWithoutMetadata": "a312dd573bb89501701235998f9cfb8cb1ff29117daeb2e13654e098717dffe4"
        },
        "inherit": [
          "INFTAccess",
          "Condition",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "ConditionStoreLibrary"
        ],
        "methods": [
          "initialize(address,address,address)",
          "hashValues(bytes32,address)",
          "hashValues(bytes32,address,address)",
          "fulfill(bytes32,bytes32,address)",
          "fulfill(bytes32,bytes32,address,address)",
          "grantPermission(address,bytes32)",
          "checkPermissions(address,bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "conditionStoreManager",
              "offset": 0,
              "slot": "101",
              "type": "t_contract(ConditionStoreManager)9399",
              "contract": "Condition",
              "src": "contracts/conditions/Condition.sol:25"
            },
            {
              "label": "nftPermissions",
              "offset": 0,
              "slot": "102",
              "type": "t_mapping(t_bytes32,t_struct(DocumentPermission)11415_storage)",
              "contract": "NFTAccessCondition",
              "src": "contracts/conditions/NFTs/NFTAccessCondition.sol:28"
            },
            {
              "label": "didRegistry",
              "offset": 0,
              "slot": "103",
              "type": "t_contract(DIDRegistry)23815",
              "contract": "NFTAccessCondition",
              "src": "contracts/conditions/NFTs/NFTAccessCondition.sol:29"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(ConditionStoreManager)9399": {
              "label": "contract ConditionStoreManager",
              "numberOfBytes": "20"
            },
            "t_contract(DIDRegistry)23815": {
              "label": "contract DIDRegistry",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(DocumentPermission)11415_storage)": {
              "label": "mapping(bytes32 => struct NFTAccessCondition.DocumentPermission)",
              "numberOfBytes": "32"
            },
            "t_struct(DocumentPermission)11415_storage": {
              "label": "struct NFTAccessCondition.DocumentPermission",
              "members": [
                {
                  "label": "agreementIdDeprecated",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "permission",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "NFTHolderCondition": {
        "src": "contracts/conditions/NFTs/NFTHolderCondition.sol:18",
        "version": {
          "withMetadata": "58c2f249178e5e214e06d0b3634aec08accad59f2c8b3443c7c9a10f906f8ab9",
          "withoutMetadata": "edde4d996a68a4bd75da683dbdab84455947bcce6f5c06dc483ec5386e5dc0f1",
          "linkedWithoutMetadata": "edde4d996a68a4bd75da683dbdab84455947bcce6f5c06dc483ec5386e5dc0f1"
        },
        "inherit": [
          "INFTHolder",
          "Condition",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "ConditionStoreLibrary"
        ],
        "methods": [
          "initialize(address,address,address)",
          "hashValues(bytes32,address,uint256)",
          "hashValues(bytes32,address,uint256,address)",
          "fulfill(bytes32,bytes32,address,uint256)",
          "fulfill(bytes32,bytes32,address,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "conditionStoreManager",
              "offset": 0,
              "slot": "101",
              "type": "t_contract(ConditionStoreManager)9399",
              "contract": "Condition",
              "src": "contracts/conditions/Condition.sol:25"
            },
            {
              "label": "erc1155",
              "offset": 0,
              "slot": "102",
              "type": "t_contract(ERC1155BurnableUpgradeable)2253",
              "contract": "NFTHolderCondition",
              "src": "contracts/conditions/NFTs/NFTHolderCondition.sol:20"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ConditionStoreManager)9399": {
              "label": "contract ConditionStoreManager",
              "numberOfBytes": "20"
            },
            "t_contract(ERC1155BurnableUpgradeable)2253": {
              "label": "contract ERC1155BurnableUpgradeable",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "NFTLockCondition": {
        "src": "contracts/conditions/NFTs/NFTLockCondition.sol:19",
        "version": {
          "withMetadata": "0f9080693cfa7f0b27fd371a8d17aa20195aea71d1d0914b5de9a0da367c6346",
          "withoutMetadata": "749b8e2c8a5859a9a6d143aec095aebe860f3829f59cfe4cc94613a72c71ee33",
          "linkedWithoutMetadata": "749b8e2c8a5859a9a6d143aec095aebe860f3829f59cfe4cc94613a72c71ee33"
        },
        "inherit": [
          "IERC1155ReceiverUpgradeable",
          "IERC165Upgradeable",
          "ReentrancyGuardUpgradeable",
          "INFTLock",
          "Condition",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "ConditionStoreLibrary"
        ],
        "methods": [
          "initialize(address,address,address)",
          "hashValues(bytes32,address,uint256)",
          "hashValues(bytes32,address,uint256,address)",
          "hashValuesMarked(bytes32,address,uint256,address,address)",
          "fulfill(bytes32,bytes32,address,uint256)",
          "fulfill(bytes32,bytes32,address,uint256,address)",
          "fulfillMarked(bytes32,bytes32,address,uint256,address,address)",
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)",
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "conditionStoreManager",
              "offset": 0,
              "slot": "101",
              "type": "t_contract(ConditionStoreManager)9399",
              "contract": "Condition",
              "src": "contracts/conditions/Condition.sol:25"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "102",
              "type": "t_uint256",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "103",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
            },
            {
              "label": "erc1155",
              "offset": 0,
              "slot": "152",
              "type": "t_contract(IERC1155Upgradeable)2164",
              "contract": "NFTLockCondition",
              "src": "contracts/conditions/NFTs/NFTLockCondition.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ConditionStoreManager)9399": {
              "label": "contract ConditionStoreManager",
              "numberOfBytes": "20"
            },
            "t_contract(IERC1155Upgradeable)2164": {
              "label": "contract IERC1155Upgradeable",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "TransferNFT721Condition": {
        "src": "contracts/conditions/NFTs/TransferNFT721Condition.sol:20",
        "version": {
          "withMetadata": "07329d0bf38395292c9617c58df5a77bb6a93d906721a860bbe530fa9cdbb5c0",
          "withoutMetadata": "db8ebcecf5e0ebdc27808bed67dac887ade639d57c58bb48626ce3cb0d82352a",
          "linkedWithoutMetadata": "db8ebcecf5e0ebdc27808bed67dac887ade639d57c58bb48626ce3cb0d82352a"
        },
        "inherit": [
          "AccessControlUpgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "IAccessControlUpgradeable",
          "ReentrancyGuardUpgradeable",
          "ITransferNFT",
          "Condition",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "ConditionStoreLibrary"
        ],
        "methods": [
          "grantProxyRole(address)",
          "revokeProxyRole(address)",
          "initialize(address,address,address,address,address)",
          "getNFTDefaultAddress()",
          "hashValues(bytes32,address,address,uint256,bytes32,address,bool)",
          "encodeParams(bytes32,address,address,uint256,bytes32,address,bool)",
          "fulfill(bytes32,bytes32,address,uint256,bytes32,address,bool)",
          "fulfillProxy(address,bytes32,bytes)",
          "fulfillForDelegate(bytes32,bytes32,address,address,uint256,bytes32,bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "conditionStoreManager",
              "offset": 0,
              "slot": "101",
              "type": "t_contract(ConditionStoreManager)9399",
              "contract": "Condition",
              "src": "contracts/conditions/Condition.sol:25"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "102",
              "type": "t_uint256",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "103",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "152",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            },
            {
              "label": "_roles",
              "offset": 0,
              "slot": "202",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
              "contract": "AccessControlUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "203",
              "type": "t_array(t_uint256)49_storage",
              "contract": "AccessControlUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:247"
            },
            {
              "label": "erc721",
              "offset": 0,
              "slot": "252",
              "type": "t_contract(NFT721Upgradeable)31422",
              "contract": "TransferNFT721Condition",
              "src": "contracts/conditions/NFTs/TransferNFT721Condition.sol:26"
            },
            {
              "label": "_lockConditionAddress",
              "offset": 0,
              "slot": "253",
              "type": "t_address",
              "contract": "TransferNFT721Condition",
              "src": "contracts/conditions/NFTs/TransferNFT721Condition.sol:28"
            },
            {
              "label": "didRegistry",
              "offset": 0,
              "slot": "254",
              "type": "t_contract(DIDRegistry)23815",
              "contract": "TransferNFT721Condition",
              "src": "contracts/conditions/NFTs/TransferNFT721Condition.sol:32"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(ConditionStoreManager)9399": {
              "label": "contract ConditionStoreManager",
              "numberOfBytes": "20"
            },
            "t_contract(DIDRegistry)23815": {
              "label": "contract DIDRegistry",
              "numberOfBytes": "20"
            },
            "t_contract(NFT721Upgradeable)31422": {
              "label": "contract NFT721Upgradeable",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)34_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "TransferNFTCondition": {
        "src": "contracts/conditions/NFTs/TransferNFTCondition.sol:21",
        "version": {
          "withMetadata": "9e561b5bdf3f964c0488931a8dc2b5222bb8cce977fd060270f90e0314b9a631",
          "withoutMetadata": "f2a66f198290d27e10d89c2747328d1c2dfa02f7cad005241084fa6e7a8a3ab7",
          "linkedWithoutMetadata": "f2a66f198290d27e10d89c2747328d1c2dfa02f7cad005241084fa6e7a8a3ab7"
        },
        "inherit": [
          "ICondition",
          "AccessControlUpgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "IAccessControlUpgradeable",
          "ReentrancyGuardUpgradeable",
          "ITransferNFT",
          "Condition",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "ConditionStoreLibrary"
        ],
        "methods": [
          "grantProxyRole(address)",
          "revokeProxyRole(address)",
          "initialize(address,address,address,address,address)",
          "grantMarketRole(address)",
          "revokeMarketRole(address)",
          "getNFTDefaultAddress()",
          "hashValues(bytes32,address,address,uint256,bytes32)",
          "hashValues(bytes32,address,address,uint256,bytes32,address,bool)",
          "fulfill(bytes32,bytes32,address,uint256,bytes32)",
          "encodeParams(bytes32,address,address,uint256,bytes32,address,bool)",
          "fulfillProxy(address,bytes32,bytes)",
          "fulfill(bytes32,bytes32,address,uint256,bytes32,address,bool)",
          "fulfillForDelegate(bytes32,bytes32,address,address,uint256,bytes32,bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "conditionStoreManager",
              "offset": 0,
              "slot": "101",
              "type": "t_contract(ConditionStoreManager)9399",
              "contract": "Condition",
              "src": "contracts/conditions/Condition.sol:25"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "102",
              "type": "t_uint256",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "103",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "152",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            },
            {
              "label": "_roles",
              "offset": 0,
              "slot": "202",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
              "contract": "AccessControlUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "203",
              "type": "t_array(t_uint256)49_storage",
              "contract": "AccessControlUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:247"
            },
            {
              "label": "erc1155",
              "offset": 0,
              "slot": "252",
              "type": "t_contract(NFTUpgradeable)31136",
              "contract": "TransferNFTCondition",
              "src": "contracts/conditions/NFTs/TransferNFTCondition.sol:27"
            },
            {
              "label": "didRegistry",
              "offset": 0,
              "slot": "253",
              "type": "t_contract(DIDRegistry)23815",
              "contract": "TransferNFTCondition",
              "src": "contracts/conditions/NFTs/TransferNFTCondition.sol:29"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(ConditionStoreManager)9399": {
              "label": "contract ConditionStoreManager",
              "numberOfBytes": "20"
            },
            "t_contract(DIDRegistry)23815": {
              "label": "contract DIDRegistry",
              "numberOfBytes": "20"
            },
            "t_contract(NFTUpgradeable)31136": {
              "label": "contract NFTUpgradeable",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)34_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SignCondition": {
        "src": "contracts/conditions/SignCondition.sol:17",
        "version": {
          "withMetadata": "57347b52e3ee5f4a22b27c982186fab57b0b931913bffb1f95212c671f50a00e",
          "withoutMetadata": "438312acd3600844d9bc7bdbe7b9694bf6c5e3de9d89c0a24f45e9b3369071a3",
          "linkedWithoutMetadata": "438312acd3600844d9bc7bdbe7b9694bf6c5e3de9d89c0a24f45e9b3369071a3"
        },
        "inherit": [
          "Condition",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "ECDSAUpgradeable",
          "ConditionStoreLibrary"
        ],
        "methods": [
          "initialize(address,address)",
          "hashValues(bytes32,address)",
          "fulfill(bytes32,bytes32,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "conditionStoreManager",
              "offset": 0,
              "slot": "101",
              "type": "t_contract(ConditionStoreManager)9399",
              "contract": "Condition",
              "src": "contracts/conditions/Condition.sol:25"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ConditionStoreManager)9399": {
              "label": "contract ConditionStoreManager",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ThresholdCondition": {
        "src": "contracts/conditions/ThresholdCondition.sol:21",
        "version": {
          "withMetadata": "b3f02251a5b3881996f6e8a1a06f4d693de13390a43998532f323f8531c7b5e6",
          "withoutMetadata": "1623a2f0102bd6dbf5346cc87862ef359f4daf83f22c2ee67d3b414f55b83a28",
          "linkedWithoutMetadata": "1623a2f0102bd6dbf5346cc87862ef359f4daf83f22c2ee67d3b414f55b83a28"
        },
        "inherit": [
          "Condition",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "ConditionStoreLibrary"
        ],
        "methods": [
          "initialize(address,address)",
          "hashValues(bytes32[],uint256)",
          "fulfill(bytes32,bytes32[],uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "conditionStoreManager",
              "offset": 0,
              "slot": "101",
              "type": "t_contract(ConditionStoreManager)9399",
              "contract": "Condition",
              "src": "contracts/conditions/Condition.sol:25"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ConditionStoreManager)9399": {
              "label": "contract ConditionStoreManager",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "TransferDIDOwnershipCondition": {
        "src": "contracts/conditions/TransferDIDOwnershipCondition.sol:18",
        "version": {
          "withMetadata": "406a45eeeabb075a75cabdf03f42aae06068e18897feba840d2156b6b40c122e",
          "withoutMetadata": "58cf464a35e093087053d23e2c66a2c7df340de4a62a5607347c59968c7110ff",
          "linkedWithoutMetadata": "58cf464a35e093087053d23e2c66a2c7df340de4a62a5607347c59968c7110ff"
        },
        "inherit": [
          "Condition",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "ConditionStoreLibrary"
        ],
        "methods": [
          "initialize(address,address,address)",
          "hashValues(bytes32,address)",
          "fulfill(bytes32,bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "conditionStoreManager",
              "offset": 0,
              "slot": "101",
              "type": "t_contract(ConditionStoreManager)9399",
              "contract": "Condition",
              "src": "contracts/conditions/Condition.sol:25"
            },
            {
              "label": "didRegistry",
              "offset": 0,
              "slot": "102",
              "type": "t_contract(DIDRegistry)23815",
              "contract": "TransferDIDOwnershipCondition",
              "src": "contracts/conditions/TransferDIDOwnershipCondition.sol:22"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ConditionStoreManager)9399": {
              "label": "contract ConditionStoreManager",
              "numberOfBytes": "20"
            },
            "t_contract(DIDRegistry)23815": {
              "label": "contract DIDRegistry",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "WhitelistingCondition": {
        "src": "contracts/conditions/WhitelistingCondition.sol:18",
        "version": {
          "withMetadata": "5dc5f1ab56a6fe1867a4282ee9c0fbbf90227b27bf97af18f2d5834755b467a6",
          "withoutMetadata": "3ca74ce064d0e4d8404f1dce20cbeb255ae5daa2cdc21df8f4c5adef6f257abb",
          "linkedWithoutMetadata": "3ca74ce064d0e4d8404f1dce20cbeb255ae5daa2cdc21df8f4c5adef6f257abb"
        },
        "inherit": [
          "Common",
          "Condition",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "ConditionStoreLibrary"
        ],
        "methods": [
          "initialize(address,address)",
          "hashValues(address,bytes32)",
          "fulfill(bytes32,address,bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "conditionStoreManager",
              "offset": 0,
              "slot": "101",
              "type": "t_contract(ConditionStoreManager)9399",
              "contract": "Condition",
              "src": "contracts/conditions/Condition.sol:25"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ConditionStoreManager)9399": {
              "label": "contract ConditionStoreManager",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "AaveBorrowCondition": {
        "src": "contracts/conditions/defi/aave/AaveBorrowCondition.sol:18",
        "version": {
          "withMetadata": "6245db90bb2f55ac3df5b554f96cca1ec813314062051c3b5e8ac0511f1324e8",
          "withoutMetadata": "2e23ac28dc0c8cc0b0b69404b6a1b1ae013edd732ba73f810db01725ea422a2d",
          "linkedWithoutMetadata": "2e23ac28dc0c8cc0b0b69404b6a1b1ae013edd732ba73f810db01725ea422a2d"
        },
        "inherit": [
          "Common",
          "Condition",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "ConditionStoreLibrary"
        ],
        "methods": [
          "initialize(address,address)",
          "hashValues(bytes32,address,address,uint256,uint256)",
          "fulfill(bytes32,bytes32,address,address,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "conditionStoreManager",
              "offset": 0,
              "slot": "101",
              "type": "t_contract(ConditionStoreManager)9399",
              "contract": "Condition",
              "src": "contracts/conditions/Condition.sol:25"
            },
            {
              "label": "aaveCreditVault",
              "offset": 0,
              "slot": "102",
              "type": "t_contract(AaveCreditVault)15417",
              "contract": "AaveBorrowCondition",
              "src": "contracts/conditions/defi/aave/AaveBorrowCondition.sol:20"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(AaveCreditVault)15417": {
              "label": "contract AaveCreditVault",
              "numberOfBytes": "20"
            },
            "t_contract(ConditionStoreManager)9399": {
              "label": "contract ConditionStoreManager",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "AaveCollateralDepositCondition": {
        "src": "contracts/conditions/defi/aave/AaveCollateralDepositCondition.sol:24",
        "version": {
          "withMetadata": "9e9800937bc54add396421fca96ac5876d91d21c48d72df75471dd2b0315f122",
          "withoutMetadata": "b4386379e85d4baabf389cf3706ca115825c8c64300eac5f8c5684f856bf8f5e",
          "linkedWithoutMetadata": "b4386379e85d4baabf389cf3706ca115825c8c64300eac5f8c5684f856bf8f5e"
        },
        "inherit": [
          "ReentrancyGuardUpgradeable",
          "Common",
          "Condition",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeERC20Upgradeable",
          "ConditionStoreLibrary"
        ],
        "methods": [
          "initialize(address,address)",
          "hashValues(bytes32,address,address,uint256,address,uint256,uint256)",
          "fulfill(bytes32,bytes32,address,address,uint256,address,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "conditionStoreManager",
              "offset": 0,
              "slot": "101",
              "type": "t_contract(ConditionStoreManager)9399",
              "contract": "Condition",
              "src": "contracts/conditions/Condition.sol:25"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "102",
              "type": "t_uint256",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "103",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
            },
            {
              "label": "aaveCreditVault",
              "offset": 0,
              "slot": "152",
              "type": "t_contract(AaveCreditVault)15417",
              "contract": "AaveCollateralDepositCondition",
              "src": "contracts/conditions/defi/aave/AaveCollateralDepositCondition.sol:26"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(AaveCreditVault)15417": {
              "label": "contract AaveCreditVault",
              "numberOfBytes": "20"
            },
            "t_contract(ConditionStoreManager)9399": {
              "label": "contract ConditionStoreManager",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "AaveCollateralWithdrawCondition": {
        "src": "contracts/conditions/defi/aave/AaveCollateralWithdrawCondition.sol:22",
        "version": {
          "withMetadata": "4f62df5c77a31b90bd27e58c1b0400d6fd3c5d239cdaa8a9661bdfd6015267ed",
          "withoutMetadata": "33fa0f9f72ef4a50b84b05244f454e76d74ef779c391318a17db12566ab87222",
          "linkedWithoutMetadata": "33fa0f9f72ef4a50b84b05244f454e76d74ef779c391318a17db12566ab87222"
        },
        "inherit": [
          "ReentrancyGuardUpgradeable",
          "Common",
          "Condition",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "ConditionStoreLibrary"
        ],
        "methods": [
          "initialize(address,address)",
          "hashValues(bytes32,address,address)",
          "fulfill(bytes32,bytes32,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "conditionStoreManager",
              "offset": 0,
              "slot": "101",
              "type": "t_contract(ConditionStoreManager)9399",
              "contract": "Condition",
              "src": "contracts/conditions/Condition.sol:25"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "102",
              "type": "t_uint256",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "103",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
            },
            {
              "label": "aaveCreditVault",
              "offset": 0,
              "slot": "152",
              "type": "t_contract(AaveCreditVault)15417",
              "contract": "AaveCollateralWithdrawCondition",
              "src": "contracts/conditions/defi/aave/AaveCollateralWithdrawCondition.sol:27"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(AaveCreditVault)15417": {
              "label": "contract AaveCreditVault",
              "numberOfBytes": "20"
            },
            "t_contract(ConditionStoreManager)9399": {
              "label": "contract ConditionStoreManager",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "AaveCreditVault": {
        "src": "contracts/conditions/defi/aave/AaveCreditVault.sol:15",
        "version": {
          "withMetadata": "431993820dffc56bd837f6cd35ec46e6f3bcc6a46310b73f96c0819e68ce042e",
          "withoutMetadata": "0521c045bd90039c83fd8cae3ae1f35e14650789be8c3a73ee2fc476c0f73bf6",
          "linkedWithoutMetadata": "0521c045bd90039c83fd8cae3ae1f35e14650789be8c3a73ee2fc476c0f73bf6"
        },
        "inherit": [
          "AccessControlUpgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "IAccessControlUpgradeable",
          "ContextUpgradeable",
          "IERC721ReceiverUpgradeable",
          "ReentrancyGuardUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeERC20"
        ],
        "methods": [
          "initialize(address,address,address,uint256,uint256,address,address,address,address[])",
          "isLender(address)",
          "isBorrower(address)",
          "deposit(address,uint256)",
          "approveBorrower(address,uint256,address,uint256)",
          "delegatedAmount(address,address,uint256)",
          "borrow(address,uint256,address,uint256)",
          "repay(address,uint256,bytes32)",
          "setRepayConditionId(bytes32)",
          "getBorrowedAmount()",
          "getAssetPrice(address)",
          "getCreditAssetDebt()",
          "getActualCreditDebt()",
          "getTotalActualDebt()",
          "withdrawCollateral(address,address)",
          "transferNFT(uint256,address)",
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            },
            {
              "label": "_roles",
              "offset": 0,
              "slot": "151",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
              "contract": "AccessControlUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "152",
              "type": "t_array(t_uint256)49_storage",
              "contract": "AccessControlUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:247"
            },
            {
              "label": "lendingPool",
              "offset": 0,
              "slot": "201",
              "type": "t_contract(ILendingPool)18444",
              "contract": "AaveCreditVault",
              "src": "contracts/conditions/defi/aave/AaveCreditVault.sol:23"
            },
            {
              "label": "dataProvider",
              "offset": 0,
              "slot": "202",
              "type": "t_contract(IProtocolDataProvider)17924",
              "contract": "AaveCreditVault",
              "src": "contracts/conditions/defi/aave/AaveCreditVault.sol:24"
            },
            {
              "label": "weth",
              "offset": 0,
              "slot": "203",
              "type": "t_contract(IWETHGateway)18749",
              "contract": "AaveCreditVault",
              "src": "contracts/conditions/defi/aave/AaveCreditVault.sol:25"
            },
            {
              "label": "addressProvider",
              "offset": 0,
              "slot": "204",
              "type": "t_contract(ILendingPoolAddressesProvider)18072",
              "contract": "AaveCreditVault",
              "src": "contracts/conditions/defi/aave/AaveCreditVault.sol:26"
            },
            {
              "label": "priceOracle",
              "offset": 0,
              "slot": "205",
              "type": "t_contract(IPriceOracleGetter)17812",
              "contract": "AaveCreditVault",
              "src": "contracts/conditions/defi/aave/AaveCreditVault.sol:27"
            },
            {
              "label": "borrowedAsset",
              "offset": 0,
              "slot": "206",
              "type": "t_address",
              "contract": "AaveCreditVault",
              "src": "contracts/conditions/defi/aave/AaveCreditVault.sol:28"
            },
            {
              "label": "borrowedAmount",
              "offset": 0,
              "slot": "207",
              "type": "t_uint256",
              "contract": "AaveCreditVault",
              "src": "contracts/conditions/defi/aave/AaveCreditVault.sol:29"
            },
            {
              "label": "nvmFee",
              "offset": 0,
              "slot": "208",
              "type": "t_uint256",
              "contract": "AaveCreditVault",
              "src": "contracts/conditions/defi/aave/AaveCreditVault.sol:30"
            },
            {
              "label": "agreementFee",
              "offset": 0,
              "slot": "209",
              "type": "t_uint256",
              "contract": "AaveCreditVault",
              "src": "contracts/conditions/defi/aave/AaveCreditVault.sol:31"
            },
            {
              "label": "treasuryAddress",
              "offset": 0,
              "slot": "210",
              "type": "t_address",
              "contract": "AaveCreditVault",
              "src": "contracts/conditions/defi/aave/AaveCreditVault.sol:33"
            },
            {
              "label": "borrower",
              "offset": 0,
              "slot": "211",
              "type": "t_address",
              "contract": "AaveCreditVault",
              "src": "contracts/conditions/defi/aave/AaveCreditVault.sol:34"
            },
            {
              "label": "lender",
              "offset": 0,
              "slot": "212",
              "type": "t_address",
              "contract": "AaveCreditVault",
              "src": "contracts/conditions/defi/aave/AaveCreditVault.sol:35"
            },
            {
              "label": "repayConditionId",
              "offset": 0,
              "slot": "213",
              "type": "t_bytes32",
              "contract": "AaveCreditVault",
              "src": "contracts/conditions/defi/aave/AaveCreditVault.sol:36"
            },
            {
              "label": "nftId",
              "offset": 0,
              "slot": "214",
              "type": "t_uint256",
              "contract": "AaveCreditVault",
              "src": "contracts/conditions/defi/aave/AaveCreditVault.sol:37"
            },
            {
              "label": "nftAddress",
              "offset": 0,
              "slot": "215",
              "type": "t_address",
              "contract": "AaveCreditVault",
              "src": "contracts/conditions/defi/aave/AaveCreditVault.sol:38"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(ILendingPool)18444": {
              "label": "contract ILendingPool",
              "numberOfBytes": "20"
            },
            "t_contract(ILendingPoolAddressesProvider)18072": {
              "label": "contract ILendingPoolAddressesProvider",
              "numberOfBytes": "20"
            },
            "t_contract(IPriceOracleGetter)17812": {
              "label": "contract IPriceOracleGetter",
              "numberOfBytes": "20"
            },
            "t_contract(IProtocolDataProvider)17924": {
              "label": "contract IProtocolDataProvider",
              "numberOfBytes": "20"
            },
            "t_contract(IWETHGateway)18749": {
              "label": "contract IWETHGateway",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)34_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "AaveRepayCondition": {
        "src": "contracts/conditions/defi/aave/AaveRepayCondition.sol:21",
        "version": {
          "withMetadata": "6bfe4bb0b43f157989225e37cd61866ca6fe6c2e58f07f96cbb85991ac73d9b0",
          "withoutMetadata": "e47f6f3f27ce5bbe99e816001cfe359118d15d954ce9c006d3f5367b2cd60d86",
          "linkedWithoutMetadata": "e47f6f3f27ce5bbe99e816001cfe359118d15d954ce9c006d3f5367b2cd60d86"
        },
        "inherit": [
          "Common",
          "Condition",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "SafeERC20Upgradeable",
          "ConditionStoreLibrary"
        ],
        "methods": [
          "initialize(address,address)",
          "hashValues(bytes32,address,address,uint256,uint256)",
          "fulfill(bytes32,bytes32,address,address,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "conditionStoreManager",
              "offset": 0,
              "slot": "101",
              "type": "t_contract(ConditionStoreManager)9399",
              "contract": "Condition",
              "src": "contracts/conditions/Condition.sol:25"
            },
            {
              "label": "aaveCreditVault",
              "offset": 0,
              "slot": "102",
              "type": "t_contract(AaveCreditVault)15417",
              "contract": "AaveRepayCondition",
              "src": "contracts/conditions/defi/aave/AaveRepayCondition.sol:25"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(AaveCreditVault)15417": {
              "label": "contract AaveCreditVault",
              "numberOfBytes": "20"
            },
            "t_contract(ConditionStoreManager)9399": {
              "label": "contract ConditionStoreManager",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "EscrowPaymentCondition": {
        "src": "contracts/conditions/rewards/EscrowPaymentCondition.sol:24",
        "version": {
          "withMetadata": "8f73e64cf0b78c4658ff9baf3ce4172b81bc5e59a11212dfb239fef491e24d7e",
          "withoutMetadata": "7f3e384146367cab1b8ab472109ea367f9a046c7b68dd3f5bb1159567077e3a6",
          "linkedWithoutMetadata": "7f3e384146367cab1b8ab472109ea367f9a046c7b68dd3f5bb1159567077e3a6"
        },
        "inherit": [
          "ReentrancyGuardUpgradeable",
          "Common",
          "Reward",
          "Condition",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeERC20Upgradeable",
          "ConditionStoreLibrary"
        ],
        "methods": [
          "()",
          "initialize(address,address)",
          "hashValuesMulti(bytes32,uint256[],address[],address,address,address,bytes32,bytes32[])",
          "encodeParams(bytes32,uint256[],address[],address,address,address,bytes32,bytes32[])",
          "hashValues(bytes32,uint256[],address[],address,address,address,bytes32,bytes32)",
          "hashValuesLockPayment(bytes32,address,address,uint256[],address[])",
          "fulfillMulti(bytes32,bytes32,uint256[],address[],address,address,address,bytes32,bytes32[])",
          "fulfill(bytes32,bytes32,uint256[],address[],address,address,address,bytes32,bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "conditionStoreManager",
              "offset": 0,
              "slot": "101",
              "type": "t_contract(ConditionStoreManager)9399",
              "contract": "Condition",
              "src": "contracts/conditions/Condition.sol:25"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "102",
              "type": "t_uint256",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "103",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ConditionStoreManager)9399": {
              "label": "contract ConditionStoreManager",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "INFTEscrow": {
        "src": "contracts/conditions/rewards/INFTEscrow.sol:19",
        "version": {
          "withMetadata": "f67e890633d2a71c7ba3c99a0b58514b9ea51ec61d1f970c89dd14dc33e9b200",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "NFT721EscrowPaymentCondition": {
        "src": "contracts/conditions/rewards/NFT721EscrowPaymentCondition.sol:23",
        "version": {
          "withMetadata": "42193fbf204253250d4221aa5a140d9e63bd53972dc1e2a4e408fa4fa534ed63",
          "withoutMetadata": "621a4596d3894f284d4fae5fa8cf2dd31b5a2c991a647c3fb651ed2f08c8587b",
          "linkedWithoutMetadata": "621a4596d3894f284d4fae5fa8cf2dd31b5a2c991a647c3fb651ed2f08c8587b"
        },
        "inherit": [
          "ReentrancyGuardUpgradeable",
          "IERC721ReceiverUpgradeable",
          "Common",
          "INFTEscrow",
          "Reward",
          "Condition",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "ConditionStoreLibrary"
        ],
        "methods": [
          "()",
          "initialize(address,address)",
          "hashValues(bytes32,uint256,address,address,address,address,bytes32,bytes32[])",
          "hashValuesLockPayment(bytes32,address,address,uint256,address)",
          "fulfill(bytes32,bytes32,uint256,address,address,address,address,bytes32,bytes32[])",
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "conditionStoreManager",
              "offset": 0,
              "slot": "101",
              "type": "t_contract(ConditionStoreManager)9399",
              "contract": "Condition",
              "src": "contracts/conditions/Condition.sol:25"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "102",
              "type": "t_uint256",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "103",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ConditionStoreManager)9399": {
              "label": "contract ConditionStoreManager",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "NFTEscrowPaymentCondition": {
        "src": "contracts/conditions/rewards/NFTEscrowPaymentCondition.sol:24",
        "version": {
          "withMetadata": "15ea983e3cba34fafc1b2621e7db591ba10103259e921ffaf5cbc4495cc2f84b",
          "withoutMetadata": "1910c5a1be04d9a7719699720cd8eff98f7fc6ac3d1d454e566d6e6d1320ed55",
          "linkedWithoutMetadata": "1910c5a1be04d9a7719699720cd8eff98f7fc6ac3d1d454e566d6e6d1320ed55"
        },
        "inherit": [
          "IERC1155ReceiverUpgradeable",
          "IERC165Upgradeable",
          "ReentrancyGuardUpgradeable",
          "Common",
          "INFTEscrow",
          "Reward",
          "Condition",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "ConditionStoreLibrary"
        ],
        "methods": [
          "()",
          "initialize(address,address)",
          "hashValues(bytes32,uint256,address,address,address,address,bytes32,bytes32[])",
          "hashValuesLockPayment(bytes32,address,address,uint256,address)",
          "fulfill(bytes32,bytes32,uint256,address,address,address,address,bytes32,bytes32[])",
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)",
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "conditionStoreManager",
              "offset": 0,
              "slot": "101",
              "type": "t_contract(ConditionStoreManager)9399",
              "contract": "Condition",
              "src": "contracts/conditions/Condition.sol:25"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "102",
              "type": "t_uint256",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "103",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ConditionStoreManager)9399": {
              "label": "contract ConditionStoreManager",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Reward": {
        "src": "contracts/conditions/rewards/Reward.sol:19",
        "version": {
          "withMetadata": "c0a58350098c145314bbf6d8c089ed9240f4f9040de65c392600129e1fdb7e8d",
          "withoutMetadata": "58acb80ecaddfc147b57e20fb62bfdc0fea99cf07c8d36851d43f81877782b3d",
          "linkedWithoutMetadata": "58acb80ecaddfc147b57e20fb62bfdc0fea99cf07c8d36851d43f81877782b3d"
        },
        "inherit": [
          "Condition",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "conditionStoreManager",
              "offset": 0,
              "slot": "101",
              "type": "t_contract(ConditionStoreManager)9399",
              "contract": "Condition",
              "src": "contracts/conditions/Condition.sol:25"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ConditionStoreManager)9399": {
              "label": "contract ConditionStoreManager",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "INVMConfig": {
        "src": "contracts/governance/INVMConfig.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "initialize(address,address)",
          "setMarketplaceFees(uint256,address)",
          "isGovernor(address)",
          "getMarketplaceFee()",
          "getFeeReceiver()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "NeverminedConfig": {
        "src": "contracts/governance/NeverminedConfig.sol:10",
        "version": {
          "withMetadata": "02748d7f39a8f6b6a4c77d6efafcbe3b360042d9f3537c3e7bec895ebb00984f",
          "withoutMetadata": "e20e18f13784d0368b8bff0ab423778d8d6dc1db1ab31b16041282e1db46f5f4",
          "linkedWithoutMetadata": "e20e18f13784d0368b8bff0ab423778d8d6dc1db1ab31b16041282e1db46f5f4"
        },
        "inherit": [
          "INVMConfig",
          "AccessControlUpgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "IAccessControlUpgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address,address)",
          "setMarketplaceFees(uint256,address)",
          "setGovernor(address)",
          "isGovernor(address)",
          "getMarketplaceFee()",
          "getFeeReceiver()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            },
            {
              "label": "_roles",
              "offset": 0,
              "slot": "151",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
              "contract": "AccessControlUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "152",
              "type": "t_array(t_uint256)49_storage",
              "contract": "AccessControlUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:247"
            },
            {
              "label": "marketplaceFee",
              "offset": 0,
              "slot": "201",
              "type": "t_uint256",
              "contract": "NeverminedConfig",
              "src": "contracts/governance/NeverminedConfig.sol:22"
            },
            {
              "label": "feeReceiver",
              "offset": 0,
              "slot": "202",
              "type": "t_address",
              "contract": "NeverminedConfig",
              "src": "contracts/governance/NeverminedConfig.sol:26"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)34_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "contracts/interfaces/IAaveInterfaces.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ILendingPool": {
        "src": "contracts/interfaces/IAaveInterfaces.sol:224",
        "inherit": [],
        "libraries": [],
        "methods": [
          "deposit(address,uint256,address,uint16)",
          "withdraw(address,uint256,address)",
          "borrow(address,uint256,uint256,uint16,address)",
          "repay(address,uint256,uint256,address)",
          "swapBorrowRateMode(address,uint256)",
          "rebalanceStableBorrowRate(address,address)",
          "setUserUseReserveAsCollateral(address,bool)",
          "liquidationCall(address,address,address,uint256,bool)",
          "flashLoan(address,address[],uint256[],uint256[],address,bytes,uint16)",
          "getUserAccountData(address)",
          "initReserve(address,address,address,address,address)",
          "setReserveInterestRateStrategyAddress(address,address)",
          "setConfiguration(address,uint256)",
          "getConfiguration(address)",
          "getUserConfiguration(address)",
          "getReserveNormalizedIncome(address)",
          "getReserveNormalizedVariableDebt(address)",
          "getReserveData(address)",
          "finalizeTransfer(address,address,address,uint256,uint256,uint256)",
          "getReservesList()",
          "getAddressesProvider()",
          "setPause(bool)",
          "paused()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ILendingPoolAddressesProvider": {
        "src": "contracts/interfaces/IAaveInterfaces.sol:173",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getMarketId()",
          "setMarketId(string)",
          "setAddress(bytes32,address)",
          "setAddressAsProxy(bytes32,address)",
          "getAddress(bytes32)",
          "getLendingPool()",
          "setLendingPoolImpl(address)",
          "getLendingPoolConfigurator()",
          "setLendingPoolConfiguratorImpl(address)",
          "getLendingPoolCollateralManager()",
          "setLendingPoolCollateralManager(address)",
          "getPoolAdmin()",
          "setPoolAdmin(address)",
          "getEmergencyAdmin()",
          "setEmergencyAdmin(address)",
          "getPriceOracle()",
          "setPriceOracle(address)",
          "getLendingRateOracle()",
          "setLendingRateOracle(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPriceOracleGetter": {
        "src": "contracts/interfaces/IAaveInterfaces.sol:91",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getAssetPrice(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IProtocolDataProvider": {
        "src": "contracts/interfaces/IAaveInterfaces.sol:100",
        "inherit": [],
        "libraries": [],
        "methods": [
          "ADDRESSES_PROVIDER()",
          "getAllReservesTokens()",
          "getAllATokens()",
          "getReserveConfigurationData(address)",
          "getReserveData(address)",
          "getUserReserveData(address,address)",
          "getReserveTokensAddresses(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IStableDebtToken": {
        "src": "contracts/interfaces/IAaveInterfaces.sol:657",
        "inherit": [],
        "libraries": [],
        "methods": [
          "approveDelegation(address,uint256)",
          "borrowAllowance(address,address)",
          "mint(address,address,uint256,uint256)",
          "burn(address,uint256)",
          "getAverageStableRate()",
          "getUserStableRate(address)",
          "getUserLastUpdated(address)",
          "getSupplyData()",
          "getTotalSupplyLastUpdated()",
          "getTotalSupplyAndAvgRate()",
          "principalBalanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IDynamicPricing": {
        "src": "contracts/interfaces/IDynamicPricing.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getPricingType()",
          "getPrice(bytes32)",
          "getTokenAddress(bytes32)",
          "getStatus(bytes32)",
          "canBePurchased(bytes32)",
          "withdraw(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IList": {
        "src": "contracts/interfaces/IList.sol:12",
        "inherit": [],
        "libraries": [],
        "methods": [
          "has(bytes32)",
          "has(bytes32,bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IRoyaltyScheme": {
        "src": "contracts/interfaces/IRoyaltyScheme.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "check(bytes32,uint256[],address[],address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISecretStore": {
        "src": "contracts/interfaces/ISecretStore.sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "checkPermissions(address,bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISecretStorePermission": {
        "src": "contracts/interfaces/ISecretStorePermission.sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "grantPermission(address,bytes32)",
          "renouncePermission(address,bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IWETHGateway": {
        "src": "contracts/interfaces/IWETHGateway.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "depositETH(address,address,uint16)",
          "withdrawETH(address,uint256,address)",
          "repayETH(address,uint256,uint256,address)",
          "borrowETH(address,uint256,uint256,uint16)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Address": {
        "src": "contracts/libraries/AaveLibrary.sol:202",
        "version": {
          "withMetadata": "2c46454522c6174fce7361b44238b279859c10889f2d4ad141e50800cfdbad97",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "DataTypes": {
        "src": "contracts/libraries/AaveLibrary.sol:7",
        "version": {
          "withMetadata": "519237b4b2a14f4f3569a83ef6908faf44d8d7bd80f679229a63615cdda6980a",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeERC20": {
        "src": "contracts/libraries/AaveLibrary.sol:271",
        "version": {
          "withMetadata": "3c46aa5be2285a17a6861f23299274d4e3f6acb9f5847e5628fa69a0adbb2363",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "SafeMath",
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeMath": {
        "src": "contracts/libraries/AaveLibrary.sol:54",
        "version": {
          "withMetadata": "3f9979e54e2c02859d9b5a0e5f9cecf9cfcc13db8c5b91d181d20a1092346e5b",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "CloneFactory": {
        "src": "contracts/libraries/CloneFactory.sol:31",
        "version": {
          "withMetadata": "592aabed9bc5f9cb6e22c5832716c24bc35793d8cf205b3746ed5b61d598e9fd",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "EpochLibrary": {
        "src": "contracts/libraries/EpochLibrary.sol:22",
        "version": {
          "withMetadata": "9c99fd51ac56faa517fac1de41589d09b28e8006beb54c7738b01608edb2e854",
          "withoutMetadata": "9bb762bbaa4cfd7fe5a7756545a9e13787b536480a019a716d17767d5980088e",
          "linkedWithoutMetadata": "9bb762bbaa4cfd7fe5a7756545a9e13787b536480a019a716d17767d5980088e"
        },
        "inherit": [],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "methods": [
          "isTimedOut(EpochLibrary.EpochList storage,bytes32)",
          "isTimeLocked(EpochLibrary.EpochList storage,bytes32)",
          "getEpochTimeOut(EpochLibrary.Epoch storage)",
          "getEpochTimeLock(EpochLibrary.Epoch storage)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "HashListLibrary": {
        "src": "contracts/libraries/HashListLibrary.sol:19",
        "version": {
          "withMetadata": "6fdee370b05b8ebd6487414856246f177bca9b7aec1788700a144fc140511df0",
          "withoutMetadata": "3865b23bc163052a7cab060186d3afed616512f5e3aad374cb656e0cf920d70f",
          "linkedWithoutMetadata": "3865b23bc163052a7cab060186d3afed616512f5e3aad374cb656e0cf920d70f"
        },
        "inherit": [],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "methods": [
          "add(HashListLibrary.List storage,bytes32)",
          "add(HashListLibrary.List storage,bytes32[])",
          "update(HashListLibrary.List storage,bytes32,bytes32)",
          "remove(HashListLibrary.List storage,bytes32)",
          "get(HashListLibrary.List storage,uint256)",
          "index(HashListLibrary.List storage,uint256,uint256)",
          "setOwner(HashListLibrary.List storage,address)",
          "indexOf(HashListLibrary.List storage,bytes32)",
          "isIndexed(HashListLibrary.List storage)",
          "all(HashListLibrary.List storage)",
          "has(HashListLibrary.List storage,bytes32)",
          "size(HashListLibrary.List storage)",
          "ownedBy(HashListLibrary.List storage)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AbstractAuction": {
        "src": "contracts/market/AbstractAuction.sol:19",
        "inherit": [
          "ReentrancyGuardUpgradeable",
          "AccessControlUpgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "IAccessControlUpgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable",
          "IDynamicPricing"
        ],
        "libraries": [
          "SafeERC20Upgradeable"
        ],
        "methods": [
          "()",
          "abortAuction(bytes32)",
          "withdraw(bytes32,address)",
          "getPricingType()",
          "getPrice(bytes32)",
          "getTokenAddress(bytes32)",
          "getStatus(bytes32)",
          "canBePurchased(bytes32)",
          "addNVMAgreementRole(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            },
            {
              "label": "_roles",
              "offset": 0,
              "slot": "151",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
              "contract": "AccessControlUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "152",
              "type": "t_array(t_uint256)49_storage",
              "contract": "AccessControlUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:247"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "201",
              "type": "t_uint256",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
            },
            {
              "label": "auctions",
              "offset": 0,
              "slot": "251",
              "type": "t_mapping(t_bytes32,t_struct(Auction)20065_storage)",
              "contract": "AbstractAuction",
              "src": "contracts/market/AbstractAuction.sol:57"
            },
            {
              "label": "auctionBids",
              "offset": 0,
              "slot": "252",
              "type": "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))",
              "contract": "AbstractAuction",
              "src": "contracts/market/AbstractAuction.sol:59"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_enum(DynamicPricingState)18583": {
              "label": "enum IDynamicPricing.DynamicPricingState",
              "members": [
                "NotStarted",
                "Finished",
                "InProgress",
                "Aborted"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))": {
              "label": "mapping(bytes32 => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(Auction)20065_storage)": {
              "label": "mapping(bytes32 => struct AbstractAuction.Auction)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Auction)20065_storage": {
              "label": "struct AbstractAuction.Auction",
              "members": [
                {
                  "label": "did",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "state",
                  "type": "t_enum(DynamicPricingState)18583",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "creator",
                  "type": "t_address",
                  "offset": 1,
                  "slot": "1"
                },
                {
                  "label": "blockNumberCreated",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "floor",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "starts",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "ends",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "tokenAddress",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "whoCanClaim",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "hash",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "9"
                }
              ],
              "numberOfBytes": "320"
            },
            "t_struct(RoleData)34_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "DutchAuction": {
        "src": "contracts/market/DutchAuction.sol:9",
        "version": {
          "withMetadata": "8d2188366d3d6a2edc1e8a471310afabe9d3d4c668cbcbaf0fcb261d36d842af",
          "withoutMetadata": "0b00e59058d68e5d0ca923194985b42f6ad111924d7c7102e244c141bf4f7749",
          "linkedWithoutMetadata": "0b00e59058d68e5d0ca923194985b42f6ad111924d7c7102e244c141bf4f7749"
        },
        "inherit": [
          "AbstractAuction",
          "ReentrancyGuardUpgradeable",
          "AccessControlUpgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "IAccessControlUpgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable",
          "IDynamicPricing"
        ],
        "libraries": [
          "SafeERC20Upgradeable"
        ],
        "methods": [
          "initialize(address)",
          "create(bytes32,bytes32,uint256,uint256,uint256,address,string)",
          "placeNativeTokenBid(bytes32)",
          "placeERC20Bid(bytes32,uint256)",
          "withdraw(bytes32,address)",
          "getPricingType()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            },
            {
              "label": "_roles",
              "offset": 0,
              "slot": "151",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
              "contract": "AccessControlUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "152",
              "type": "t_array(t_uint256)49_storage",
              "contract": "AccessControlUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:247"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "201",
              "type": "t_uint256",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
            },
            {
              "label": "auctions",
              "offset": 0,
              "slot": "251",
              "type": "t_mapping(t_bytes32,t_struct(Auction)20065_storage)",
              "contract": "AbstractAuction",
              "src": "contracts/market/AbstractAuction.sol:57"
            },
            {
              "label": "auctionBids",
              "offset": 0,
              "slot": "252",
              "type": "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))",
              "contract": "AbstractAuction",
              "src": "contracts/market/AbstractAuction.sol:59"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_enum(DynamicPricingState)18583": {
              "label": "enum IDynamicPricing.DynamicPricingState",
              "members": [
                "NotStarted",
                "Finished",
                "InProgress",
                "Aborted"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))": {
              "label": "mapping(bytes32 => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(Auction)20065_storage)": {
              "label": "mapping(bytes32 => struct AbstractAuction.Auction)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Auction)20065_storage": {
              "label": "struct AbstractAuction.Auction",
              "members": [
                {
                  "label": "did",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "state",
                  "type": "t_enum(DynamicPricingState)18583",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "creator",
                  "type": "t_address",
                  "offset": 1,
                  "slot": "1"
                },
                {
                  "label": "blockNumberCreated",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "floor",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "starts",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "ends",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "tokenAddress",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "whoCanClaim",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "hash",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "9"
                }
              ],
              "numberOfBytes": "320"
            },
            "t_struct(RoleData)34_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "EnglishAuction": {
        "src": "contracts/market/EnglishAuction.sol:9",
        "version": {
          "withMetadata": "9fb72ec25b795ab00cc16f9485f767d2fd5ff082ecdbb4268d674602f4f08995",
          "withoutMetadata": "e68429e365d49e6940d84ec53fb76738cff2b197f437df9f1ab78cc63e008921",
          "linkedWithoutMetadata": "e68429e365d49e6940d84ec53fb76738cff2b197f437df9f1ab78cc63e008921"
        },
        "inherit": [
          "AbstractAuction",
          "ReentrancyGuardUpgradeable",
          "AccessControlUpgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "IAccessControlUpgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable",
          "IDynamicPricing"
        ],
        "libraries": [
          "SafeERC20Upgradeable"
        ],
        "methods": [
          "initialize(address)",
          "create(bytes32,bytes32,uint256,uint256,uint256,address,string)",
          "placeNativeTokenBid(bytes32)",
          "placeERC20Bid(bytes32,uint256)",
          "getPricingType()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            },
            {
              "label": "_roles",
              "offset": 0,
              "slot": "151",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
              "contract": "AccessControlUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "152",
              "type": "t_array(t_uint256)49_storage",
              "contract": "AccessControlUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:247"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "201",
              "type": "t_uint256",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
            },
            {
              "label": "auctions",
              "offset": 0,
              "slot": "251",
              "type": "t_mapping(t_bytes32,t_struct(Auction)20065_storage)",
              "contract": "AbstractAuction",
              "src": "contracts/market/AbstractAuction.sol:57"
            },
            {
              "label": "auctionBids",
              "offset": 0,
              "slot": "252",
              "type": "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))",
              "contract": "AbstractAuction",
              "src": "contracts/market/AbstractAuction.sol:59"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_enum(DynamicPricingState)18583": {
              "label": "enum IDynamicPricing.DynamicPricingState",
              "members": [
                "NotStarted",
                "Finished",
                "InProgress",
                "Aborted"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))": {
              "label": "mapping(bytes32 => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(Auction)20065_storage)": {
              "label": "mapping(bytes32 => struct AbstractAuction.Auction)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Auction)20065_storage": {
              "label": "struct AbstractAuction.Auction",
              "members": [
                {
                  "label": "did",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "state",
                  "type": "t_enum(DynamicPricingState)18583",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "creator",
                  "type": "t_address",
                  "offset": 1,
                  "slot": "1"
                },
                {
                  "label": "blockNumberCreated",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "floor",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "starts",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "ends",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "tokenAddress",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "whoCanClaim",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "hash",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "9"
                }
              ],
              "numberOfBytes": "320"
            },
            "t_struct(RoleData)34_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "DIDFactory": {
        "src": "contracts/registry/DIDFactory.sol:17",
        "version": {
          "withMetadata": "f2a3de71b40d5b1875df8b43d065a85b0616e4c0570ea9cd60bc02423542dca3",
          "withoutMetadata": "29fcabbebf7962e849bd55690b1ef4371c5496039b9c4aa0853647e737850bda",
          "linkedWithoutMetadata": "29fcabbebf7962e849bd55690b1ef4371c5496039b9c4aa0853647e737850bda"
        },
        "inherit": [
          "ProvenanceRegistry",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "DIDRegistryLibrary"
        ],
        "methods": [
          "setManager(address)",
          "registerAttribute(bytes32,bytes32,address[],string)",
          "registerDID(bytes32,bytes32,address[],string,bytes32,string)",
          "hashDID(bytes32,address)",
          "areRoyaltiesValid(bytes32,uint256[],address[],address)",
          "used(bytes32,bytes32,address,bytes32,bytes,string)",
          "wasDerivedFrom(bytes32,bytes32,bytes32,address,bytes32,string)",
          "wasAssociatedWith(bytes32,bytes32,address,bytes32,string)",
          "actedOnBehalf(bytes32,bytes32,address,address,bytes32,bytes,string)",
          "addDIDProvider(bytes32,address)",
          "removeDIDProvider(bytes32,address)",
          "addDIDProvenanceDelegate(bytes32,address)",
          "removeDIDProvenanceDelegate(bytes32,address)",
          "transferDIDOwnership(bytes32,address)",
          "transferDIDOwnershipManaged(address,bytes32,address)",
          "grantPermission(bytes32,address)",
          "revokePermission(bytes32,address)",
          "getPermission(bytes32,address)",
          "isDIDProvider(bytes32,address)",
          "isDIDProviderOrOwner(bytes32,address)",
          "getDIDRegister(bytes32)",
          "getDIDSupply(bytes32)",
          "getBlockNumberUpdated(bytes32)",
          "getDIDOwner(bytes32)",
          "getDIDRoyaltyRecipient(bytes32)",
          "getDIDRoyaltyScheme(bytes32)",
          "getDIDCreator(bytes32)",
          "getProvenanceEntry(bytes32)",
          "isDIDOwner(address,bytes32)",
          "isOwnerProviderOrDelegate(bytes32)",
          "isProvenanceDelegate(bytes32,address)",
          "getProvenanceOwner(bytes32)"
        ],
        "linkReferences": [
          {
            "src": "contracts/registry/DIDRegistryLibrary.sol",
            "name": "DIDRegistryLibrary",
            "length": 20,
            "start": 1599,
            "placeholder": "__$3d79664e2807efe0e7b78a31ea8a960386$__"
          },
          {
            "src": "contracts/registry/DIDRegistryLibrary.sol",
            "name": "DIDRegistryLibrary",
            "length": 20,
            "start": 2291,
            "placeholder": "__$3d79664e2807efe0e7b78a31ea8a960386$__"
          },
          {
            "src": "contracts/registry/DIDRegistryLibrary.sol",
            "name": "DIDRegistryLibrary",
            "length": 20,
            "start": 2623,
            "placeholder": "__$3d79664e2807efe0e7b78a31ea8a960386$__"
          },
          {
            "src": "contracts/registry/DIDRegistryLibrary.sol",
            "name": "DIDRegistryLibrary",
            "length": 20,
            "start": 2737,
            "placeholder": "__$3d79664e2807efe0e7b78a31ea8a960386$__"
          }
        ],
        "errors": [
          {
            "kind": "external-library-linking",
            "name": "DIDRegistryLibrary",
            "src": "contracts/registry/DIDRegistryLibrary.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "provenanceRegistry",
              "offset": 0,
              "slot": "101",
              "type": "t_struct(ProvenanceRegistryList)24743_storage",
              "contract": "ProvenanceRegistry",
              "src": "contracts/registry/ProvenanceRegistry.sol:55"
            },
            {
              "label": "didRegisterList",
              "offset": 0,
              "slot": "102",
              "type": "t_struct(DIDRegisterList)23866_storage",
              "contract": "DIDFactory",
              "src": "contracts/registry/DIDFactory.sol:27"
            },
            {
              "label": "didPermissions",
              "offset": 0,
              "slot": "104",
              "type": "t_mapping(t_bytes32,t_mapping(t_address,t_bool))",
              "contract": "DIDFactory",
              "src": "contracts/registry/DIDFactory.sol:30"
            },
            {
              "label": "manager",
              "offset": 0,
              "slot": "105",
              "type": "t_address",
              "contract": "DIDFactory",
              "src": "contracts/registry/DIDFactory.sol:32"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_contract(IRoyaltyScheme)18671": {
              "label": "contract IRoyaltyScheme",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_mapping(t_address,t_bool))": {
              "label": "mapping(bytes32 => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(DIDRegister)23857_storage)": {
              "label": "mapping(bytes32 => struct DIDRegistryLibrary.DIDRegister)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(Provenance)24737_storage)": {
              "label": "mapping(bytes32 => struct ProvenanceRegistry.Provenance)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(DIDRegister)23857_storage": {
              "label": "struct DIDRegistryLibrary.DIDRegister",
              "members": [
                {
                  "label": "owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "royalties",
                  "type": "t_uint8",
                  "offset": 20,
                  "slot": "0"
                },
                {
                  "label": "nftInitialized",
                  "type": "t_bool",
                  "offset": 21,
                  "slot": "0"
                },
                {
                  "label": "nft721Initialized",
                  "type": "t_bool",
                  "offset": 22,
                  "slot": "0"
                },
                {
                  "label": "creator",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastChecksum",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "url",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "lastUpdatedBy",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "blockNumberUpdated",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "providers",
                  "type": "t_array(t_address)dyn_storage",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "delegates",
                  "type": "t_array(t_address)dyn_storage",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "nftSupply",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "mintCap",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "royaltyRecipient",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "10"
                },
                {
                  "label": "royaltyScheme",
                  "type": "t_contract(IRoyaltyScheme)18671",
                  "offset": 0,
                  "slot": "11"
                }
              ],
              "numberOfBytes": "384"
            },
            "t_struct(DIDRegisterList)23866_storage": {
              "label": "struct DIDRegistryLibrary.DIDRegisterList",
              "members": [
                {
                  "label": "didRegisters",
                  "type": "t_mapping(t_bytes32,t_struct(DIDRegister)23857_storage)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "didRegisterIds",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Provenance)24737_storage": {
              "label": "struct ProvenanceRegistry.Provenance",
              "members": [
                {
                  "label": "did",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "relatedDid",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "agentId",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "activityId",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "agentInvolvedId",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "method",
                  "type": "t_uint8",
                  "offset": 20,
                  "slot": "4"
                },
                {
                  "label": "createdBy",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "blockNumberUpdated",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "signature",
                  "type": "t_bytes_storage",
                  "offset": 0,
                  "slot": "7"
                }
              ],
              "numberOfBytes": "256"
            },
            "t_struct(ProvenanceRegistryList)24743_storage": {
              "label": "struct ProvenanceRegistry.ProvenanceRegistryList",
              "members": [
                {
                  "label": "list",
                  "type": "t_mapping(t_bytes32,t_struct(Provenance)24737_storage)",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "DIDRegistry": {
        "src": "contracts/registry/DIDRegistry.sol:17",
        "version": {
          "withMetadata": "1287167e6258efed49c7bb2a24c46ee17925216261f6e61c180aa7dab8fea5e3",
          "withoutMetadata": "a4763953883ce9b561f29b53890143af46611a29b34874d367389af72774aad8",
          "linkedWithoutMetadata": "a4763953883ce9b561f29b53890143af46611a29b34874d367389af72774aad8"
        },
        "inherit": [
          "DIDFactory",
          "ProvenanceRegistry",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "DIDRegistryLibrary"
        ],
        "methods": [
          "initialize(address,address,address)",
          "registerRoyaltiesChecker(address)",
          "setDIDRoyalties(bytes32,address)",
          "setDIDRoyaltyRecipient(bytes32,address)",
          "registerMintableDID(bytes32,bytes32,address[],string,uint256,uint8,bool,bytes32,string)",
          "registerMintableDID721(bytes32,bytes32,address[],string,uint8,bool,bytes32,string)",
          "registerMintableDID(bytes32,bytes32,address[],string,uint256,uint8,bytes32,string)",
          "enableAndMintDidNft(bytes32,uint256,uint8,bool,string)",
          "enableAndMintDidNft721(bytes32,uint8,bool,string)",
          "mint(bytes32,uint256,address)",
          "mint(bytes32,uint256)",
          "mint721(bytes32,address)",
          "mint721(bytes32)",
          "burn(bytes32,uint256)",
          "burn721(bytes32)"
        ],
        "linkReferences": [
          {
            "src": "contracts/registry/DIDRegistryLibrary.sol",
            "name": "DIDRegistryLibrary",
            "length": 20,
            "start": 2568,
            "placeholder": "__$3d79664e2807efe0e7b78a31ea8a960386$__"
          },
          {
            "src": "contracts/registry/DIDRegistryLibrary.sol",
            "name": "DIDRegistryLibrary",
            "length": 20,
            "start": 3260,
            "placeholder": "__$3d79664e2807efe0e7b78a31ea8a960386$__"
          },
          {
            "src": "contracts/registry/DIDRegistryLibrary.sol",
            "name": "DIDRegistryLibrary",
            "length": 20,
            "start": 3675,
            "placeholder": "__$3d79664e2807efe0e7b78a31ea8a960386$__"
          },
          {
            "src": "contracts/registry/DIDRegistryLibrary.sol",
            "name": "DIDRegistryLibrary",
            "length": 20,
            "start": 3789,
            "placeholder": "__$3d79664e2807efe0e7b78a31ea8a960386$__"
          }
        ],
        "errors": [
          {
            "kind": "external-library-linking",
            "name": "DIDRegistryLibrary",
            "src": "contracts/registry/DIDRegistryLibrary.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "provenanceRegistry",
              "offset": 0,
              "slot": "101",
              "type": "t_struct(ProvenanceRegistryList)24743_storage",
              "contract": "ProvenanceRegistry",
              "src": "contracts/registry/ProvenanceRegistry.sol:55"
            },
            {
              "label": "didRegisterList",
              "offset": 0,
              "slot": "102",
              "type": "t_struct(DIDRegisterList)23866_storage",
              "contract": "DIDFactory",
              "src": "contracts/registry/DIDFactory.sol:27"
            },
            {
              "label": "didPermissions",
              "offset": 0,
              "slot": "104",
              "type": "t_mapping(t_bytes32,t_mapping(t_address,t_bool))",
              "contract": "DIDFactory",
              "src": "contracts/registry/DIDFactory.sol:30"
            },
            {
              "label": "manager",
              "offset": 0,
              "slot": "105",
              "type": "t_address",
              "contract": "DIDFactory",
              "src": "contracts/registry/DIDFactory.sol:32"
            },
            {
              "label": "erc1155",
              "offset": 0,
              "slot": "106",
              "type": "t_contract(NFTUpgradeable)31136",
              "contract": "DIDRegistry",
              "src": "contracts/registry/DIDRegistry.sol:21"
            },
            {
              "label": "erc721",
              "offset": 0,
              "slot": "107",
              "type": "t_contract(NFT721Upgradeable)31422",
              "contract": "DIDRegistry",
              "src": "contracts/registry/DIDRegistry.sol:22"
            },
            {
              "label": "royaltiesCheckers",
              "offset": 0,
              "slot": "108",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "DIDRegistry",
              "src": "contracts/registry/DIDRegistry.sol:24"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_contract(IRoyaltyScheme)18671": {
              "label": "contract IRoyaltyScheme",
              "numberOfBytes": "20"
            },
            "t_contract(NFT721Upgradeable)31422": {
              "label": "contract NFT721Upgradeable",
              "numberOfBytes": "20"
            },
            "t_contract(NFTUpgradeable)31136": {
              "label": "contract NFTUpgradeable",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_mapping(t_address,t_bool))": {
              "label": "mapping(bytes32 => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(DIDRegister)23857_storage)": {
              "label": "mapping(bytes32 => struct DIDRegistryLibrary.DIDRegister)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(Provenance)24737_storage)": {
              "label": "mapping(bytes32 => struct ProvenanceRegistry.Provenance)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(DIDRegister)23857_storage": {
              "label": "struct DIDRegistryLibrary.DIDRegister",
              "members": [
                {
                  "label": "owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "royalties",
                  "type": "t_uint8",
                  "offset": 20,
                  "slot": "0"
                },
                {
                  "label": "nftInitialized",
                  "type": "t_bool",
                  "offset": 21,
                  "slot": "0"
                },
                {
                  "label": "nft721Initialized",
                  "type": "t_bool",
                  "offset": 22,
                  "slot": "0"
                },
                {
                  "label": "creator",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastChecksum",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "url",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "lastUpdatedBy",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "blockNumberUpdated",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "providers",
                  "type": "t_array(t_address)dyn_storage",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "delegates",
                  "type": "t_array(t_address)dyn_storage",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "nftSupply",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "mintCap",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "royaltyRecipient",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "10"
                },
                {
                  "label": "royaltyScheme",
                  "type": "t_contract(IRoyaltyScheme)18671",
                  "offset": 0,
                  "slot": "11"
                }
              ],
              "numberOfBytes": "384"
            },
            "t_struct(DIDRegisterList)23866_storage": {
              "label": "struct DIDRegistryLibrary.DIDRegisterList",
              "members": [
                {
                  "label": "didRegisters",
                  "type": "t_mapping(t_bytes32,t_struct(DIDRegister)23857_storage)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "didRegisterIds",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Provenance)24737_storage": {
              "label": "struct ProvenanceRegistry.Provenance",
              "members": [
                {
                  "label": "did",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "relatedDid",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "agentId",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "activityId",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "agentInvolvedId",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "method",
                  "type": "t_uint8",
                  "offset": 20,
                  "slot": "4"
                },
                {
                  "label": "createdBy",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "blockNumberUpdated",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "signature",
                  "type": "t_bytes_storage",
                  "offset": 0,
                  "slot": "7"
                }
              ],
              "numberOfBytes": "256"
            },
            "t_struct(ProvenanceRegistryList)24743_storage": {
              "label": "struct ProvenanceRegistry.ProvenanceRegistryList",
              "members": [
                {
                  "label": "list",
                  "type": "t_mapping(t_bytes32,t_struct(Provenance)24737_storage)",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "DIDRegistryLibrary": {
        "src": "contracts/registry/DIDRegistryLibrary.sol:15",
        "version": {
          "withMetadata": "ff6eb0107daad2ab9e136dac41c72f8fb6054466d1fcdd447d1f9c9986c579d6",
          "withoutMetadata": "6c3e3096f8becccc3ddb52edb96f3277c41dd418f3a6157c94b3612791cf9eec",
          "linkedWithoutMetadata": "6c3e3096f8becccc3ddb52edb96f3277c41dd418f3a6157c94b3612791cf9eec"
        },
        "inherit": [],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "methods": [
          "update(DIDRegistryLibrary.DIDRegisterList storage,bytes32,bytes32,string)",
          "isProvider(DIDRegistryLibrary.DIDRegisterList storage,bytes32,address)",
          "isDelegate(DIDRegistryLibrary.DIDRegisterList storage,bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ProvenanceRegistry": {
        "src": "contracts/registry/ProvenanceRegistry.sol:15",
        "inherit": [
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "provenanceRegistry",
              "offset": 0,
              "slot": "101",
              "type": "t_struct(ProvenanceRegistryList)24743_storage",
              "contract": "ProvenanceRegistry",
              "src": "contracts/registry/ProvenanceRegistry.sol:55"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(Provenance)24737_storage)": {
              "label": "mapping(bytes32 => struct ProvenanceRegistry.Provenance)",
              "numberOfBytes": "32"
            },
            "t_struct(Provenance)24737_storage": {
              "label": "struct ProvenanceRegistry.Provenance",
              "members": [
                {
                  "label": "did",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "relatedDid",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "agentId",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "activityId",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "agentInvolvedId",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "method",
                  "type": "t_uint8",
                  "offset": 20,
                  "slot": "4"
                },
                {
                  "label": "createdBy",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "blockNumberUpdated",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "signature",
                  "type": "t_bytes_storage",
                  "offset": 0,
                  "slot": "7"
                }
              ],
              "numberOfBytes": "256"
            },
            "t_struct(ProvenanceRegistryList)24743_storage": {
              "label": "struct ProvenanceRegistry.ProvenanceRegistryList",
              "members": [
                {
                  "label": "list",
                  "type": "t_mapping(t_bytes32,t_struct(Provenance)24737_storage)",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "CurveRoyalties": {
        "src": "contracts/royalties/CurveRoyalities.sol:16",
        "version": {
          "withMetadata": "57e37e951a51dd87fe99f25e32658e6e49ef40a966b871ac81c24f53fb3401de",
          "withoutMetadata": "15eb64b9666044478341bf54ca1dd81bcfe0fadd74b013999ea55a5ec288d76f",
          "linkedWithoutMetadata": "15eb64b9666044478341bf54ca1dd81bcfe0fadd74b013999ea55a5ec288d76f"
        },
        "inherit": [
          "Initializable",
          "IRoyaltyScheme"
        ],
        "libraries": [],
        "methods": [
          "initialize(address)",
          "royaltyCurve(uint256,uint256,uint256)",
          "setRoyalty(bytes32,uint256)",
          "check(bytes32,uint256[],address[],address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "registry",
              "offset": 2,
              "slot": "0",
              "type": "t_contract(DIDRegistry)23815",
              "contract": "CurveRoyalties",
              "src": "contracts/royalties/CurveRoyalities.sol:18"
            },
            {
              "label": "royalties",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "contract": "CurveRoyalties",
              "src": "contracts/royalties/CurveRoyalities.sol:22"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(DIDRegistry)23815": {
              "label": "contract DIDRegistry",
              "numberOfBytes": "20"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "RewardsDistributor": {
        "src": "contracts/royalties/RewardsDistributor.sol:12",
        "version": {
          "withMetadata": "38ca9cfc900e26a69d911c43c7fe341978bfd2109b5d0b3e7d1b52b20f2a2490",
          "withoutMetadata": "cafd0a69d0771b8e8e9ec17d72fb62592b21beea64c0f52cfe1f17f8692439ac",
          "linkedWithoutMetadata": "cafd0a69d0771b8e8e9ec17d72fb62592b21beea64c0f52cfe1f17f8692439ac"
        },
        "inherit": [
          "Initializable"
        ],
        "libraries": [
          "SafeERC20Upgradeable",
          "ConditionStoreLibrary"
        ],
        "methods": [
          "initialize(address,address,address)",
          "setReceivers(bytes32,address[])",
          "claimReward(bytes32,bytes32,uint256[],address[],address,address,address,bytes32,bytes32[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "used",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_bytes32,t_bool)",
              "contract": "RewardsDistributor",
              "src": "contracts/royalties/RewardsDistributor.sol:17"
            },
            {
              "label": "receivers",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_bytes32,t_array(t_address)dyn_storage)",
              "contract": "RewardsDistributor",
              "src": "contracts/royalties/RewardsDistributor.sol:18"
            },
            {
              "label": "registry",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(DIDRegistry)23815",
              "contract": "RewardsDistributor",
              "src": "contracts/royalties/RewardsDistributor.sol:20"
            },
            {
              "label": "conditionStoreManager",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(ConditionStoreManager)9399",
              "contract": "RewardsDistributor",
              "src": "contracts/royalties/RewardsDistributor.sol:21"
            },
            {
              "label": "escrow",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "RewardsDistributor",
              "src": "contracts/royalties/RewardsDistributor.sol:22"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(ConditionStoreManager)9399": {
              "label": "contract ConditionStoreManager",
              "numberOfBytes": "20"
            },
            "t_contract(DIDRegistry)23815": {
              "label": "contract DIDRegistry",
              "numberOfBytes": "20"
            },
            "t_mapping(t_bytes32,t_array(t_address)dyn_storage)": {
              "label": "mapping(bytes32 => address[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_bool)": {
              "label": "mapping(bytes32 => bool)",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "StandardRoyalties": {
        "src": "contracts/royalties/StandardRoyalities.sol:15",
        "version": {
          "withMetadata": "f1a3ce3b586301f7d10b5e07c8820cbdafd63c85b77b08297862c9a14c26fd2c",
          "withoutMetadata": "3bd0f005ba3aa9e2c6a40da5db2773c6f8c2ec130c277d92caccf8142f977acd",
          "linkedWithoutMetadata": "3bd0f005ba3aa9e2c6a40da5db2773c6f8c2ec130c277d92caccf8142f977acd"
        },
        "inherit": [
          "Initializable",
          "IRoyaltyScheme"
        ],
        "libraries": [],
        "methods": [
          "initialize(address)",
          "setRoyalty(bytes32,uint256)",
          "check(bytes32,uint256[],address[],address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "registry",
              "offset": 2,
              "slot": "0",
              "type": "t_contract(DIDRegistry)23815",
              "contract": "StandardRoyalties",
              "src": "contracts/royalties/StandardRoyalities.sol:17"
            },
            {
              "label": "royalties",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "contract": "StandardRoyalties",
              "src": "contracts/royalties/StandardRoyalities.sol:21"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(DIDRegistry)23815": {
              "label": "contract DIDRegistry",
              "numberOfBytes": "20"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "AaveCreditTemplate": {
        "src": "contracts/templates/AaveCreditTemplate.sol:35",
        "version": {
          "withMetadata": "7741800cacf519f0408a38b5fbc69b5505227a759cc5251059d8e3895a24a895",
          "withoutMetadata": "e7fdb365aa971ac793a7f98075481ced97d32cd2fd40a9c71379067a5905bad0",
          "linkedWithoutMetadata": "e7fdb365aa971ac793a7f98075481ced97d32cd2fd40a9c71379067a5905bad0"
        },
        "inherit": [
          "CloneFactory",
          "BaseEscrowTemplate",
          "AgreementTemplate",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address,address,address,address,address,address,address,address,address)",
          "createVaultAgreement(bytes32,bytes32,bytes32[],uint256[],uint256[],address)",
          "createAgreement(bytes32,address,address,address,uint256,address,bytes32,bytes32[],uint256[],uint256[],address)",
          "deployVault(address,address,address,uint256,address,address,address)",
          "getVaultForAgreement(bytes32)",
          "updateNVMFee(uint256)",
          "changeCreditVaultLibrary(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "conditionTypes",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_address)dyn_storage",
              "contract": "AgreementTemplate",
              "src": "contracts/templates/AgreementTemplate.sol:24"
            },
            {
              "label": "agreementStoreManager",
              "offset": 0,
              "slot": "102",
              "type": "t_contract(AgreementStoreManager)7793",
              "contract": "AgreementTemplate",
              "src": "contracts/templates/AgreementTemplate.sol:26"
            },
            {
              "label": "agreementData",
              "offset": 0,
              "slot": "103",
              "type": "t_struct(AgreementData)26986_storage",
              "contract": "BaseEscrowTemplate",
              "src": "contracts/templates/BaseEscrowTemplate.sol:13"
            },
            {
              "label": "didRegistry",
              "offset": 0,
              "slot": "105",
              "type": "t_contract(DIDRegistry)23815",
              "contract": "AaveCreditTemplate",
              "src": "contracts/templates/AaveCreditTemplate.sol:36"
            },
            {
              "label": "nftLockCondition",
              "offset": 0,
              "slot": "106",
              "type": "t_contract(INFTLock)10890",
              "contract": "AaveCreditTemplate",
              "src": "contracts/templates/AaveCreditTemplate.sol:38"
            },
            {
              "label": "depositCondition",
              "offset": 0,
              "slot": "107",
              "type": "t_contract(AaveCollateralDepositCondition)14414",
              "contract": "AaveCreditTemplate",
              "src": "contracts/templates/AaveCreditTemplate.sol:39"
            },
            {
              "label": "borrowCondition",
              "offset": 0,
              "slot": "108",
              "type": "t_contract(AaveBorrowCondition)14184",
              "contract": "AaveCreditTemplate",
              "src": "contracts/templates/AaveCreditTemplate.sol:40"
            },
            {
              "label": "repayCondition",
              "offset": 0,
              "slot": "109",
              "type": "t_contract(AaveRepayCondition)15638",
              "contract": "AaveCreditTemplate",
              "src": "contracts/templates/AaveCreditTemplate.sol:41"
            },
            {
              "label": "transferCondition",
              "offset": 0,
              "slot": "110",
              "type": "t_contract(DistributeNFTCollateralCondition)10718",
              "contract": "AaveCreditTemplate",
              "src": "contracts/templates/AaveCreditTemplate.sol:42"
            },
            {
              "label": "withdrawCondition",
              "offset": 0,
              "slot": "111",
              "type": "t_contract(AaveCollateralWithdrawCondition)14604",
              "contract": "AaveCreditTemplate",
              "src": "contracts/templates/AaveCreditTemplate.sol:43"
            },
            {
              "label": "vaultAddress",
              "offset": 0,
              "slot": "112",
              "type": "t_mapping(t_bytes32,t_address)",
              "contract": "AaveCreditTemplate",
              "src": "contracts/templates/AaveCreditTemplate.sol:45"
            },
            {
              "label": "nvmFee",
              "offset": 0,
              "slot": "113",
              "type": "t_uint256",
              "contract": "AaveCreditTemplate",
              "src": "contracts/templates/AaveCreditTemplate.sol:46"
            },
            {
              "label": "vaultLibrary",
              "offset": 0,
              "slot": "114",
              "type": "t_address",
              "contract": "AaveCreditTemplate",
              "src": "contracts/templates/AaveCreditTemplate.sol:48"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(AaveBorrowCondition)14184": {
              "label": "contract AaveBorrowCondition",
              "numberOfBytes": "20"
            },
            "t_contract(AaveCollateralDepositCondition)14414": {
              "label": "contract AaveCollateralDepositCondition",
              "numberOfBytes": "20"
            },
            "t_contract(AaveCollateralWithdrawCondition)14604": {
              "label": "contract AaveCollateralWithdrawCondition",
              "numberOfBytes": "20"
            },
            "t_contract(AaveRepayCondition)15638": {
              "label": "contract AaveRepayCondition",
              "numberOfBytes": "20"
            },
            "t_contract(AgreementStoreManager)7793": {
              "label": "contract AgreementStoreManager",
              "numberOfBytes": "20"
            },
            "t_contract(DIDRegistry)23815": {
              "label": "contract DIDRegistry",
              "numberOfBytes": "20"
            },
            "t_contract(DistributeNFTCollateralCondition)10718": {
              "label": "contract DistributeNFTCollateralCondition",
              "numberOfBytes": "20"
            },
            "t_contract(INFTLock)10890": {
              "label": "contract INFTLock",
              "numberOfBytes": "20"
            },
            "t_mapping(t_bytes32,t_address)": {
              "label": "mapping(bytes32 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(AgreementDataModel)26977_storage)": {
              "label": "mapping(bytes32 => struct BaseEscrowTemplate.AgreementDataModel)",
              "numberOfBytes": "32"
            },
            "t_struct(AgreementData)26986_storage": {
              "label": "struct BaseEscrowTemplate.AgreementData",
              "members": [
                {
                  "label": "agreementDataItems",
                  "type": "t_mapping(t_bytes32,t_struct(AgreementDataModel)26977_storage)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "agreementIds",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(AgreementDataModel)26977_storage": {
              "label": "struct BaseEscrowTemplate.AgreementDataModel",
              "members": [
                {
                  "label": "accessConsumer",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "accessProvider",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "did",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "AccessProofTemplate": {
        "src": "contracts/templates/AccessProofTemplate.sol:20",
        "version": {
          "withMetadata": "6f23fe18a317a6ace6f413d801655cdfaa55ee169fa866288809b383e0d95895",
          "withoutMetadata": "d7d33551d672a26781ce901a6fb5d9d755383324476a6c3310c96c01e2dde22f",
          "linkedWithoutMetadata": "d7d33551d672a26781ce901a6fb5d9d755383324476a6c3310c96c01e2dde22f"
        },
        "inherit": [
          "BaseEscrowTemplate",
          "AgreementTemplate",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address,address,address,address,address,address payable)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "conditionTypes",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_address)dyn_storage",
              "contract": "AgreementTemplate",
              "src": "contracts/templates/AgreementTemplate.sol:24"
            },
            {
              "label": "agreementStoreManager",
              "offset": 0,
              "slot": "102",
              "type": "t_contract(AgreementStoreManager)7793",
              "contract": "AgreementTemplate",
              "src": "contracts/templates/AgreementTemplate.sol:26"
            },
            {
              "label": "agreementData",
              "offset": 0,
              "slot": "103",
              "type": "t_struct(AgreementData)26986_storage",
              "contract": "BaseEscrowTemplate",
              "src": "contracts/templates/BaseEscrowTemplate.sol:13"
            },
            {
              "label": "didRegistry",
              "offset": 0,
              "slot": "105",
              "type": "t_contract(DIDRegistry)23815",
              "contract": "AccessProofTemplate",
              "src": "contracts/templates/AccessProofTemplate.sol:22"
            },
            {
              "label": "accessCondition",
              "offset": 0,
              "slot": "106",
              "type": "t_contract(AccessProofCondition)8350",
              "contract": "AccessProofTemplate",
              "src": "contracts/templates/AccessProofTemplate.sol:23"
            },
            {
              "label": "lockCondition",
              "offset": 0,
              "slot": "107",
              "type": "t_contract(LockPaymentCondition)10445",
              "contract": "AccessProofTemplate",
              "src": "contracts/templates/AccessProofTemplate.sol:24"
            },
            {
              "label": "escrowReward",
              "offset": 0,
              "slot": "108",
              "type": "t_contract(EscrowPaymentCondition)16458",
              "contract": "AccessProofTemplate",
              "src": "contracts/templates/AccessProofTemplate.sol:25"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(AccessProofCondition)8350": {
              "label": "contract AccessProofCondition",
              "numberOfBytes": "20"
            },
            "t_contract(AgreementStoreManager)7793": {
              "label": "contract AgreementStoreManager",
              "numberOfBytes": "20"
            },
            "t_contract(DIDRegistry)23815": {
              "label": "contract DIDRegistry",
              "numberOfBytes": "20"
            },
            "t_contract(EscrowPaymentCondition)16458": {
              "label": "contract EscrowPaymentCondition",
              "numberOfBytes": "20"
            },
            "t_contract(LockPaymentCondition)10445": {
              "label": "contract LockPaymentCondition",
              "numberOfBytes": "20"
            },
            "t_mapping(t_bytes32,t_struct(AgreementDataModel)26977_storage)": {
              "label": "mapping(bytes32 => struct BaseEscrowTemplate.AgreementDataModel)",
              "numberOfBytes": "32"
            },
            "t_struct(AgreementData)26986_storage": {
              "label": "struct BaseEscrowTemplate.AgreementData",
              "members": [
                {
                  "label": "agreementDataItems",
                  "type": "t_mapping(t_bytes32,t_struct(AgreementDataModel)26977_storage)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "agreementIds",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(AgreementDataModel)26977_storage": {
              "label": "struct BaseEscrowTemplate.AgreementDataModel",
              "members": [
                {
                  "label": "accessConsumer",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "accessProvider",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "did",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "AccessTemplate": {
        "src": "contracts/templates/AccessTemplate.sol:37",
        "version": {
          "withMetadata": "e5d9ed6ff9b63ba888694be286758fd57f17f5da971485d1e4cedd2fa8e52159",
          "withoutMetadata": "d7d33551d672a26781ce901a6fb5d9d755383324476a6c3310c96c01e2dde22f",
          "linkedWithoutMetadata": "d7d33551d672a26781ce901a6fb5d9d755383324476a6c3310c96c01e2dde22f"
        },
        "inherit": [
          "BaseEscrowTemplate",
          "AgreementTemplate",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address,address,address,address,address,address payable)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "conditionTypes",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_address)dyn_storage",
              "contract": "AgreementTemplate",
              "src": "contracts/templates/AgreementTemplate.sol:24"
            },
            {
              "label": "agreementStoreManager",
              "offset": 0,
              "slot": "102",
              "type": "t_contract(AgreementStoreManager)7793",
              "contract": "AgreementTemplate",
              "src": "contracts/templates/AgreementTemplate.sol:26"
            },
            {
              "label": "agreementData",
              "offset": 0,
              "slot": "103",
              "type": "t_struct(AgreementData)26986_storage",
              "contract": "BaseEscrowTemplate",
              "src": "contracts/templates/BaseEscrowTemplate.sol:13"
            },
            {
              "label": "didRegistry",
              "offset": 0,
              "slot": "105",
              "type": "t_contract(DIDRegistry)23815",
              "contract": "AccessTemplate",
              "src": "contracts/templates/AccessTemplate.sol:39"
            },
            {
              "label": "accessCondition",
              "offset": 0,
              "slot": "106",
              "type": "t_contract(AccessCondition)8067",
              "contract": "AccessTemplate",
              "src": "contracts/templates/AccessTemplate.sol:40"
            },
            {
              "label": "lockCondition",
              "offset": 0,
              "slot": "107",
              "type": "t_contract(LockPaymentCondition)10445",
              "contract": "AccessTemplate",
              "src": "contracts/templates/AccessTemplate.sol:41"
            },
            {
              "label": "escrowReward",
              "offset": 0,
              "slot": "108",
              "type": "t_contract(EscrowPaymentCondition)16458",
              "contract": "AccessTemplate",
              "src": "contracts/templates/AccessTemplate.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(AccessCondition)8067": {
              "label": "contract AccessCondition",
              "numberOfBytes": "20"
            },
            "t_contract(AgreementStoreManager)7793": {
              "label": "contract AgreementStoreManager",
              "numberOfBytes": "20"
            },
            "t_contract(DIDRegistry)23815": {
              "label": "contract DIDRegistry",
              "numberOfBytes": "20"
            },
            "t_contract(EscrowPaymentCondition)16458": {
              "label": "contract EscrowPaymentCondition",
              "numberOfBytes": "20"
            },
            "t_contract(LockPaymentCondition)10445": {
              "label": "contract LockPaymentCondition",
              "numberOfBytes": "20"
            },
            "t_mapping(t_bytes32,t_struct(AgreementDataModel)26977_storage)": {
              "label": "mapping(bytes32 => struct BaseEscrowTemplate.AgreementDataModel)",
              "numberOfBytes": "32"
            },
            "t_struct(AgreementData)26986_storage": {
              "label": "struct BaseEscrowTemplate.AgreementData",
              "members": [
                {
                  "label": "agreementDataItems",
                  "type": "t_mapping(t_bytes32,t_struct(AgreementDataModel)26977_storage)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "agreementIds",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(AgreementDataModel)26977_storage": {
              "label": "struct BaseEscrowTemplate.AgreementDataModel",
              "members": [
                {
                  "label": "accessConsumer",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "accessProvider",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "did",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "AgreementTemplate": {
        "src": "contracts/templates/AgreementTemplate.sol:22",
        "version": {
          "withMetadata": "e2cf13fb3e1637040ce1fb9e27af1775cdc797909f5d173fac5bb16c94fc577b",
          "withoutMetadata": "27df8fb1037bdd28bac67c307fbe722465ebe420811b667056641cd0901e12f5",
          "linkedWithoutMetadata": "27df8fb1037bdd28bac67c307fbe722465ebe420811b667056641cd0901e12f5"
        },
        "inherit": [
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "createAgreement(bytes32,bytes32,bytes32[],uint256[],uint256[])",
          "createAgreementAndPay(bytes32,bytes32,bytes32[],uint256[],uint256[],uint256,address payable,address,uint256[],address[])",
          "getConditionTypes()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "conditionTypes",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_address)dyn_storage",
              "contract": "AgreementTemplate",
              "src": "contracts/templates/AgreementTemplate.sol:24"
            },
            {
              "label": "agreementStoreManager",
              "offset": 0,
              "slot": "102",
              "type": "t_contract(AgreementStoreManager)7793",
              "contract": "AgreementTemplate",
              "src": "contracts/templates/AgreementTemplate.sol:26"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(AgreementStoreManager)7793": {
              "label": "contract AgreementStoreManager",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "BaseEscrowTemplate": {
        "src": "contracts/templates/BaseEscrowTemplate.sol:11",
        "version": {
          "withMetadata": "3668733305a9a0295e12b97a5568a4fc6ff3e62c991ec23dfe39915f3b00f2c5",
          "withoutMetadata": "a85ea7572aa868ef21e4584e5976d302ac3b6a7db74a72e993b12ab061168028",
          "linkedWithoutMetadata": "a85ea7572aa868ef21e4584e5976d302ac3b6a7db74a72e993b12ab061168028"
        },
        "inherit": [
          "AgreementTemplate",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "createAgreement(bytes32,bytes32,bytes32[],uint256[],uint256[],address)",
          "createAgreementAndPayEscrow(bytes32,bytes32,bytes32[],uint256[],uint256[],address,uint256,address payable,address,uint256[],address[])",
          "getAgreementData(bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "conditionTypes",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_address)dyn_storage",
              "contract": "AgreementTemplate",
              "src": "contracts/templates/AgreementTemplate.sol:24"
            },
            {
              "label": "agreementStoreManager",
              "offset": 0,
              "slot": "102",
              "type": "t_contract(AgreementStoreManager)7793",
              "contract": "AgreementTemplate",
              "src": "contracts/templates/AgreementTemplate.sol:26"
            },
            {
              "label": "agreementData",
              "offset": 0,
              "slot": "103",
              "type": "t_struct(AgreementData)26986_storage",
              "contract": "BaseEscrowTemplate",
              "src": "contracts/templates/BaseEscrowTemplate.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(AgreementStoreManager)7793": {
              "label": "contract AgreementStoreManager",
              "numberOfBytes": "20"
            },
            "t_mapping(t_bytes32,t_struct(AgreementDataModel)26977_storage)": {
              "label": "mapping(bytes32 => struct BaseEscrowTemplate.AgreementDataModel)",
              "numberOfBytes": "32"
            },
            "t_struct(AgreementData)26986_storage": {
              "label": "struct BaseEscrowTemplate.AgreementData",
              "members": [
                {
                  "label": "agreementDataItems",
                  "type": "t_mapping(t_bytes32,t_struct(AgreementDataModel)26977_storage)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "agreementIds",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(AgreementDataModel)26977_storage": {
              "label": "struct BaseEscrowTemplate.AgreementDataModel",
              "members": [
                {
                  "label": "accessConsumer",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "accessProvider",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "did",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "DIDSalesTemplate": {
        "src": "contracts/templates/DIDSalesTemplate.sol:33",
        "version": {
          "withMetadata": "4bacacc0ff54cd340282ae8b8c270f953c18e840f3d1dc7d7ed671a97c5ad98c",
          "withoutMetadata": "a0379e470df4adf5ea2b1de066ef100e5a33a671aa58bc4ce10d9f2f20ac28e9",
          "linkedWithoutMetadata": "a0379e470df4adf5ea2b1de066ef100e5a33a671aa58bc4ce10d9f2f20ac28e9"
        },
        "inherit": [
          "BaseEscrowTemplate",
          "AgreementTemplate",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "id()",
          "initialize(address,address,address,address,address payable)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "conditionTypes",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_address)dyn_storage",
              "contract": "AgreementTemplate",
              "src": "contracts/templates/AgreementTemplate.sol:24"
            },
            {
              "label": "agreementStoreManager",
              "offset": 0,
              "slot": "102",
              "type": "t_contract(AgreementStoreManager)7793",
              "contract": "AgreementTemplate",
              "src": "contracts/templates/AgreementTemplate.sol:26"
            },
            {
              "label": "agreementData",
              "offset": 0,
              "slot": "103",
              "type": "t_struct(AgreementData)26986_storage",
              "contract": "BaseEscrowTemplate",
              "src": "contracts/templates/BaseEscrowTemplate.sol:13"
            },
            {
              "label": "didRegistry",
              "offset": 0,
              "slot": "105",
              "type": "t_contract(DIDRegistry)23815",
              "contract": "DIDSalesTemplate",
              "src": "contracts/templates/DIDSalesTemplate.sol:35"
            },
            {
              "label": "lockPaymentCondition",
              "offset": 0,
              "slot": "106",
              "type": "t_contract(LockPaymentCondition)10445",
              "contract": "DIDSalesTemplate",
              "src": "contracts/templates/DIDSalesTemplate.sol:36"
            },
            {
              "label": "transferCondition",
              "offset": 0,
              "slot": "107",
              "type": "t_contract(TransferDIDOwnershipCondition)13880",
              "contract": "DIDSalesTemplate",
              "src": "contracts/templates/DIDSalesTemplate.sol:37"
            },
            {
              "label": "rewardCondition",
              "offset": 0,
              "slot": "108",
              "type": "t_contract(EscrowPaymentCondition)16458",
              "contract": "DIDSalesTemplate",
              "src": "contracts/templates/DIDSalesTemplate.sol:38"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(AgreementStoreManager)7793": {
              "label": "contract AgreementStoreManager",
              "numberOfBytes": "20"
            },
            "t_contract(DIDRegistry)23815": {
              "label": "contract DIDRegistry",
              "numberOfBytes": "20"
            },
            "t_contract(EscrowPaymentCondition)16458": {
              "label": "contract EscrowPaymentCondition",
              "numberOfBytes": "20"
            },
            "t_contract(LockPaymentCondition)10445": {
              "label": "contract LockPaymentCondition",
              "numberOfBytes": "20"
            },
            "t_contract(TransferDIDOwnershipCondition)13880": {
              "label": "contract TransferDIDOwnershipCondition",
              "numberOfBytes": "20"
            },
            "t_mapping(t_bytes32,t_struct(AgreementDataModel)26977_storage)": {
              "label": "mapping(bytes32 => struct BaseEscrowTemplate.AgreementDataModel)",
              "numberOfBytes": "32"
            },
            "t_struct(AgreementData)26986_storage": {
              "label": "struct BaseEscrowTemplate.AgreementData",
              "members": [
                {
                  "label": "agreementDataItems",
                  "type": "t_mapping(t_bytes32,t_struct(AgreementDataModel)26977_storage)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "agreementIds",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(AgreementDataModel)26977_storage": {
              "label": "struct BaseEscrowTemplate.AgreementDataModel",
              "members": [
                {
                  "label": "accessConsumer",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "accessProvider",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "did",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "DynamicAccessTemplate": {
        "src": "contracts/templates/DynamicAccessTemplate.sol:21",
        "version": {
          "withMetadata": "8511065bf5edb6bbceefddbff6cce47577e74fa6691d5cab4f2515da48816a07",
          "withoutMetadata": "a2d6a46112588b5c8a38c370792b63a5e9049cbfc4a634625649cde975d4fe56",
          "linkedWithoutMetadata": "a2d6a46112588b5c8a38c370792b63a5e9049cbfc4a634625649cde975d4fe56"
        },
        "inherit": [
          "BaseEscrowTemplate",
          "AgreementTemplate",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address,address,address)",
          "addTemplateCondition(address)",
          "removeLastTemplateCondition()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "conditionTypes",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_address)dyn_storage",
              "contract": "AgreementTemplate",
              "src": "contracts/templates/AgreementTemplate.sol:24"
            },
            {
              "label": "agreementStoreManager",
              "offset": 0,
              "slot": "102",
              "type": "t_contract(AgreementStoreManager)7793",
              "contract": "AgreementTemplate",
              "src": "contracts/templates/AgreementTemplate.sol:26"
            },
            {
              "label": "agreementData",
              "offset": 0,
              "slot": "103",
              "type": "t_struct(AgreementData)26986_storage",
              "contract": "BaseEscrowTemplate",
              "src": "contracts/templates/BaseEscrowTemplate.sol:13"
            },
            {
              "label": "didRegistry",
              "offset": 0,
              "slot": "105",
              "type": "t_contract(DIDRegistry)23815",
              "contract": "DynamicAccessTemplate",
              "src": "contracts/templates/DynamicAccessTemplate.sol:23"
            },
            {
              "label": "templateConfig",
              "offset": 0,
              "slot": "106",
              "type": "t_struct(TemplateConditions)27516_storage",
              "contract": "DynamicAccessTemplate",
              "src": "contracts/templates/DynamicAccessTemplate.sol:25"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(AgreementStoreManager)7793": {
              "label": "contract AgreementStoreManager",
              "numberOfBytes": "20"
            },
            "t_contract(Condition)8622": {
              "label": "contract Condition",
              "numberOfBytes": "20"
            },
            "t_contract(DIDRegistry)23815": {
              "label": "contract DIDRegistry",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_contract(Condition)8622)": {
              "label": "mapping(address => contract Condition)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(AgreementDataModel)26977_storage)": {
              "label": "mapping(bytes32 => struct BaseEscrowTemplate.AgreementDataModel)",
              "numberOfBytes": "32"
            },
            "t_struct(AgreementData)26986_storage": {
              "label": "struct BaseEscrowTemplate.AgreementData",
              "members": [
                {
                  "label": "agreementDataItems",
                  "type": "t_mapping(t_bytes32,t_struct(AgreementDataModel)26977_storage)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "agreementIds",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(AgreementDataModel)26977_storage": {
              "label": "struct BaseEscrowTemplate.AgreementDataModel",
              "members": [
                {
                  "label": "accessConsumer",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "accessProvider",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "did",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(TemplateConditions)27516_storage": {
              "label": "struct DynamicAccessTemplate.TemplateConditions",
              "members": [
                {
                  "label": "templateConditions",
                  "type": "t_mapping(t_address,t_contract(Condition)8622)",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "EscrowComputeExecutionTemplate": {
        "src": "contracts/templates/EscrowComputeExecutionTemplate.sol:36",
        "version": {
          "withMetadata": "eb8b6a3c19c7dee951119f87efd4057eb521f4c4108b51fb197b8f7608dfe6a5",
          "withoutMetadata": "0bcd0f79a5bd3605709be72af29ad09106857c5e65468aec8158f1b5aac6fb25",
          "linkedWithoutMetadata": "0bcd0f79a5bd3605709be72af29ad09106857c5e65468aec8158f1b5aac6fb25"
        },
        "inherit": [
          "BaseEscrowTemplate",
          "AgreementTemplate",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address,address,address,address,address,address payable)",
          "name()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "conditionTypes",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_address)dyn_storage",
              "contract": "AgreementTemplate",
              "src": "contracts/templates/AgreementTemplate.sol:24"
            },
            {
              "label": "agreementStoreManager",
              "offset": 0,
              "slot": "102",
              "type": "t_contract(AgreementStoreManager)7793",
              "contract": "AgreementTemplate",
              "src": "contracts/templates/AgreementTemplate.sol:26"
            },
            {
              "label": "agreementData",
              "offset": 0,
              "slot": "103",
              "type": "t_struct(AgreementData)26986_storage",
              "contract": "BaseEscrowTemplate",
              "src": "contracts/templates/BaseEscrowTemplate.sol:13"
            },
            {
              "label": "didRegistry",
              "offset": 0,
              "slot": "105",
              "type": "t_contract(DIDRegistry)23815",
              "contract": "EscrowComputeExecutionTemplate",
              "src": "contracts/templates/EscrowComputeExecutionTemplate.sol:38"
            },
            {
              "label": "computeExecutionCondition",
              "offset": 0,
              "slot": "106",
              "type": "t_contract(ComputeExecutionCondition)8543",
              "contract": "EscrowComputeExecutionTemplate",
              "src": "contracts/templates/EscrowComputeExecutionTemplate.sol:39"
            },
            {
              "label": "lockPaymentCondition",
              "offset": 0,
              "slot": "107",
              "type": "t_contract(LockPaymentCondition)10445",
              "contract": "EscrowComputeExecutionTemplate",
              "src": "contracts/templates/EscrowComputeExecutionTemplate.sol:40"
            },
            {
              "label": "escrowPayment",
              "offset": 0,
              "slot": "108",
              "type": "t_contract(EscrowPaymentCondition)16458",
              "contract": "EscrowComputeExecutionTemplate",
              "src": "contracts/templates/EscrowComputeExecutionTemplate.sol:41"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(AgreementStoreManager)7793": {
              "label": "contract AgreementStoreManager",
              "numberOfBytes": "20"
            },
            "t_contract(ComputeExecutionCondition)8543": {
              "label": "contract ComputeExecutionCondition",
              "numberOfBytes": "20"
            },
            "t_contract(DIDRegistry)23815": {
              "label": "contract DIDRegistry",
              "numberOfBytes": "20"
            },
            "t_contract(EscrowPaymentCondition)16458": {
              "label": "contract EscrowPaymentCondition",
              "numberOfBytes": "20"
            },
            "t_contract(LockPaymentCondition)10445": {
              "label": "contract LockPaymentCondition",
              "numberOfBytes": "20"
            },
            "t_mapping(t_bytes32,t_struct(AgreementDataModel)26977_storage)": {
              "label": "mapping(bytes32 => struct BaseEscrowTemplate.AgreementDataModel)",
              "numberOfBytes": "32"
            },
            "t_struct(AgreementData)26986_storage": {
              "label": "struct BaseEscrowTemplate.AgreementData",
              "members": [
                {
                  "label": "agreementDataItems",
                  "type": "t_mapping(t_bytes32,t_struct(AgreementDataModel)26977_storage)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "agreementIds",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(AgreementDataModel)26977_storage": {
              "label": "struct BaseEscrowTemplate.AgreementDataModel",
              "members": [
                {
                  "label": "accessConsumer",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "accessProvider",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "did",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "NFT721AccessProofTemplate": {
        "src": "contracts/templates/NFT721AccessProofTemplate.sol:15",
        "version": {
          "withMetadata": "10656a5ec5c6c6fb214398e4894323724b37fb9a4c7e0be10f95a170fc7c06c1",
          "withoutMetadata": "43f6287759991bf6f46d57c46bb77c0cb1fa92fe7204678d333bd81f5855d448",
          "linkedWithoutMetadata": "43f6287759991bf6f46d57c46bb77c0cb1fa92fe7204678d333bd81f5855d448"
        },
        "inherit": [
          "NFTAccessProofTemplate",
          "BaseEscrowTemplate",
          "AgreementTemplate",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "conditionTypes",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_address)dyn_storage",
              "contract": "AgreementTemplate",
              "src": "contracts/templates/AgreementTemplate.sol:24"
            },
            {
              "label": "agreementStoreManager",
              "offset": 0,
              "slot": "102",
              "type": "t_contract(AgreementStoreManager)7793",
              "contract": "AgreementTemplate",
              "src": "contracts/templates/AgreementTemplate.sol:26"
            },
            {
              "label": "agreementData",
              "offset": 0,
              "slot": "103",
              "type": "t_struct(AgreementData)26986_storage",
              "contract": "BaseEscrowTemplate",
              "src": "contracts/templates/BaseEscrowTemplate.sol:13"
            },
            {
              "label": "didRegistry",
              "offset": 0,
              "slot": "105",
              "type": "t_contract(DIDRegistry)23815",
              "contract": "NFTAccessProofTemplate",
              "src": "contracts/templates/NFTAccessProofTemplate.sol:35"
            },
            {
              "label": "nftHolderCondition",
              "offset": 0,
              "slot": "106",
              "type": "t_contract(INFTHolder)10806",
              "contract": "NFTAccessProofTemplate",
              "src": "contracts/templates/NFTAccessProofTemplate.sol:36"
            },
            {
              "label": "accessCondition",
              "offset": 0,
              "slot": "107",
              "type": "t_contract(AccessProofCondition)8350",
              "contract": "NFTAccessProofTemplate",
              "src": "contracts/templates/NFTAccessProofTemplate.sol:37"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(AccessProofCondition)8350": {
              "label": "contract AccessProofCondition",
              "numberOfBytes": "20"
            },
            "t_contract(AgreementStoreManager)7793": {
              "label": "contract AgreementStoreManager",
              "numberOfBytes": "20"
            },
            "t_contract(DIDRegistry)23815": {
              "label": "contract DIDRegistry",
              "numberOfBytes": "20"
            },
            "t_contract(INFTHolder)10806": {
              "label": "contract INFTHolder",
              "numberOfBytes": "20"
            },
            "t_mapping(t_bytes32,t_struct(AgreementDataModel)26977_storage)": {
              "label": "mapping(bytes32 => struct BaseEscrowTemplate.AgreementDataModel)",
              "numberOfBytes": "32"
            },
            "t_struct(AgreementData)26986_storage": {
              "label": "struct BaseEscrowTemplate.AgreementData",
              "members": [
                {
                  "label": "agreementDataItems",
                  "type": "t_mapping(t_bytes32,t_struct(AgreementDataModel)26977_storage)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "agreementIds",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(AgreementDataModel)26977_storage": {
              "label": "struct BaseEscrowTemplate.AgreementDataModel",
              "members": [
                {
                  "label": "accessConsumer",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "accessProvider",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "did",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "NFT721AccessSwapTemplate": {
        "src": "contracts/templates/NFT721AccessSwapTemplate.sol:9",
        "version": {
          "withMetadata": "8730031b9b6522bf03f1588295fed05a99fc9614e3ecda3004fc837b6cd1beda",
          "withoutMetadata": "93f53b8420c7448b8c3d7ee8e7f3d7177c1f7b59ac9ffd32f41a53a0af1fd0c1",
          "linkedWithoutMetadata": "93f53b8420c7448b8c3d7ee8e7f3d7177c1f7b59ac9ffd32f41a53a0af1fd0c1"
        },
        "inherit": [
          "NFTAccessSwapTemplate",
          "BaseEscrowTemplate",
          "AgreementTemplate",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "conditionTypes",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_address)dyn_storage",
              "contract": "AgreementTemplate",
              "src": "contracts/templates/AgreementTemplate.sol:24"
            },
            {
              "label": "agreementStoreManager",
              "offset": 0,
              "slot": "102",
              "type": "t_contract(AgreementStoreManager)7793",
              "contract": "AgreementTemplate",
              "src": "contracts/templates/AgreementTemplate.sol:26"
            },
            {
              "label": "agreementData",
              "offset": 0,
              "slot": "103",
              "type": "t_struct(AgreementData)26986_storage",
              "contract": "BaseEscrowTemplate",
              "src": "contracts/templates/BaseEscrowTemplate.sol:13"
            },
            {
              "label": "didRegistry",
              "offset": 0,
              "slot": "105",
              "type": "t_contract(DIDRegistry)23815",
              "contract": "NFTAccessSwapTemplate",
              "src": "contracts/templates/NFTAccessSwapTemplate.sol:36"
            },
            {
              "label": "lockPaymentCondition",
              "offset": 0,
              "slot": "106",
              "type": "t_contract(INFTLock)10890",
              "contract": "NFTAccessSwapTemplate",
              "src": "contracts/templates/NFTAccessSwapTemplate.sol:37"
            },
            {
              "label": "rewardCondition",
              "offset": 0,
              "slot": "107",
              "type": "t_contract(INFTEscrow)16481",
              "contract": "NFTAccessSwapTemplate",
              "src": "contracts/templates/NFTAccessSwapTemplate.sol:38"
            },
            {
              "label": "accessCondition",
              "offset": 0,
              "slot": "108",
              "type": "t_contract(AccessProofCondition)8350",
              "contract": "NFTAccessSwapTemplate",
              "src": "contracts/templates/NFTAccessSwapTemplate.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(AccessProofCondition)8350": {
              "label": "contract AccessProofCondition",
              "numberOfBytes": "20"
            },
            "t_contract(AgreementStoreManager)7793": {
              "label": "contract AgreementStoreManager",
              "numberOfBytes": "20"
            },
            "t_contract(DIDRegistry)23815": {
              "label": "contract DIDRegistry",
              "numberOfBytes": "20"
            },
            "t_contract(INFTEscrow)16481": {
              "label": "contract INFTEscrow",
              "numberOfBytes": "20"
            },
            "t_contract(INFTLock)10890": {
              "label": "contract INFTLock",
              "numberOfBytes": "20"
            },
            "t_mapping(t_bytes32,t_struct(AgreementDataModel)26977_storage)": {
              "label": "mapping(bytes32 => struct BaseEscrowTemplate.AgreementDataModel)",
              "numberOfBytes": "32"
            },
            "t_struct(AgreementData)26986_storage": {
              "label": "struct BaseEscrowTemplate.AgreementData",
              "members": [
                {
                  "label": "agreementDataItems",
                  "type": "t_mapping(t_bytes32,t_struct(AgreementDataModel)26977_storage)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "agreementIds",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(AgreementDataModel)26977_storage": {
              "label": "struct BaseEscrowTemplate.AgreementDataModel",
              "members": [
                {
                  "label": "accessConsumer",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "accessProvider",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "did",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "NFT721AccessTemplate": {
        "src": "contracts/templates/NFT721AccessTemplate.sol:15",
        "version": {
          "withMetadata": "ad284c892f9b59d6d9aa43c87ab812cf51bffc8a41ff8ad7c5e57d493b62bdbf",
          "withoutMetadata": "43f6287759991bf6f46d57c46bb77c0cb1fa92fe7204678d333bd81f5855d448",
          "linkedWithoutMetadata": "43f6287759991bf6f46d57c46bb77c0cb1fa92fe7204678d333bd81f5855d448"
        },
        "inherit": [
          "NFTAccessTemplate",
          "BaseEscrowTemplate",
          "AgreementTemplate",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "conditionTypes",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_address)dyn_storage",
              "contract": "AgreementTemplate",
              "src": "contracts/templates/AgreementTemplate.sol:24"
            },
            {
              "label": "agreementStoreManager",
              "offset": 0,
              "slot": "102",
              "type": "t_contract(AgreementStoreManager)7793",
              "contract": "AgreementTemplate",
              "src": "contracts/templates/AgreementTemplate.sol:26"
            },
            {
              "label": "agreementData",
              "offset": 0,
              "slot": "103",
              "type": "t_struct(AgreementData)26986_storage",
              "contract": "BaseEscrowTemplate",
              "src": "contracts/templates/BaseEscrowTemplate.sol:13"
            },
            {
              "label": "didRegistry",
              "offset": 0,
              "slot": "105",
              "type": "t_contract(DIDRegistry)23815",
              "contract": "NFTAccessTemplate",
              "src": "contracts/templates/NFTAccessTemplate.sol:35"
            },
            {
              "label": "nftHolderCondition",
              "offset": 0,
              "slot": "106",
              "type": "t_contract(INFTHolder)10806",
              "contract": "NFTAccessTemplate",
              "src": "contracts/templates/NFTAccessTemplate.sol:36"
            },
            {
              "label": "accessCondition",
              "offset": 0,
              "slot": "107",
              "type": "t_contract(INFTAccess)10759",
              "contract": "NFTAccessTemplate",
              "src": "contracts/templates/NFTAccessTemplate.sol:37"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(AgreementStoreManager)7793": {
              "label": "contract AgreementStoreManager",
              "numberOfBytes": "20"
            },
            "t_contract(DIDRegistry)23815": {
              "label": "contract DIDRegistry",
              "numberOfBytes": "20"
            },
            "t_contract(INFTAccess)10759": {
              "label": "contract INFTAccess",
              "numberOfBytes": "20"
            },
            "t_contract(INFTHolder)10806": {
              "label": "contract INFTHolder",
              "numberOfBytes": "20"
            },
            "t_mapping(t_bytes32,t_struct(AgreementDataModel)26977_storage)": {
              "label": "mapping(bytes32 => struct BaseEscrowTemplate.AgreementDataModel)",
              "numberOfBytes": "32"
            },
            "t_struct(AgreementData)26986_storage": {
              "label": "struct BaseEscrowTemplate.AgreementData",
              "members": [
                {
                  "label": "agreementDataItems",
                  "type": "t_mapping(t_bytes32,t_struct(AgreementDataModel)26977_storage)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "agreementIds",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(AgreementDataModel)26977_storage": {
              "label": "struct BaseEscrowTemplate.AgreementDataModel",
              "members": [
                {
                  "label": "accessConsumer",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "accessProvider",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "did",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "NFT721SalesTemplate": {
        "src": "contracts/templates/NFT721SalesTemplate.sol:15",
        "version": {
          "withMetadata": "39906946b5b0e591b311312cc0e62e68f5a59083c4e662d69d25a1690f05c283",
          "withoutMetadata": "1b83a5576d31ea104b8be3d2a85daf3f92e0e44e681fcc648578bb112116fda5",
          "linkedWithoutMetadata": "1b83a5576d31ea104b8be3d2a85daf3f92e0e44e681fcc648578bb112116fda5"
        },
        "inherit": [
          "NFTSalesTemplate",
          "BaseEscrowTemplate",
          "AgreementTemplate",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "conditionTypes",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_address)dyn_storage",
              "contract": "AgreementTemplate",
              "src": "contracts/templates/AgreementTemplate.sol:24"
            },
            {
              "label": "agreementStoreManager",
              "offset": 0,
              "slot": "102",
              "type": "t_contract(AgreementStoreManager)7793",
              "contract": "AgreementTemplate",
              "src": "contracts/templates/AgreementTemplate.sol:26"
            },
            {
              "label": "agreementData",
              "offset": 0,
              "slot": "103",
              "type": "t_struct(AgreementData)26986_storage",
              "contract": "BaseEscrowTemplate",
              "src": "contracts/templates/BaseEscrowTemplate.sol:13"
            },
            {
              "label": "didRegistry",
              "offset": 0,
              "slot": "105",
              "type": "t_contract(DIDRegistry)23815",
              "contract": "NFTSalesTemplate",
              "src": "contracts/templates/NFTSalesTemplate.sol:35"
            },
            {
              "label": "lockPaymentCondition",
              "offset": 0,
              "slot": "106",
              "type": "t_contract(LockPaymentCondition)10445",
              "contract": "NFTSalesTemplate",
              "src": "contracts/templates/NFTSalesTemplate.sol:36"
            },
            {
              "label": "transferCondition",
              "offset": 0,
              "slot": "107",
              "type": "t_contract(ITransferNFT)10957",
              "contract": "NFTSalesTemplate",
              "src": "contracts/templates/NFTSalesTemplate.sol:37"
            },
            {
              "label": "rewardCondition",
              "offset": 0,
              "slot": "108",
              "type": "t_contract(EscrowPaymentCondition)16458",
              "contract": "NFTSalesTemplate",
              "src": "contracts/templates/NFTSalesTemplate.sol:38"
            },
            {
              "label": "nftPrice",
              "offset": 0,
              "slot": "109",
              "type": "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_bytes32,t_uint256))))",
              "contract": "NFTSalesTemplate",
              "src": "contracts/templates/NFTSalesTemplate.sol:107"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(AgreementStoreManager)7793": {
              "label": "contract AgreementStoreManager",
              "numberOfBytes": "20"
            },
            "t_contract(DIDRegistry)23815": {
              "label": "contract DIDRegistry",
              "numberOfBytes": "20"
            },
            "t_contract(EscrowPaymentCondition)16458": {
              "label": "contract EscrowPaymentCondition",
              "numberOfBytes": "20"
            },
            "t_contract(ITransferNFT)10957": {
              "label": "contract ITransferNFT",
              "numberOfBytes": "20"
            },
            "t_contract(LockPaymentCondition)10445": {
              "label": "contract LockPaymentCondition",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_bytes32,t_uint256))))": {
              "label": "mapping(address => mapping(address => mapping(address => mapping(bytes32 => uint256))))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_mapping(t_bytes32,t_uint256)))": {
              "label": "mapping(address => mapping(address => mapping(bytes32 => uint256)))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_bytes32,t_uint256))": {
              "label": "mapping(address => mapping(bytes32 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(AgreementDataModel)26977_storage)": {
              "label": "mapping(bytes32 => struct BaseEscrowTemplate.AgreementDataModel)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(AgreementData)26986_storage": {
              "label": "struct BaseEscrowTemplate.AgreementData",
              "members": [
                {
                  "label": "agreementDataItems",
                  "type": "t_mapping(t_bytes32,t_struct(AgreementDataModel)26977_storage)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "agreementIds",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(AgreementDataModel)26977_storage": {
              "label": "struct BaseEscrowTemplate.AgreementDataModel",
              "members": [
                {
                  "label": "accessConsumer",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "accessProvider",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "did",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "NFT721SalesWithAccessTemplate": {
        "src": "contracts/templates/NFT721SalesWithAccessTemplate.sol:9",
        "version": {
          "withMetadata": "2648e11597f7d41c8125255c086a2f9e3a97205800340e0992471e48f5094ced",
          "withoutMetadata": "814691eb26d6a41a68550d0e368232fbc999f8a6d123d4735df46dec4cf2e51c",
          "linkedWithoutMetadata": "814691eb26d6a41a68550d0e368232fbc999f8a6d123d4735df46dec4cf2e51c"
        },
        "inherit": [
          "NFTSalesWithAccessTemplate",
          "BaseEscrowTemplate",
          "AgreementTemplate",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "conditionTypes",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_address)dyn_storage",
              "contract": "AgreementTemplate",
              "src": "contracts/templates/AgreementTemplate.sol:24"
            },
            {
              "label": "agreementStoreManager",
              "offset": 0,
              "slot": "102",
              "type": "t_contract(AgreementStoreManager)7793",
              "contract": "AgreementTemplate",
              "src": "contracts/templates/AgreementTemplate.sol:26"
            },
            {
              "label": "agreementData",
              "offset": 0,
              "slot": "103",
              "type": "t_struct(AgreementData)26986_storage",
              "contract": "BaseEscrowTemplate",
              "src": "contracts/templates/BaseEscrowTemplate.sol:13"
            },
            {
              "label": "didRegistry",
              "offset": 0,
              "slot": "105",
              "type": "t_contract(DIDRegistry)23815",
              "contract": "NFTSalesWithAccessTemplate",
              "src": "contracts/templates/NFTSalesWithAccessTemplate.sol:37"
            },
            {
              "label": "lockPaymentCondition",
              "offset": 0,
              "slot": "106",
              "type": "t_contract(LockPaymentCondition)10445",
              "contract": "NFTSalesWithAccessTemplate",
              "src": "contracts/templates/NFTSalesWithAccessTemplate.sol:38"
            },
            {
              "label": "transferCondition",
              "offset": 0,
              "slot": "107",
              "type": "t_contract(ITransferNFT)10957",
              "contract": "NFTSalesWithAccessTemplate",
              "src": "contracts/templates/NFTSalesWithAccessTemplate.sol:39"
            },
            {
              "label": "rewardCondition",
              "offset": 0,
              "slot": "108",
              "type": "t_contract(EscrowPaymentCondition)16458",
              "contract": "NFTSalesWithAccessTemplate",
              "src": "contracts/templates/NFTSalesWithAccessTemplate.sol:40"
            },
            {
              "label": "accessCondition",
              "offset": 0,
              "slot": "109",
              "type": "t_contract(AccessProofCondition)8350",
              "contract": "NFTSalesWithAccessTemplate",
              "src": "contracts/templates/NFTSalesWithAccessTemplate.sol:41"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(AccessProofCondition)8350": {
              "label": "contract AccessProofCondition",
              "numberOfBytes": "20"
            },
            "t_contract(AgreementStoreManager)7793": {
              "label": "contract AgreementStoreManager",
              "numberOfBytes": "20"
            },
            "t_contract(DIDRegistry)23815": {
              "label": "contract DIDRegistry",
              "numberOfBytes": "20"
            },
            "t_contract(EscrowPaymentCondition)16458": {
              "label": "contract EscrowPaymentCondition",
              "numberOfBytes": "20"
            },
            "t_contract(ITransferNFT)10957": {
              "label": "contract ITransferNFT",
              "numberOfBytes": "20"
            },
            "t_contract(LockPaymentCondition)10445": {
              "label": "contract LockPaymentCondition",
              "numberOfBytes": "20"
            },
            "t_mapping(t_bytes32,t_struct(AgreementDataModel)26977_storage)": {
              "label": "mapping(bytes32 => struct BaseEscrowTemplate.AgreementDataModel)",
              "numberOfBytes": "32"
            },
            "t_struct(AgreementData)26986_storage": {
              "label": "struct BaseEscrowTemplate.AgreementData",
              "members": [
                {
                  "label": "agreementDataItems",
                  "type": "t_mapping(t_bytes32,t_struct(AgreementDataModel)26977_storage)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "agreementIds",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(AgreementDataModel)26977_storage": {
              "label": "struct BaseEscrowTemplate.AgreementDataModel",
              "members": [
                {
                  "label": "accessConsumer",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "accessProvider",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "did",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "NFTAccessProofTemplate": {
        "src": "contracts/templates/NFTAccessProofTemplate.sol:33",
        "version": {
          "withMetadata": "eca05ce2380e5beabe128deddca0f355900e677fa15b6a2adcc606734147757c",
          "withoutMetadata": "43f6287759991bf6f46d57c46bb77c0cb1fa92fe7204678d333bd81f5855d448",
          "linkedWithoutMetadata": "43f6287759991bf6f46d57c46bb77c0cb1fa92fe7204678d333bd81f5855d448"
        },
        "inherit": [
          "BaseEscrowTemplate",
          "AgreementTemplate",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address,address,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "conditionTypes",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_address)dyn_storage",
              "contract": "AgreementTemplate",
              "src": "contracts/templates/AgreementTemplate.sol:24"
            },
            {
              "label": "agreementStoreManager",
              "offset": 0,
              "slot": "102",
              "type": "t_contract(AgreementStoreManager)7793",
              "contract": "AgreementTemplate",
              "src": "contracts/templates/AgreementTemplate.sol:26"
            },
            {
              "label": "agreementData",
              "offset": 0,
              "slot": "103",
              "type": "t_struct(AgreementData)26986_storage",
              "contract": "BaseEscrowTemplate",
              "src": "contracts/templates/BaseEscrowTemplate.sol:13"
            },
            {
              "label": "didRegistry",
              "offset": 0,
              "slot": "105",
              "type": "t_contract(DIDRegistry)23815",
              "contract": "NFTAccessProofTemplate",
              "src": "contracts/templates/NFTAccessProofTemplate.sol:35"
            },
            {
              "label": "nftHolderCondition",
              "offset": 0,
              "slot": "106",
              "type": "t_contract(INFTHolder)10806",
              "contract": "NFTAccessProofTemplate",
              "src": "contracts/templates/NFTAccessProofTemplate.sol:36"
            },
            {
              "label": "accessCondition",
              "offset": 0,
              "slot": "107",
              "type": "t_contract(AccessProofCondition)8350",
              "contract": "NFTAccessProofTemplate",
              "src": "contracts/templates/NFTAccessProofTemplate.sol:37"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(AccessProofCondition)8350": {
              "label": "contract AccessProofCondition",
              "numberOfBytes": "20"
            },
            "t_contract(AgreementStoreManager)7793": {
              "label": "contract AgreementStoreManager",
              "numberOfBytes": "20"
            },
            "t_contract(DIDRegistry)23815": {
              "label": "contract DIDRegistry",
              "numberOfBytes": "20"
            },
            "t_contract(INFTHolder)10806": {
              "label": "contract INFTHolder",
              "numberOfBytes": "20"
            },
            "t_mapping(t_bytes32,t_struct(AgreementDataModel)26977_storage)": {
              "label": "mapping(bytes32 => struct BaseEscrowTemplate.AgreementDataModel)",
              "numberOfBytes": "32"
            },
            "t_struct(AgreementData)26986_storage": {
              "label": "struct BaseEscrowTemplate.AgreementData",
              "members": [
                {
                  "label": "agreementDataItems",
                  "type": "t_mapping(t_bytes32,t_struct(AgreementDataModel)26977_storage)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "agreementIds",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(AgreementDataModel)26977_storage": {
              "label": "struct BaseEscrowTemplate.AgreementDataModel",
              "members": [
                {
                  "label": "accessConsumer",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "accessProvider",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "did",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "NFTAccessSwapTemplate": {
        "src": "contracts/templates/NFTAccessSwapTemplate.sol:34",
        "version": {
          "withMetadata": "318224bfc420ba0aebfcb018e6e415acbc7d23a9be38bc9b221d1f04bc89489f",
          "withoutMetadata": "93f53b8420c7448b8c3d7ee8e7f3d7177c1f7b59ac9ffd32f41a53a0af1fd0c1",
          "linkedWithoutMetadata": "93f53b8420c7448b8c3d7ee8e7f3d7177c1f7b59ac9ffd32f41a53a0af1fd0c1"
        },
        "inherit": [
          "BaseEscrowTemplate",
          "AgreementTemplate",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "id()",
          "initialize(address,address,address,address payable,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "conditionTypes",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_address)dyn_storage",
              "contract": "AgreementTemplate",
              "src": "contracts/templates/AgreementTemplate.sol:24"
            },
            {
              "label": "agreementStoreManager",
              "offset": 0,
              "slot": "102",
              "type": "t_contract(AgreementStoreManager)7793",
              "contract": "AgreementTemplate",
              "src": "contracts/templates/AgreementTemplate.sol:26"
            },
            {
              "label": "agreementData",
              "offset": 0,
              "slot": "103",
              "type": "t_struct(AgreementData)26986_storage",
              "contract": "BaseEscrowTemplate",
              "src": "contracts/templates/BaseEscrowTemplate.sol:13"
            },
            {
              "label": "didRegistry",
              "offset": 0,
              "slot": "105",
              "type": "t_contract(DIDRegistry)23815",
              "contract": "NFTAccessSwapTemplate",
              "src": "contracts/templates/NFTAccessSwapTemplate.sol:36"
            },
            {
              "label": "lockPaymentCondition",
              "offset": 0,
              "slot": "106",
              "type": "t_contract(INFTLock)10890",
              "contract": "NFTAccessSwapTemplate",
              "src": "contracts/templates/NFTAccessSwapTemplate.sol:37"
            },
            {
              "label": "rewardCondition",
              "offset": 0,
              "slot": "107",
              "type": "t_contract(INFTEscrow)16481",
              "contract": "NFTAccessSwapTemplate",
              "src": "contracts/templates/NFTAccessSwapTemplate.sol:38"
            },
            {
              "label": "accessCondition",
              "offset": 0,
              "slot": "108",
              "type": "t_contract(AccessProofCondition)8350",
              "contract": "NFTAccessSwapTemplate",
              "src": "contracts/templates/NFTAccessSwapTemplate.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(AccessProofCondition)8350": {
              "label": "contract AccessProofCondition",
              "numberOfBytes": "20"
            },
            "t_contract(AgreementStoreManager)7793": {
              "label": "contract AgreementStoreManager",
              "numberOfBytes": "20"
            },
            "t_contract(DIDRegistry)23815": {
              "label": "contract DIDRegistry",
              "numberOfBytes": "20"
            },
            "t_contract(INFTEscrow)16481": {
              "label": "contract INFTEscrow",
              "numberOfBytes": "20"
            },
            "t_contract(INFTLock)10890": {
              "label": "contract INFTLock",
              "numberOfBytes": "20"
            },
            "t_mapping(t_bytes32,t_struct(AgreementDataModel)26977_storage)": {
              "label": "mapping(bytes32 => struct BaseEscrowTemplate.AgreementDataModel)",
              "numberOfBytes": "32"
            },
            "t_struct(AgreementData)26986_storage": {
              "label": "struct BaseEscrowTemplate.AgreementData",
              "members": [
                {
                  "label": "agreementDataItems",
                  "type": "t_mapping(t_bytes32,t_struct(AgreementDataModel)26977_storage)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "agreementIds",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(AgreementDataModel)26977_storage": {
              "label": "struct BaseEscrowTemplate.AgreementDataModel",
              "members": [
                {
                  "label": "accessConsumer",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "accessProvider",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "did",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "NFTAccessTemplate": {
        "src": "contracts/templates/NFTAccessTemplate.sol:33",
        "version": {
          "withMetadata": "7285ed8856eb7fc6b3d932924a8e78fd7a1e4215fc69a65a09dda945f90e1c00",
          "withoutMetadata": "43f6287759991bf6f46d57c46bb77c0cb1fa92fe7204678d333bd81f5855d448",
          "linkedWithoutMetadata": "43f6287759991bf6f46d57c46bb77c0cb1fa92fe7204678d333bd81f5855d448"
        },
        "inherit": [
          "BaseEscrowTemplate",
          "AgreementTemplate",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address,address,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "conditionTypes",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_address)dyn_storage",
              "contract": "AgreementTemplate",
              "src": "contracts/templates/AgreementTemplate.sol:24"
            },
            {
              "label": "agreementStoreManager",
              "offset": 0,
              "slot": "102",
              "type": "t_contract(AgreementStoreManager)7793",
              "contract": "AgreementTemplate",
              "src": "contracts/templates/AgreementTemplate.sol:26"
            },
            {
              "label": "agreementData",
              "offset": 0,
              "slot": "103",
              "type": "t_struct(AgreementData)26986_storage",
              "contract": "BaseEscrowTemplate",
              "src": "contracts/templates/BaseEscrowTemplate.sol:13"
            },
            {
              "label": "didRegistry",
              "offset": 0,
              "slot": "105",
              "type": "t_contract(DIDRegistry)23815",
              "contract": "NFTAccessTemplate",
              "src": "contracts/templates/NFTAccessTemplate.sol:35"
            },
            {
              "label": "nftHolderCondition",
              "offset": 0,
              "slot": "106",
              "type": "t_contract(INFTHolder)10806",
              "contract": "NFTAccessTemplate",
              "src": "contracts/templates/NFTAccessTemplate.sol:36"
            },
            {
              "label": "accessCondition",
              "offset": 0,
              "slot": "107",
              "type": "t_contract(INFTAccess)10759",
              "contract": "NFTAccessTemplate",
              "src": "contracts/templates/NFTAccessTemplate.sol:37"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(AgreementStoreManager)7793": {
              "label": "contract AgreementStoreManager",
              "numberOfBytes": "20"
            },
            "t_contract(DIDRegistry)23815": {
              "label": "contract DIDRegistry",
              "numberOfBytes": "20"
            },
            "t_contract(INFTAccess)10759": {
              "label": "contract INFTAccess",
              "numberOfBytes": "20"
            },
            "t_contract(INFTHolder)10806": {
              "label": "contract INFTHolder",
              "numberOfBytes": "20"
            },
            "t_mapping(t_bytes32,t_struct(AgreementDataModel)26977_storage)": {
              "label": "mapping(bytes32 => struct BaseEscrowTemplate.AgreementDataModel)",
              "numberOfBytes": "32"
            },
            "t_struct(AgreementData)26986_storage": {
              "label": "struct BaseEscrowTemplate.AgreementData",
              "members": [
                {
                  "label": "agreementDataItems",
                  "type": "t_mapping(t_bytes32,t_struct(AgreementDataModel)26977_storage)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "agreementIds",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(AgreementDataModel)26977_storage": {
              "label": "struct BaseEscrowTemplate.AgreementDataModel",
              "members": [
                {
                  "label": "accessConsumer",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "accessProvider",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "did",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "NFTSalesTemplate": {
        "src": "contracts/templates/NFTSalesTemplate.sol:33",
        "version": {
          "withMetadata": "887032734ee5e6f0a70b736c52dd44f66d4c3a7f5d080ed5276f9432ff5f8c8e",
          "withoutMetadata": "1b83a5576d31ea104b8be3d2a85daf3f92e0e44e681fcc648578bb112116fda5",
          "linkedWithoutMetadata": "1b83a5576d31ea104b8be3d2a85daf3f92e0e44e681fcc648578bb112116fda5"
        },
        "inherit": [
          "BaseEscrowTemplate",
          "AgreementTemplate",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "id()",
          "initialize(address,address,address,address,address payable)",
          "nftSale(address,bytes32,address,uint256)",
          "createAgreementFulfill(bytes32,bytes32,uint256[],uint256[],address,bytes[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "conditionTypes",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_address)dyn_storage",
              "contract": "AgreementTemplate",
              "src": "contracts/templates/AgreementTemplate.sol:24"
            },
            {
              "label": "agreementStoreManager",
              "offset": 0,
              "slot": "102",
              "type": "t_contract(AgreementStoreManager)7793",
              "contract": "AgreementTemplate",
              "src": "contracts/templates/AgreementTemplate.sol:26"
            },
            {
              "label": "agreementData",
              "offset": 0,
              "slot": "103",
              "type": "t_struct(AgreementData)26986_storage",
              "contract": "BaseEscrowTemplate",
              "src": "contracts/templates/BaseEscrowTemplate.sol:13"
            },
            {
              "label": "didRegistry",
              "offset": 0,
              "slot": "105",
              "type": "t_contract(DIDRegistry)23815",
              "contract": "NFTSalesTemplate",
              "src": "contracts/templates/NFTSalesTemplate.sol:35"
            },
            {
              "label": "lockPaymentCondition",
              "offset": 0,
              "slot": "106",
              "type": "t_contract(LockPaymentCondition)10445",
              "contract": "NFTSalesTemplate",
              "src": "contracts/templates/NFTSalesTemplate.sol:36"
            },
            {
              "label": "transferCondition",
              "offset": 0,
              "slot": "107",
              "type": "t_contract(ITransferNFT)10957",
              "contract": "NFTSalesTemplate",
              "src": "contracts/templates/NFTSalesTemplate.sol:37"
            },
            {
              "label": "rewardCondition",
              "offset": 0,
              "slot": "108",
              "type": "t_contract(EscrowPaymentCondition)16458",
              "contract": "NFTSalesTemplate",
              "src": "contracts/templates/NFTSalesTemplate.sol:38"
            },
            {
              "label": "nftPrice",
              "offset": 0,
              "slot": "109",
              "type": "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_bytes32,t_uint256))))",
              "contract": "NFTSalesTemplate",
              "src": "contracts/templates/NFTSalesTemplate.sol:107"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(AgreementStoreManager)7793": {
              "label": "contract AgreementStoreManager",
              "numberOfBytes": "20"
            },
            "t_contract(DIDRegistry)23815": {
              "label": "contract DIDRegistry",
              "numberOfBytes": "20"
            },
            "t_contract(EscrowPaymentCondition)16458": {
              "label": "contract EscrowPaymentCondition",
              "numberOfBytes": "20"
            },
            "t_contract(ITransferNFT)10957": {
              "label": "contract ITransferNFT",
              "numberOfBytes": "20"
            },
            "t_contract(LockPaymentCondition)10445": {
              "label": "contract LockPaymentCondition",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_bytes32,t_uint256))))": {
              "label": "mapping(address => mapping(address => mapping(address => mapping(bytes32 => uint256))))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_mapping(t_bytes32,t_uint256)))": {
              "label": "mapping(address => mapping(address => mapping(bytes32 => uint256)))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_bytes32,t_uint256))": {
              "label": "mapping(address => mapping(bytes32 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(AgreementDataModel)26977_storage)": {
              "label": "mapping(bytes32 => struct BaseEscrowTemplate.AgreementDataModel)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(AgreementData)26986_storage": {
              "label": "struct BaseEscrowTemplate.AgreementData",
              "members": [
                {
                  "label": "agreementDataItems",
                  "type": "t_mapping(t_bytes32,t_struct(AgreementDataModel)26977_storage)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "agreementIds",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(AgreementDataModel)26977_storage": {
              "label": "struct BaseEscrowTemplate.AgreementDataModel",
              "members": [
                {
                  "label": "accessConsumer",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "accessProvider",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "did",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "NFTSalesWithAccessTemplate": {
        "src": "contracts/templates/NFTSalesWithAccessTemplate.sol:35",
        "version": {
          "withMetadata": "af1070c60cab4847c074a850dd1ecd37274ec7a14de25f2f719df3302ebe700d",
          "withoutMetadata": "814691eb26d6a41a68550d0e368232fbc999f8a6d123d4735df46dec4cf2e51c",
          "linkedWithoutMetadata": "814691eb26d6a41a68550d0e368232fbc999f8a6d123d4735df46dec4cf2e51c"
        },
        "inherit": [
          "BaseEscrowTemplate",
          "AgreementTemplate",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address,address,address,address,address payable,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "conditionTypes",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_address)dyn_storage",
              "contract": "AgreementTemplate",
              "src": "contracts/templates/AgreementTemplate.sol:24"
            },
            {
              "label": "agreementStoreManager",
              "offset": 0,
              "slot": "102",
              "type": "t_contract(AgreementStoreManager)7793",
              "contract": "AgreementTemplate",
              "src": "contracts/templates/AgreementTemplate.sol:26"
            },
            {
              "label": "agreementData",
              "offset": 0,
              "slot": "103",
              "type": "t_struct(AgreementData)26986_storage",
              "contract": "BaseEscrowTemplate",
              "src": "contracts/templates/BaseEscrowTemplate.sol:13"
            },
            {
              "label": "didRegistry",
              "offset": 0,
              "slot": "105",
              "type": "t_contract(DIDRegistry)23815",
              "contract": "NFTSalesWithAccessTemplate",
              "src": "contracts/templates/NFTSalesWithAccessTemplate.sol:37"
            },
            {
              "label": "lockPaymentCondition",
              "offset": 0,
              "slot": "106",
              "type": "t_contract(LockPaymentCondition)10445",
              "contract": "NFTSalesWithAccessTemplate",
              "src": "contracts/templates/NFTSalesWithAccessTemplate.sol:38"
            },
            {
              "label": "transferCondition",
              "offset": 0,
              "slot": "107",
              "type": "t_contract(ITransferNFT)10957",
              "contract": "NFTSalesWithAccessTemplate",
              "src": "contracts/templates/NFTSalesWithAccessTemplate.sol:39"
            },
            {
              "label": "rewardCondition",
              "offset": 0,
              "slot": "108",
              "type": "t_contract(EscrowPaymentCondition)16458",
              "contract": "NFTSalesWithAccessTemplate",
              "src": "contracts/templates/NFTSalesWithAccessTemplate.sol:40"
            },
            {
              "label": "accessCondition",
              "offset": 0,
              "slot": "109",
              "type": "t_contract(AccessProofCondition)8350",
              "contract": "NFTSalesWithAccessTemplate",
              "src": "contracts/templates/NFTSalesWithAccessTemplate.sol:41"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(AccessProofCondition)8350": {
              "label": "contract AccessProofCondition",
              "numberOfBytes": "20"
            },
            "t_contract(AgreementStoreManager)7793": {
              "label": "contract AgreementStoreManager",
              "numberOfBytes": "20"
            },
            "t_contract(DIDRegistry)23815": {
              "label": "contract DIDRegistry",
              "numberOfBytes": "20"
            },
            "t_contract(EscrowPaymentCondition)16458": {
              "label": "contract EscrowPaymentCondition",
              "numberOfBytes": "20"
            },
            "t_contract(ITransferNFT)10957": {
              "label": "contract ITransferNFT",
              "numberOfBytes": "20"
            },
            "t_contract(LockPaymentCondition)10445": {
              "label": "contract LockPaymentCondition",
              "numberOfBytes": "20"
            },
            "t_mapping(t_bytes32,t_struct(AgreementDataModel)26977_storage)": {
              "label": "mapping(bytes32 => struct BaseEscrowTemplate.AgreementDataModel)",
              "numberOfBytes": "32"
            },
            "t_struct(AgreementData)26986_storage": {
              "label": "struct BaseEscrowTemplate.AgreementData",
              "members": [
                {
                  "label": "agreementDataItems",
                  "type": "t_mapping(t_bytes32,t_struct(AgreementDataModel)26977_storage)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "agreementIds",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(AgreementDataModel)26977_storage": {
              "label": "struct BaseEscrowTemplate.AgreementDataModel",
              "members": [
                {
                  "label": "accessConsumer",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "accessProvider",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "did",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "TemplateStoreLibrary": {
        "src": "contracts/templates/TemplateStoreLibrary.sol:18",
        "version": {
          "withMetadata": "9d94a74e38b4906a390da6806c461de89e89d4f4ffa2df64ac295fe4042a1571",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TemplateStoreManager": {
        "src": "contracts/templates/TemplateStoreManager.sol:22",
        "version": {
          "withMetadata": "d226dc0232782c15fd377f3171c934dc3ed64de1fe5e5ece0200fbf2ff7bf008",
          "withoutMetadata": "42a7a5dd690630dec510232fc8dd398c5e85ebeb815da79f42a7d39e6e190b3f",
          "linkedWithoutMetadata": "42a7a5dd690630dec510232fc8dd398c5e85ebeb815da79f42a7d39e6e190b3f"
        },
        "inherit": [
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "TemplateStoreLibrary"
        ],
        "methods": [
          "initialize(address)",
          "proposeTemplate(address)",
          "approveTemplate(address)",
          "revokeTemplate(address)",
          "getTemplate(address)",
          "getTemplateListSize()",
          "isTemplateApproved(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "templateList",
              "offset": 0,
              "slot": "101",
              "type": "t_struct(TemplateList)29139_storage",
              "contract": "TemplateStoreManager",
              "src": "contracts/templates/TemplateStoreManager.sol:26"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_enum(TemplateState)29120": {
              "label": "enum TemplateStoreLibrary.TemplateState",
              "members": [
                "Uninitialized",
                "Proposed",
                "Approved",
                "Revoked"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_struct(Template)29130_storage)": {
              "label": "mapping(address => struct TemplateStoreLibrary.Template)",
              "numberOfBytes": "32"
            },
            "t_struct(Template)29130_storage": {
              "label": "struct TemplateStoreLibrary.Template",
              "members": [
                {
                  "label": "state",
                  "type": "t_enum(TemplateState)29120",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "owner",
                  "type": "t_address",
                  "offset": 1,
                  "slot": "0"
                },
                {
                  "label": "lastUpdatedBy",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "blockNumberUpdated",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(TemplateList)29139_storage": {
              "label": "struct TemplateStoreLibrary.TemplateList",
              "members": [
                {
                  "label": "templates",
                  "type": "t_mapping(t_address,t_struct(Template)29130_storage)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "templateIds",
                  "type": "t_array(t_address)dyn_storage",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "AgreementStoreManagerChangeFunctionSignature": {
        "src": "contracts/test/AgreementStoreManager/AgreementStoreManagerChangeFunctionSignature.sol:10",
        "version": {
          "withMetadata": "649aa5a22afbda647941faacbf9aabbba19044b2130807e12b25af2a4de19829",
          "withoutMetadata": "4d13617e2c7eb8a41ae72453c256f5d24fd1005b1494f20f36467b2b7c838fa5",
          "linkedWithoutMetadata": "4d13617e2c7eb8a41ae72453c256f5d24fd1005b1494f20f36467b2b7c838fa5"
        },
        "inherit": [
          "AgreementStoreManager",
          "AccessControlUpgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "IAccessControlUpgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "AgreementStoreLibrary"
        ],
        "methods": [
          "createAgreement(bytes32,bytes32,address[],bytes32[],uint256[],uint256[],address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            },
            {
              "label": "_roles",
              "offset": 0,
              "slot": "151",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
              "contract": "AccessControlUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "152",
              "type": "t_array(t_uint256)49_storage",
              "contract": "AccessControlUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:247"
            },
            {
              "label": "agreementList",
              "offset": 0,
              "slot": "201",
              "type": "t_struct(AgreementList)7206_storage",
              "contract": "AgreementStoreManager",
              "src": "contracts/agreements/AgreementStoreManager.sol:51"
            },
            {
              "label": "conditionStoreManager",
              "offset": 0,
              "slot": "205",
              "type": "t_contract(ConditionStoreManager)9399",
              "contract": "AgreementStoreManager",
              "src": "contracts/agreements/AgreementStoreManager.sol:53"
            },
            {
              "label": "templateStoreManager",
              "offset": 0,
              "slot": "206",
              "type": "t_contract(TemplateStoreManager)29485",
              "contract": "AgreementStoreManager",
              "src": "contracts/agreements/AgreementStoreManager.sol:54"
            },
            {
              "label": "didRegistry",
              "offset": 0,
              "slot": "207",
              "type": "t_contract(DIDRegistry)23815",
              "contract": "AgreementStoreManager",
              "src": "contracts/agreements/AgreementStoreManager.sol:55"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(ConditionStoreManager)9399": {
              "label": "contract ConditionStoreManager",
              "numberOfBytes": "20"
            },
            "t_contract(DIDRegistry)23815": {
              "label": "contract DIDRegistry",
              "numberOfBytes": "20"
            },
            "t_contract(TemplateStoreManager)29485": {
              "label": "contract TemplateStoreManager",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_array(t_bytes32)dyn_storage)": {
              "label": "mapping(address => bytes32[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_array(t_bytes32)dyn_storage)": {
              "label": "mapping(bytes32 => bytes32[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(Agreement)7187_storage)": {
              "label": "mapping(bytes32 => struct AgreementStoreLibrary.Agreement)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
              "numberOfBytes": "32"
            },
            "t_struct(Agreement)7187_storage": {
              "label": "struct AgreementStoreLibrary.Agreement",
              "members": [
                {
                  "label": "did",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "templateId",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "conditionIds",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "lastUpdatedBy",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "blockNumberUpdated",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(AgreementList)7206_storage": {
              "label": "struct AgreementStoreLibrary.AgreementList",
              "members": [
                {
                  "label": "agreements",
                  "type": "t_mapping(t_bytes32,t_struct(Agreement)7187_storage)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "didToAgreementIds",
                  "type": "t_mapping(t_bytes32,t_array(t_bytes32)dyn_storage)",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "templateIdToAgreementIds",
                  "type": "t_mapping(t_address,t_array(t_bytes32)dyn_storage)",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "agreementIds",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(RoleData)34_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "AgreementStoreManagerChangeInStorage": {
        "src": "contracts/test/AgreementStoreManager/AgreementStoreManagerChangeInStorage.sol:11",
        "version": {
          "withMetadata": "a7efb914e0c41158b46dcc972939cae1b4c82622e3c968a106fdd76c014aa89c",
          "withoutMetadata": "24a0b956121c5b38c6d0ca319169174fe3ce9bd6e9b508f60d36a63184b2533d",
          "linkedWithoutMetadata": "24a0b956121c5b38c6d0ca319169174fe3ce9bd6e9b508f60d36a63184b2533d"
        },
        "inherit": [
          "AgreementStoreManager",
          "AccessControlUpgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "IAccessControlUpgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            },
            {
              "label": "_roles",
              "offset": 0,
              "slot": "151",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
              "contract": "AccessControlUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "152",
              "type": "t_array(t_uint256)49_storage",
              "contract": "AccessControlUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:247"
            },
            {
              "label": "agreementList",
              "offset": 0,
              "slot": "201",
              "type": "t_struct(AgreementList)7206_storage",
              "contract": "AgreementStoreManager",
              "src": "contracts/agreements/AgreementStoreManager.sol:51"
            },
            {
              "label": "conditionStoreManager",
              "offset": 0,
              "slot": "205",
              "type": "t_contract(ConditionStoreManager)9399",
              "contract": "AgreementStoreManager",
              "src": "contracts/agreements/AgreementStoreManager.sol:53"
            },
            {
              "label": "templateStoreManager",
              "offset": 0,
              "slot": "206",
              "type": "t_contract(TemplateStoreManager)29485",
              "contract": "AgreementStoreManager",
              "src": "contracts/agreements/AgreementStoreManager.sol:54"
            },
            {
              "label": "didRegistry",
              "offset": 0,
              "slot": "207",
              "type": "t_contract(DIDRegistry)23815",
              "contract": "AgreementStoreManager",
              "src": "contracts/agreements/AgreementStoreManager.sol:55"
            },
            {
              "label": "agreementCount",
              "offset": 0,
              "slot": "208",
              "type": "t_uint256",
              "contract": "AgreementStoreManagerChangeInStorage",
              "src": "contracts/test/AgreementStoreManager/AgreementStoreManagerChangeInStorage.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(ConditionStoreManager)9399": {
              "label": "contract ConditionStoreManager",
              "numberOfBytes": "20"
            },
            "t_contract(DIDRegistry)23815": {
              "label": "contract DIDRegistry",
              "numberOfBytes": "20"
            },
            "t_contract(TemplateStoreManager)29485": {
              "label": "contract TemplateStoreManager",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_array(t_bytes32)dyn_storage)": {
              "label": "mapping(address => bytes32[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_array(t_bytes32)dyn_storage)": {
              "label": "mapping(bytes32 => bytes32[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(Agreement)7187_storage)": {
              "label": "mapping(bytes32 => struct AgreementStoreLibrary.Agreement)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
              "numberOfBytes": "32"
            },
            "t_struct(Agreement)7187_storage": {
              "label": "struct AgreementStoreLibrary.Agreement",
              "members": [
                {
                  "label": "did",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "templateId",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "conditionIds",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "lastUpdatedBy",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "blockNumberUpdated",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(AgreementList)7206_storage": {
              "label": "struct AgreementStoreLibrary.AgreementList",
              "members": [
                {
                  "label": "agreements",
                  "type": "t_mapping(t_bytes32,t_struct(Agreement)7187_storage)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "didToAgreementIds",
                  "type": "t_mapping(t_bytes32,t_array(t_bytes32)dyn_storage)",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "templateIdToAgreementIds",
                  "type": "t_mapping(t_address,t_array(t_bytes32)dyn_storage)",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "agreementIds",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(RoleData)34_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "AgreementStoreManagerChangeInStorageAndLogic": {
        "src": "contracts/test/AgreementStoreManager/AgreementStoreManagerChangeInStorageAndLogic.sol:12",
        "version": {
          "withMetadata": "d18a368337931db9664eea6fa222df98f434e2f8b574a50267e406a34f698c35",
          "withoutMetadata": "a2e8061420f98e6d2b70e52c6409d619fe5326f468091ba8ccdf0882f6325bb1",
          "linkedWithoutMetadata": "a2e8061420f98e6d2b70e52c6409d619fe5326f468091ba8ccdf0882f6325bb1"
        },
        "inherit": [
          "AgreementStoreManagerChangeInStorage",
          "AgreementStoreManagerChangeFunctionSignature",
          "AgreementStoreManager",
          "AccessControlUpgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "IAccessControlUpgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            },
            {
              "label": "_roles",
              "offset": 0,
              "slot": "151",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
              "contract": "AccessControlUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "152",
              "type": "t_array(t_uint256)49_storage",
              "contract": "AccessControlUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:247"
            },
            {
              "label": "agreementList",
              "offset": 0,
              "slot": "201",
              "type": "t_struct(AgreementList)7206_storage",
              "contract": "AgreementStoreManager",
              "src": "contracts/agreements/AgreementStoreManager.sol:51"
            },
            {
              "label": "conditionStoreManager",
              "offset": 0,
              "slot": "205",
              "type": "t_contract(ConditionStoreManager)9399",
              "contract": "AgreementStoreManager",
              "src": "contracts/agreements/AgreementStoreManager.sol:53"
            },
            {
              "label": "templateStoreManager",
              "offset": 0,
              "slot": "206",
              "type": "t_contract(TemplateStoreManager)29485",
              "contract": "AgreementStoreManager",
              "src": "contracts/agreements/AgreementStoreManager.sol:54"
            },
            {
              "label": "didRegistry",
              "offset": 0,
              "slot": "207",
              "type": "t_contract(DIDRegistry)23815",
              "contract": "AgreementStoreManager",
              "src": "contracts/agreements/AgreementStoreManager.sol:55"
            },
            {
              "label": "agreementCount",
              "offset": 0,
              "slot": "208",
              "type": "t_uint256",
              "contract": "AgreementStoreManagerChangeInStorage",
              "src": "contracts/test/AgreementStoreManager/AgreementStoreManagerChangeInStorage.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(ConditionStoreManager)9399": {
              "label": "contract ConditionStoreManager",
              "numberOfBytes": "20"
            },
            "t_contract(DIDRegistry)23815": {
              "label": "contract DIDRegistry",
              "numberOfBytes": "20"
            },
            "t_contract(TemplateStoreManager)29485": {
              "label": "contract TemplateStoreManager",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_array(t_bytes32)dyn_storage)": {
              "label": "mapping(address => bytes32[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_array(t_bytes32)dyn_storage)": {
              "label": "mapping(bytes32 => bytes32[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(Agreement)7187_storage)": {
              "label": "mapping(bytes32 => struct AgreementStoreLibrary.Agreement)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
              "numberOfBytes": "32"
            },
            "t_struct(Agreement)7187_storage": {
              "label": "struct AgreementStoreLibrary.Agreement",
              "members": [
                {
                  "label": "did",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "templateId",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "conditionIds",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "lastUpdatedBy",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "blockNumberUpdated",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(AgreementList)7206_storage": {
              "label": "struct AgreementStoreLibrary.AgreementList",
              "members": [
                {
                  "label": "agreements",
                  "type": "t_mapping(t_bytes32,t_struct(Agreement)7187_storage)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "didToAgreementIds",
                  "type": "t_mapping(t_bytes32,t_array(t_bytes32)dyn_storage)",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "templateIdToAgreementIds",
                  "type": "t_mapping(t_address,t_array(t_bytes32)dyn_storage)",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "agreementIds",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(RoleData)34_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "AgreementStoreManagerExtraFunctionality": {
        "src": "contracts/test/AgreementStoreManager/AgreementStoreManagerExtraFunctionality.sol:11",
        "version": {
          "withMetadata": "319b20406e725d000c10a27d727c3274b16b1d25806ea59fbffc223f02781698",
          "withoutMetadata": "ee11c94248a08ed3b3bb06312ea675c6e0959d3af1c0d812ab61cb474ee9be08",
          "linkedWithoutMetadata": "ee11c94248a08ed3b3bb06312ea675c6e0959d3af1c0d812ab61cb474ee9be08"
        },
        "inherit": [
          "AgreementStoreManager",
          "AccessControlUpgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "IAccessControlUpgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "dummyFunction()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            },
            {
              "label": "_roles",
              "offset": 0,
              "slot": "151",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
              "contract": "AccessControlUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "152",
              "type": "t_array(t_uint256)49_storage",
              "contract": "AccessControlUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:247"
            },
            {
              "label": "agreementList",
              "offset": 0,
              "slot": "201",
              "type": "t_struct(AgreementList)7206_storage",
              "contract": "AgreementStoreManager",
              "src": "contracts/agreements/AgreementStoreManager.sol:51"
            },
            {
              "label": "conditionStoreManager",
              "offset": 0,
              "slot": "205",
              "type": "t_contract(ConditionStoreManager)9399",
              "contract": "AgreementStoreManager",
              "src": "contracts/agreements/AgreementStoreManager.sol:53"
            },
            {
              "label": "templateStoreManager",
              "offset": 0,
              "slot": "206",
              "type": "t_contract(TemplateStoreManager)29485",
              "contract": "AgreementStoreManager",
              "src": "contracts/agreements/AgreementStoreManager.sol:54"
            },
            {
              "label": "didRegistry",
              "offset": 0,
              "slot": "207",
              "type": "t_contract(DIDRegistry)23815",
              "contract": "AgreementStoreManager",
              "src": "contracts/agreements/AgreementStoreManager.sol:55"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(ConditionStoreManager)9399": {
              "label": "contract ConditionStoreManager",
              "numberOfBytes": "20"
            },
            "t_contract(DIDRegistry)23815": {
              "label": "contract DIDRegistry",
              "numberOfBytes": "20"
            },
            "t_contract(TemplateStoreManager)29485": {
              "label": "contract TemplateStoreManager",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_array(t_bytes32)dyn_storage)": {
              "label": "mapping(address => bytes32[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_array(t_bytes32)dyn_storage)": {
              "label": "mapping(bytes32 => bytes32[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(Agreement)7187_storage)": {
              "label": "mapping(bytes32 => struct AgreementStoreLibrary.Agreement)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
              "numberOfBytes": "32"
            },
            "t_struct(Agreement)7187_storage": {
              "label": "struct AgreementStoreLibrary.Agreement",
              "members": [
                {
                  "label": "did",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "templateId",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "conditionIds",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "lastUpdatedBy",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "blockNumberUpdated",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(AgreementList)7206_storage": {
              "label": "struct AgreementStoreLibrary.AgreementList",
              "members": [
                {
                  "label": "agreements",
                  "type": "t_mapping(t_bytes32,t_struct(Agreement)7187_storage)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "didToAgreementIds",
                  "type": "t_mapping(t_bytes32,t_array(t_bytes32)dyn_storage)",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "templateIdToAgreementIds",
                  "type": "t_mapping(t_address,t_array(t_bytes32)dyn_storage)",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "agreementIds",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(RoleData)34_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "AgreementStoreManagerWithBug": {
        "src": "contracts/test/AgreementStoreManager/AgreementStoreManagerWithBug.sol:10",
        "version": {
          "withMetadata": "d4cc55a6fea4b512b0c29e43f763f3ffeedff28a404e370bea3f7140f2b61c4c",
          "withoutMetadata": "a8367741b284b102ab3a0458491496b45003ca377da27f52676d734ef0c5bf6c",
          "linkedWithoutMetadata": "a8367741b284b102ab3a0458491496b45003ca377da27f52676d734ef0c5bf6c"
        },
        "inherit": [
          "AgreementStoreManager",
          "AccessControlUpgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "IAccessControlUpgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "getDIDRegistryAddress()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            },
            {
              "label": "_roles",
              "offset": 0,
              "slot": "151",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
              "contract": "AccessControlUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "152",
              "type": "t_array(t_uint256)49_storage",
              "contract": "AccessControlUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:247"
            },
            {
              "label": "agreementList",
              "offset": 0,
              "slot": "201",
              "type": "t_struct(AgreementList)7206_storage",
              "contract": "AgreementStoreManager",
              "src": "contracts/agreements/AgreementStoreManager.sol:51"
            },
            {
              "label": "conditionStoreManager",
              "offset": 0,
              "slot": "205",
              "type": "t_contract(ConditionStoreManager)9399",
              "contract": "AgreementStoreManager",
              "src": "contracts/agreements/AgreementStoreManager.sol:53"
            },
            {
              "label": "templateStoreManager",
              "offset": 0,
              "slot": "206",
              "type": "t_contract(TemplateStoreManager)29485",
              "contract": "AgreementStoreManager",
              "src": "contracts/agreements/AgreementStoreManager.sol:54"
            },
            {
              "label": "didRegistry",
              "offset": 0,
              "slot": "207",
              "type": "t_contract(DIDRegistry)23815",
              "contract": "AgreementStoreManager",
              "src": "contracts/agreements/AgreementStoreManager.sol:55"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(ConditionStoreManager)9399": {
              "label": "contract ConditionStoreManager",
              "numberOfBytes": "20"
            },
            "t_contract(DIDRegistry)23815": {
              "label": "contract DIDRegistry",
              "numberOfBytes": "20"
            },
            "t_contract(TemplateStoreManager)29485": {
              "label": "contract TemplateStoreManager",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_array(t_bytes32)dyn_storage)": {
              "label": "mapping(address => bytes32[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_array(t_bytes32)dyn_storage)": {
              "label": "mapping(bytes32 => bytes32[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(Agreement)7187_storage)": {
              "label": "mapping(bytes32 => struct AgreementStoreLibrary.Agreement)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
              "numberOfBytes": "32"
            },
            "t_struct(Agreement)7187_storage": {
              "label": "struct AgreementStoreLibrary.Agreement",
              "members": [
                {
                  "label": "did",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "templateId",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "conditionIds",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "lastUpdatedBy",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "blockNumberUpdated",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(AgreementList)7206_storage": {
              "label": "struct AgreementStoreLibrary.AgreementList",
              "members": [
                {
                  "label": "agreements",
                  "type": "t_mapping(t_bytes32,t_struct(Agreement)7187_storage)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "didToAgreementIds",
                  "type": "t_mapping(t_bytes32,t_array(t_bytes32)dyn_storage)",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "templateIdToAgreementIds",
                  "type": "t_mapping(t_address,t_array(t_bytes32)dyn_storage)",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "agreementIds",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(RoleData)34_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ConditionStoreChangeFunctionSignature": {
        "src": "contracts/test/ConditionStoreManager/ConditionStoreChangeFunctionSignature.sol:9",
        "version": {
          "withMetadata": "f770ac7119790a9121edbe3126fa3829fcf034b77d2592d454d457a265b1f802",
          "withoutMetadata": "fe4a44418b9001dc0a1350b93524d94632aa276a2c90c1a0cf82dbe1903c5321",
          "linkedWithoutMetadata": "fe4a44418b9001dc0a1350b93524d94632aa276a2c90c1a0cf82dbe1903c5321"
        },
        "inherit": [
          "ConditionStoreManager",
          "Common",
          "AccessControlUpgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "IAccessControlUpgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "createCondition(bytes32,address,address)"
        ],
        "linkReferences": [
          {
            "src": "contracts/libraries/EpochLibrary.sol",
            "name": "EpochLibrary",
            "length": 20,
            "start": 2260,
            "placeholder": "__$b78708992bd2b6ad851535b2e1a51ed3e2$__"
          },
          {
            "src": "contracts/libraries/EpochLibrary.sol",
            "name": "EpochLibrary",
            "length": 20,
            "start": 2488,
            "placeholder": "__$b78708992bd2b6ad851535b2e1a51ed3e2$__"
          }
        ],
        "errors": [
          {
            "kind": "external-library-linking",
            "name": "EpochLibrary",
            "src": "contracts/libraries/EpochLibrary.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            },
            {
              "label": "_roles",
              "offset": 0,
              "slot": "151",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
              "contract": "AccessControlUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "152",
              "type": "t_array(t_uint256)49_storage",
              "contract": "AccessControlUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:247"
            },
            {
              "label": "createRole",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "ConditionStoreManager",
              "src": "contracts/conditions/ConditionStoreManager.sol:38"
            },
            {
              "label": "conditionList",
              "offset": 0,
              "slot": "202",
              "type": "t_struct(ConditionList)8657_storage",
              "contract": "ConditionStoreManager",
              "src": "contracts/conditions/ConditionStoreManager.sol:39"
            },
            {
              "label": "epochList",
              "offset": 0,
              "slot": "205",
              "type": "t_struct(EpochList)19258_storage",
              "contract": "ConditionStoreManager",
              "src": "contracts/conditions/ConditionStoreManager.sol:40"
            },
            {
              "label": "nvmConfigAddress",
              "offset": 0,
              "slot": "207",
              "type": "t_address",
              "contract": "ConditionStoreManager",
              "src": "contracts/conditions/ConditionStoreManager.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_enum(ConditionState)8630": {
              "label": "enum ConditionStoreLibrary.ConditionState",
              "members": [
                "Uninitialized",
                "Unfulfilled",
                "Fulfilled",
                "Aborted"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_bytes32)": {
              "label": "mapping(bytes32 => bytes32)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_mapping(t_bytes32,t_bytes32))": {
              "label": "mapping(bytes32 => mapping(bytes32 => bytes32))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(Condition)8642_storage)": {
              "label": "mapping(bytes32 => struct ConditionStoreLibrary.Condition)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(Epoch)19249_storage)": {
              "label": "mapping(bytes32 => struct EpochLibrary.Epoch)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
              "numberOfBytes": "32"
            },
            "t_struct(Condition)8642_storage": {
              "label": "struct ConditionStoreLibrary.Condition",
              "members": [
                {
                  "label": "typeRef",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "state",
                  "type": "t_enum(ConditionState)8630",
                  "offset": 20,
                  "slot": "0"
                },
                {
                  "label": "createdBy",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastUpdatedBy",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "blockNumberUpdated",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(ConditionList)8657_storage": {
              "label": "struct ConditionStoreLibrary.ConditionList",
              "members": [
                {
                  "label": "conditions",
                  "type": "t_mapping(t_bytes32,t_struct(Condition)8642_storage)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "map",
                  "type": "t_mapping(t_bytes32,t_mapping(t_bytes32,t_bytes32))",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "conditionIds",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(Epoch)19249_storage": {
              "label": "struct EpochLibrary.Epoch",
              "members": [
                {
                  "label": "timeLock",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "timeOut",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "blockNumber",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(EpochList)19258_storage": {
              "label": "struct EpochLibrary.EpochList",
              "members": [
                {
                  "label": "epochs",
                  "type": "t_mapping(t_bytes32,t_struct(Epoch)19249_storage)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "epochIds",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(RoleData)34_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ConditionStoreChangeInStorage": {
        "src": "contracts/test/ConditionStoreManager/ConditionStoreChangeInStorage.sol:10",
        "version": {
          "withMetadata": "9c749af0238defdbf9ce49d538d93df462da372ae9d0fc0b2b1722c7a3fd8302",
          "withoutMetadata": "01b91a02032db7a30045cf98f8f2a1051768e0693bc7b124e3a0af7a2e109c44",
          "linkedWithoutMetadata": "01b91a02032db7a30045cf98f8f2a1051768e0693bc7b124e3a0af7a2e109c44"
        },
        "inherit": [
          "ConditionStoreManager",
          "Common",
          "AccessControlUpgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "IAccessControlUpgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [
          {
            "src": "contracts/libraries/EpochLibrary.sol",
            "name": "EpochLibrary",
            "length": 20,
            "start": 2250,
            "placeholder": "__$b78708992bd2b6ad851535b2e1a51ed3e2$__"
          },
          {
            "src": "contracts/libraries/EpochLibrary.sol",
            "name": "EpochLibrary",
            "length": 20,
            "start": 2478,
            "placeholder": "__$b78708992bd2b6ad851535b2e1a51ed3e2$__"
          }
        ],
        "errors": [
          {
            "kind": "external-library-linking",
            "name": "EpochLibrary",
            "src": "contracts/libraries/EpochLibrary.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            },
            {
              "label": "_roles",
              "offset": 0,
              "slot": "151",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
              "contract": "AccessControlUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "152",
              "type": "t_array(t_uint256)49_storage",
              "contract": "AccessControlUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:247"
            },
            {
              "label": "createRole",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "ConditionStoreManager",
              "src": "contracts/conditions/ConditionStoreManager.sol:38"
            },
            {
              "label": "conditionList",
              "offset": 0,
              "slot": "202",
              "type": "t_struct(ConditionList)8657_storage",
              "contract": "ConditionStoreManager",
              "src": "contracts/conditions/ConditionStoreManager.sol:39"
            },
            {
              "label": "epochList",
              "offset": 0,
              "slot": "205",
              "type": "t_struct(EpochList)19258_storage",
              "contract": "ConditionStoreManager",
              "src": "contracts/conditions/ConditionStoreManager.sol:40"
            },
            {
              "label": "nvmConfigAddress",
              "offset": 0,
              "slot": "207",
              "type": "t_address",
              "contract": "ConditionStoreManager",
              "src": "contracts/conditions/ConditionStoreManager.sol:42"
            },
            {
              "label": "conditionCount",
              "offset": 0,
              "slot": "208",
              "type": "t_uint256",
              "contract": "ConditionStoreChangeInStorage",
              "src": "contracts/test/ConditionStoreManager/ConditionStoreChangeInStorage.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_enum(ConditionState)8630": {
              "label": "enum ConditionStoreLibrary.ConditionState",
              "members": [
                "Uninitialized",
                "Unfulfilled",
                "Fulfilled",
                "Aborted"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_bytes32)": {
              "label": "mapping(bytes32 => bytes32)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_mapping(t_bytes32,t_bytes32))": {
              "label": "mapping(bytes32 => mapping(bytes32 => bytes32))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(Condition)8642_storage)": {
              "label": "mapping(bytes32 => struct ConditionStoreLibrary.Condition)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(Epoch)19249_storage)": {
              "label": "mapping(bytes32 => struct EpochLibrary.Epoch)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
              "numberOfBytes": "32"
            },
            "t_struct(Condition)8642_storage": {
              "label": "struct ConditionStoreLibrary.Condition",
              "members": [
                {
                  "label": "typeRef",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "state",
                  "type": "t_enum(ConditionState)8630",
                  "offset": 20,
                  "slot": "0"
                },
                {
                  "label": "createdBy",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastUpdatedBy",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "blockNumberUpdated",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(ConditionList)8657_storage": {
              "label": "struct ConditionStoreLibrary.ConditionList",
              "members": [
                {
                  "label": "conditions",
                  "type": "t_mapping(t_bytes32,t_struct(Condition)8642_storage)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "map",
                  "type": "t_mapping(t_bytes32,t_mapping(t_bytes32,t_bytes32))",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "conditionIds",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(Epoch)19249_storage": {
              "label": "struct EpochLibrary.Epoch",
              "members": [
                {
                  "label": "timeLock",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "timeOut",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "blockNumber",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(EpochList)19258_storage": {
              "label": "struct EpochLibrary.EpochList",
              "members": [
                {
                  "label": "epochs",
                  "type": "t_mapping(t_bytes32,t_struct(Epoch)19249_storage)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "epochIds",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(RoleData)34_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ConditionStoreChangeInStorageAndLogic": {
        "src": "contracts/test/ConditionStoreManager/ConditionStoreChangeInStorageAndLogic.sol:12",
        "version": {
          "withMetadata": "0b3bb15486808e3be03375846b322b7f0695c6baf1d050ef293c4278e148d38d",
          "withoutMetadata": "93a468731e912d32d475091328becc71b3c63a84589cf747329640ce6b38055d",
          "linkedWithoutMetadata": "93a468731e912d32d475091328becc71b3c63a84589cf747329640ce6b38055d"
        },
        "inherit": [
          "ConditionStoreChangeInStorage",
          "ConditionStoreChangeFunctionSignature",
          "ConditionStoreManager",
          "Common",
          "AccessControlUpgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "IAccessControlUpgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [
          {
            "src": "contracts/libraries/EpochLibrary.sol",
            "name": "EpochLibrary",
            "length": 20,
            "start": 2280,
            "placeholder": "__$b78708992bd2b6ad851535b2e1a51ed3e2$__"
          },
          {
            "src": "contracts/libraries/EpochLibrary.sol",
            "name": "EpochLibrary",
            "length": 20,
            "start": 2508,
            "placeholder": "__$b78708992bd2b6ad851535b2e1a51ed3e2$__"
          }
        ],
        "errors": [
          {
            "kind": "external-library-linking",
            "name": "EpochLibrary",
            "src": "contracts/libraries/EpochLibrary.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            },
            {
              "label": "_roles",
              "offset": 0,
              "slot": "151",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
              "contract": "AccessControlUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "152",
              "type": "t_array(t_uint256)49_storage",
              "contract": "AccessControlUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:247"
            },
            {
              "label": "createRole",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "ConditionStoreManager",
              "src": "contracts/conditions/ConditionStoreManager.sol:38"
            },
            {
              "label": "conditionList",
              "offset": 0,
              "slot": "202",
              "type": "t_struct(ConditionList)8657_storage",
              "contract": "ConditionStoreManager",
              "src": "contracts/conditions/ConditionStoreManager.sol:39"
            },
            {
              "label": "epochList",
              "offset": 0,
              "slot": "205",
              "type": "t_struct(EpochList)19258_storage",
              "contract": "ConditionStoreManager",
              "src": "contracts/conditions/ConditionStoreManager.sol:40"
            },
            {
              "label": "nvmConfigAddress",
              "offset": 0,
              "slot": "207",
              "type": "t_address",
              "contract": "ConditionStoreManager",
              "src": "contracts/conditions/ConditionStoreManager.sol:42"
            },
            {
              "label": "conditionCount",
              "offset": 0,
              "slot": "208",
              "type": "t_uint256",
              "contract": "ConditionStoreChangeInStorage",
              "src": "contracts/test/ConditionStoreManager/ConditionStoreChangeInStorage.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_enum(ConditionState)8630": {
              "label": "enum ConditionStoreLibrary.ConditionState",
              "members": [
                "Uninitialized",
                "Unfulfilled",
                "Fulfilled",
                "Aborted"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_bytes32)": {
              "label": "mapping(bytes32 => bytes32)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_mapping(t_bytes32,t_bytes32))": {
              "label": "mapping(bytes32 => mapping(bytes32 => bytes32))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(Condition)8642_storage)": {
              "label": "mapping(bytes32 => struct ConditionStoreLibrary.Condition)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(Epoch)19249_storage)": {
              "label": "mapping(bytes32 => struct EpochLibrary.Epoch)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
              "numberOfBytes": "32"
            },
            "t_struct(Condition)8642_storage": {
              "label": "struct ConditionStoreLibrary.Condition",
              "members": [
                {
                  "label": "typeRef",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "state",
                  "type": "t_enum(ConditionState)8630",
                  "offset": 20,
                  "slot": "0"
                },
                {
                  "label": "createdBy",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastUpdatedBy",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "blockNumberUpdated",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(ConditionList)8657_storage": {
              "label": "struct ConditionStoreLibrary.ConditionList",
              "members": [
                {
                  "label": "conditions",
                  "type": "t_mapping(t_bytes32,t_struct(Condition)8642_storage)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "map",
                  "type": "t_mapping(t_bytes32,t_mapping(t_bytes32,t_bytes32))",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "conditionIds",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(Epoch)19249_storage": {
              "label": "struct EpochLibrary.Epoch",
              "members": [
                {
                  "label": "timeLock",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "timeOut",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "blockNumber",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(EpochList)19258_storage": {
              "label": "struct EpochLibrary.EpochList",
              "members": [
                {
                  "label": "epochs",
                  "type": "t_mapping(t_bytes32,t_struct(Epoch)19249_storage)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "epochIds",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(RoleData)34_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ConditionStoreExtraFunctionality": {
        "src": "contracts/test/ConditionStoreManager/ConditionStoreExtraFunctionality.sol:11",
        "version": {
          "withMetadata": "8e402932f8dcd023815406f2972df33867f083dc4544ee185faf9b9adac29217",
          "withoutMetadata": "490e4df7ced49e49d9bc04db5c2eac89e1ec1c0c71f4b5741b43adcb0acfa198",
          "linkedWithoutMetadata": "490e4df7ced49e49d9bc04db5c2eac89e1ec1c0c71f4b5741b43adcb0acfa198"
        },
        "inherit": [
          "ConditionStoreManager",
          "Common",
          "AccessControlUpgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "IAccessControlUpgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "dummyFunction()"
        ],
        "linkReferences": [
          {
            "src": "contracts/libraries/EpochLibrary.sol",
            "name": "EpochLibrary",
            "length": 20,
            "start": 2248,
            "placeholder": "__$b78708992bd2b6ad851535b2e1a51ed3e2$__"
          },
          {
            "src": "contracts/libraries/EpochLibrary.sol",
            "name": "EpochLibrary",
            "length": 20,
            "start": 2476,
            "placeholder": "__$b78708992bd2b6ad851535b2e1a51ed3e2$__"
          }
        ],
        "errors": [
          {
            "kind": "external-library-linking",
            "name": "EpochLibrary",
            "src": "contracts/libraries/EpochLibrary.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            },
            {
              "label": "_roles",
              "offset": 0,
              "slot": "151",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
              "contract": "AccessControlUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "152",
              "type": "t_array(t_uint256)49_storage",
              "contract": "AccessControlUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:247"
            },
            {
              "label": "createRole",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "ConditionStoreManager",
              "src": "contracts/conditions/ConditionStoreManager.sol:38"
            },
            {
              "label": "conditionList",
              "offset": 0,
              "slot": "202",
              "type": "t_struct(ConditionList)8657_storage",
              "contract": "ConditionStoreManager",
              "src": "contracts/conditions/ConditionStoreManager.sol:39"
            },
            {
              "label": "epochList",
              "offset": 0,
              "slot": "205",
              "type": "t_struct(EpochList)19258_storage",
              "contract": "ConditionStoreManager",
              "src": "contracts/conditions/ConditionStoreManager.sol:40"
            },
            {
              "label": "nvmConfigAddress",
              "offset": 0,
              "slot": "207",
              "type": "t_address",
              "contract": "ConditionStoreManager",
              "src": "contracts/conditions/ConditionStoreManager.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_enum(ConditionState)8630": {
              "label": "enum ConditionStoreLibrary.ConditionState",
              "members": [
                "Uninitialized",
                "Unfulfilled",
                "Fulfilled",
                "Aborted"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_bytes32)": {
              "label": "mapping(bytes32 => bytes32)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_mapping(t_bytes32,t_bytes32))": {
              "label": "mapping(bytes32 => mapping(bytes32 => bytes32))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(Condition)8642_storage)": {
              "label": "mapping(bytes32 => struct ConditionStoreLibrary.Condition)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(Epoch)19249_storage)": {
              "label": "mapping(bytes32 => struct EpochLibrary.Epoch)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
              "numberOfBytes": "32"
            },
            "t_struct(Condition)8642_storage": {
              "label": "struct ConditionStoreLibrary.Condition",
              "members": [
                {
                  "label": "typeRef",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "state",
                  "type": "t_enum(ConditionState)8630",
                  "offset": 20,
                  "slot": "0"
                },
                {
                  "label": "createdBy",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastUpdatedBy",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "blockNumberUpdated",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(ConditionList)8657_storage": {
              "label": "struct ConditionStoreLibrary.ConditionList",
              "members": [
                {
                  "label": "conditions",
                  "type": "t_mapping(t_bytes32,t_struct(Condition)8642_storage)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "map",
                  "type": "t_mapping(t_bytes32,t_mapping(t_bytes32,t_bytes32))",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "conditionIds",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(Epoch)19249_storage": {
              "label": "struct EpochLibrary.Epoch",
              "members": [
                {
                  "label": "timeLock",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "timeOut",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "blockNumber",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(EpochList)19258_storage": {
              "label": "struct EpochLibrary.EpochList",
              "members": [
                {
                  "label": "epochs",
                  "type": "t_mapping(t_bytes32,t_struct(Epoch)19249_storage)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "epochIds",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(RoleData)34_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ConditionStoreWithBug": {
        "src": "contracts/test/ConditionStoreManager/ConditionStoreWithBug.sol:9",
        "version": {
          "withMetadata": "4e27a9324639867c716755238764d1fb65bdb70de8ca05e2a20bf917c8be1783",
          "withoutMetadata": "55756061d99a78746e130c0d0ea45a9d95b070683507194ec758c002f018daea",
          "linkedWithoutMetadata": "55756061d99a78746e130c0d0ea45a9d95b070683507194ec758c002f018daea"
        },
        "inherit": [
          "ConditionStoreManager",
          "Common",
          "AccessControlUpgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "IAccessControlUpgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "ConditionStoreLibrary"
        ],
        "methods": [
          "getConditionState(bytes32)"
        ],
        "linkReferences": [
          {
            "src": "contracts/libraries/EpochLibrary.sol",
            "name": "EpochLibrary",
            "length": 20,
            "start": 2274,
            "placeholder": "__$b78708992bd2b6ad851535b2e1a51ed3e2$__"
          },
          {
            "src": "contracts/libraries/EpochLibrary.sol",
            "name": "EpochLibrary",
            "length": 20,
            "start": 2502,
            "placeholder": "__$b78708992bd2b6ad851535b2e1a51ed3e2$__"
          }
        ],
        "errors": [
          {
            "kind": "external-library-linking",
            "name": "EpochLibrary",
            "src": "contracts/libraries/EpochLibrary.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            },
            {
              "label": "_roles",
              "offset": 0,
              "slot": "151",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
              "contract": "AccessControlUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "152",
              "type": "t_array(t_uint256)49_storage",
              "contract": "AccessControlUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:247"
            },
            {
              "label": "createRole",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "ConditionStoreManager",
              "src": "contracts/conditions/ConditionStoreManager.sol:38"
            },
            {
              "label": "conditionList",
              "offset": 0,
              "slot": "202",
              "type": "t_struct(ConditionList)8657_storage",
              "contract": "ConditionStoreManager",
              "src": "contracts/conditions/ConditionStoreManager.sol:39"
            },
            {
              "label": "epochList",
              "offset": 0,
              "slot": "205",
              "type": "t_struct(EpochList)19258_storage",
              "contract": "ConditionStoreManager",
              "src": "contracts/conditions/ConditionStoreManager.sol:40"
            },
            {
              "label": "nvmConfigAddress",
              "offset": 0,
              "slot": "207",
              "type": "t_address",
              "contract": "ConditionStoreManager",
              "src": "contracts/conditions/ConditionStoreManager.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_enum(ConditionState)8630": {
              "label": "enum ConditionStoreLibrary.ConditionState",
              "members": [
                "Uninitialized",
                "Unfulfilled",
                "Fulfilled",
                "Aborted"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_bytes32)": {
              "label": "mapping(bytes32 => bytes32)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_mapping(t_bytes32,t_bytes32))": {
              "label": "mapping(bytes32 => mapping(bytes32 => bytes32))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(Condition)8642_storage)": {
              "label": "mapping(bytes32 => struct ConditionStoreLibrary.Condition)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(Epoch)19249_storage)": {
              "label": "mapping(bytes32 => struct EpochLibrary.Epoch)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
              "numberOfBytes": "32"
            },
            "t_struct(Condition)8642_storage": {
              "label": "struct ConditionStoreLibrary.Condition",
              "members": [
                {
                  "label": "typeRef",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "state",
                  "type": "t_enum(ConditionState)8630",
                  "offset": 20,
                  "slot": "0"
                },
                {
                  "label": "createdBy",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastUpdatedBy",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "blockNumberUpdated",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(ConditionList)8657_storage": {
              "label": "struct ConditionStoreLibrary.ConditionList",
              "members": [
                {
                  "label": "conditions",
                  "type": "t_mapping(t_bytes32,t_struct(Condition)8642_storage)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "map",
                  "type": "t_mapping(t_bytes32,t_mapping(t_bytes32,t_bytes32))",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "conditionIds",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(Epoch)19249_storage": {
              "label": "struct EpochLibrary.Epoch",
              "members": [
                {
                  "label": "timeLock",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "timeOut",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "blockNumber",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(EpochList)19258_storage": {
              "label": "struct EpochLibrary.EpochList",
              "members": [
                {
                  "label": "epochs",
                  "type": "t_mapping(t_bytes32,t_struct(Epoch)19249_storage)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "epochIds",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(RoleData)34_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "DIDRegistryChangeFunctionSignature": {
        "src": "contracts/test/DIDRegistry/DIDRegistryChangeFunctionSignature.sol:10",
        "version": {
          "withMetadata": "9bc5ca268d4dcb94cae62f5ddc55e18765f18575d8b1875df7739a523f859b8e",
          "withoutMetadata": "f609f8c32087e47032cfbbc7542434370c7716d1a39bb84a96935f205cda21ae",
          "linkedWithoutMetadata": "f609f8c32087e47032cfbbc7542434370c7716d1a39bb84a96935f205cda21ae"
        },
        "inherit": [
          "DIDRegistry",
          "DIDFactory",
          "ProvenanceRegistry",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "DIDRegistryLibrary"
        ],
        "methods": [
          "registerAttribute(bytes32,address[],bytes32,string)"
        ],
        "linkReferences": [
          {
            "src": "contracts/registry/DIDRegistryLibrary.sol",
            "name": "DIDRegistryLibrary",
            "length": 20,
            "start": 2564,
            "placeholder": "__$3d79664e2807efe0e7b78a31ea8a960386$__"
          },
          {
            "src": "contracts/registry/DIDRegistryLibrary.sol",
            "name": "DIDRegistryLibrary",
            "length": 20,
            "start": 3238,
            "placeholder": "__$3d79664e2807efe0e7b78a31ea8a960386$__"
          },
          {
            "src": "contracts/registry/DIDRegistryLibrary.sol",
            "name": "DIDRegistryLibrary",
            "length": 20,
            "start": 3653,
            "placeholder": "__$3d79664e2807efe0e7b78a31ea8a960386$__"
          },
          {
            "src": "contracts/registry/DIDRegistryLibrary.sol",
            "name": "DIDRegistryLibrary",
            "length": 20,
            "start": 3767,
            "placeholder": "__$3d79664e2807efe0e7b78a31ea8a960386$__"
          },
          {
            "src": "contracts/registry/DIDRegistryLibrary.sol",
            "name": "DIDRegistryLibrary",
            "length": 20,
            "start": 6572,
            "placeholder": "__$3d79664e2807efe0e7b78a31ea8a960386$__"
          }
        ],
        "errors": [
          {
            "kind": "external-library-linking",
            "name": "DIDRegistryLibrary",
            "src": "contracts/registry/DIDRegistryLibrary.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "provenanceRegistry",
              "offset": 0,
              "slot": "101",
              "type": "t_struct(ProvenanceRegistryList)24743_storage",
              "contract": "ProvenanceRegistry",
              "src": "contracts/registry/ProvenanceRegistry.sol:55"
            },
            {
              "label": "didRegisterList",
              "offset": 0,
              "slot": "102",
              "type": "t_struct(DIDRegisterList)23866_storage",
              "contract": "DIDFactory",
              "src": "contracts/registry/DIDFactory.sol:27"
            },
            {
              "label": "didPermissions",
              "offset": 0,
              "slot": "104",
              "type": "t_mapping(t_bytes32,t_mapping(t_address,t_bool))",
              "contract": "DIDFactory",
              "src": "contracts/registry/DIDFactory.sol:30"
            },
            {
              "label": "manager",
              "offset": 0,
              "slot": "105",
              "type": "t_address",
              "contract": "DIDFactory",
              "src": "contracts/registry/DIDFactory.sol:32"
            },
            {
              "label": "erc1155",
              "offset": 0,
              "slot": "106",
              "type": "t_contract(NFTUpgradeable)31136",
              "contract": "DIDRegistry",
              "src": "contracts/registry/DIDRegistry.sol:21"
            },
            {
              "label": "erc721",
              "offset": 0,
              "slot": "107",
              "type": "t_contract(NFT721Upgradeable)31422",
              "contract": "DIDRegistry",
              "src": "contracts/registry/DIDRegistry.sol:22"
            },
            {
              "label": "royaltiesCheckers",
              "offset": 0,
              "slot": "108",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "DIDRegistry",
              "src": "contracts/registry/DIDRegistry.sol:24"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_contract(IRoyaltyScheme)18671": {
              "label": "contract IRoyaltyScheme",
              "numberOfBytes": "20"
            },
            "t_contract(NFT721Upgradeable)31422": {
              "label": "contract NFT721Upgradeable",
              "numberOfBytes": "20"
            },
            "t_contract(NFTUpgradeable)31136": {
              "label": "contract NFTUpgradeable",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_mapping(t_address,t_bool))": {
              "label": "mapping(bytes32 => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(DIDRegister)23857_storage)": {
              "label": "mapping(bytes32 => struct DIDRegistryLibrary.DIDRegister)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(Provenance)24737_storage)": {
              "label": "mapping(bytes32 => struct ProvenanceRegistry.Provenance)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(DIDRegister)23857_storage": {
              "label": "struct DIDRegistryLibrary.DIDRegister",
              "members": [
                {
                  "label": "owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "royalties",
                  "type": "t_uint8",
                  "offset": 20,
                  "slot": "0"
                },
                {
                  "label": "nftInitialized",
                  "type": "t_bool",
                  "offset": 21,
                  "slot": "0"
                },
                {
                  "label": "nft721Initialized",
                  "type": "t_bool",
                  "offset": 22,
                  "slot": "0"
                },
                {
                  "label": "creator",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastChecksum",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "url",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "lastUpdatedBy",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "blockNumberUpdated",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "providers",
                  "type": "t_array(t_address)dyn_storage",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "delegates",
                  "type": "t_array(t_address)dyn_storage",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "nftSupply",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "mintCap",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "royaltyRecipient",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "10"
                },
                {
                  "label": "royaltyScheme",
                  "type": "t_contract(IRoyaltyScheme)18671",
                  "offset": 0,
                  "slot": "11"
                }
              ],
              "numberOfBytes": "384"
            },
            "t_struct(DIDRegisterList)23866_storage": {
              "label": "struct DIDRegistryLibrary.DIDRegisterList",
              "members": [
                {
                  "label": "didRegisters",
                  "type": "t_mapping(t_bytes32,t_struct(DIDRegister)23857_storage)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "didRegisterIds",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Provenance)24737_storage": {
              "label": "struct ProvenanceRegistry.Provenance",
              "members": [
                {
                  "label": "did",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "relatedDid",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "agentId",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "activityId",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "agentInvolvedId",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "method",
                  "type": "t_uint8",
                  "offset": 20,
                  "slot": "4"
                },
                {
                  "label": "createdBy",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "blockNumberUpdated",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "signature",
                  "type": "t_bytes_storage",
                  "offset": 0,
                  "slot": "7"
                }
              ],
              "numberOfBytes": "256"
            },
            "t_struct(ProvenanceRegistryList)24743_storage": {
              "label": "struct ProvenanceRegistry.ProvenanceRegistryList",
              "members": [
                {
                  "label": "list",
                  "type": "t_mapping(t_bytes32,t_struct(Provenance)24737_storage)",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "DIDRegistryChangeInStorage": {
        "src": "contracts/test/DIDRegistry/DIDRegistryChangeInStorage.sol:10",
        "version": {
          "withMetadata": "adc34aeef7fb0fe3abbdf396a8bfa805c2f7e56a87c6baa813ecb1073f31b108",
          "withoutMetadata": "3ed58ee44586c62e10fb0a61cdda226211ffb4df16f775080c13fd44e163adb7",
          "linkedWithoutMetadata": "3ed58ee44586c62e10fb0a61cdda226211ffb4df16f775080c13fd44e163adb7"
        },
        "inherit": [
          "DIDRegistry",
          "DIDFactory",
          "ProvenanceRegistry",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [
          {
            "src": "contracts/registry/DIDRegistryLibrary.sol",
            "name": "DIDRegistryLibrary",
            "length": 20,
            "start": 2611,
            "placeholder": "__$3d79664e2807efe0e7b78a31ea8a960386$__"
          },
          {
            "src": "contracts/registry/DIDRegistryLibrary.sol",
            "name": "DIDRegistryLibrary",
            "length": 20,
            "start": 3303,
            "placeholder": "__$3d79664e2807efe0e7b78a31ea8a960386$__"
          },
          {
            "src": "contracts/registry/DIDRegistryLibrary.sol",
            "name": "DIDRegistryLibrary",
            "length": 20,
            "start": 3718,
            "placeholder": "__$3d79664e2807efe0e7b78a31ea8a960386$__"
          },
          {
            "src": "contracts/registry/DIDRegistryLibrary.sol",
            "name": "DIDRegistryLibrary",
            "length": 20,
            "start": 3832,
            "placeholder": "__$3d79664e2807efe0e7b78a31ea8a960386$__"
          }
        ],
        "errors": [
          {
            "kind": "external-library-linking",
            "name": "DIDRegistryLibrary",
            "src": "contracts/registry/DIDRegistryLibrary.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "provenanceRegistry",
              "offset": 0,
              "slot": "101",
              "type": "t_struct(ProvenanceRegistryList)24743_storage",
              "contract": "ProvenanceRegistry",
              "src": "contracts/registry/ProvenanceRegistry.sol:55"
            },
            {
              "label": "didRegisterList",
              "offset": 0,
              "slot": "102",
              "type": "t_struct(DIDRegisterList)23866_storage",
              "contract": "DIDFactory",
              "src": "contracts/registry/DIDFactory.sol:27"
            },
            {
              "label": "didPermissions",
              "offset": 0,
              "slot": "104",
              "type": "t_mapping(t_bytes32,t_mapping(t_address,t_bool))",
              "contract": "DIDFactory",
              "src": "contracts/registry/DIDFactory.sol:30"
            },
            {
              "label": "manager",
              "offset": 0,
              "slot": "105",
              "type": "t_address",
              "contract": "DIDFactory",
              "src": "contracts/registry/DIDFactory.sol:32"
            },
            {
              "label": "erc1155",
              "offset": 0,
              "slot": "106",
              "type": "t_contract(NFTUpgradeable)31136",
              "contract": "DIDRegistry",
              "src": "contracts/registry/DIDRegistry.sol:21"
            },
            {
              "label": "erc721",
              "offset": 0,
              "slot": "107",
              "type": "t_contract(NFT721Upgradeable)31422",
              "contract": "DIDRegistry",
              "src": "contracts/registry/DIDRegistry.sol:22"
            },
            {
              "label": "royaltiesCheckers",
              "offset": 0,
              "slot": "108",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "DIDRegistry",
              "src": "contracts/registry/DIDRegistry.sol:24"
            },
            {
              "label": "timeOfRegister",
              "offset": 0,
              "slot": "109",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "contract": "DIDRegistryChangeInStorage",
              "src": "contracts/test/DIDRegistry/DIDRegistryChangeInStorage.sol:15"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_contract(IRoyaltyScheme)18671": {
              "label": "contract IRoyaltyScheme",
              "numberOfBytes": "20"
            },
            "t_contract(NFT721Upgradeable)31422": {
              "label": "contract NFT721Upgradeable",
              "numberOfBytes": "20"
            },
            "t_contract(NFTUpgradeable)31136": {
              "label": "contract NFTUpgradeable",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_mapping(t_address,t_bool))": {
              "label": "mapping(bytes32 => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(DIDRegister)23857_storage)": {
              "label": "mapping(bytes32 => struct DIDRegistryLibrary.DIDRegister)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(Provenance)24737_storage)": {
              "label": "mapping(bytes32 => struct ProvenanceRegistry.Provenance)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(DIDRegister)23857_storage": {
              "label": "struct DIDRegistryLibrary.DIDRegister",
              "members": [
                {
                  "label": "owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "royalties",
                  "type": "t_uint8",
                  "offset": 20,
                  "slot": "0"
                },
                {
                  "label": "nftInitialized",
                  "type": "t_bool",
                  "offset": 21,
                  "slot": "0"
                },
                {
                  "label": "nft721Initialized",
                  "type": "t_bool",
                  "offset": 22,
                  "slot": "0"
                },
                {
                  "label": "creator",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastChecksum",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "url",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "lastUpdatedBy",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "blockNumberUpdated",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "providers",
                  "type": "t_array(t_address)dyn_storage",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "delegates",
                  "type": "t_array(t_address)dyn_storage",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "nftSupply",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "mintCap",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "royaltyRecipient",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "10"
                },
                {
                  "label": "royaltyScheme",
                  "type": "t_contract(IRoyaltyScheme)18671",
                  "offset": 0,
                  "slot": "11"
                }
              ],
              "numberOfBytes": "384"
            },
            "t_struct(DIDRegisterList)23866_storage": {
              "label": "struct DIDRegistryLibrary.DIDRegisterList",
              "members": [
                {
                  "label": "didRegisters",
                  "type": "t_mapping(t_bytes32,t_struct(DIDRegister)23857_storage)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "didRegisterIds",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Provenance)24737_storage": {
              "label": "struct ProvenanceRegistry.Provenance",
              "members": [
                {
                  "label": "did",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "relatedDid",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "agentId",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "activityId",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "agentInvolvedId",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "method",
                  "type": "t_uint8",
                  "offset": 20,
                  "slot": "4"
                },
                {
                  "label": "createdBy",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "blockNumberUpdated",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "signature",
                  "type": "t_bytes_storage",
                  "offset": 0,
                  "slot": "7"
                }
              ],
              "numberOfBytes": "256"
            },
            "t_struct(ProvenanceRegistryList)24743_storage": {
              "label": "struct ProvenanceRegistry.ProvenanceRegistryList",
              "members": [
                {
                  "label": "list",
                  "type": "t_mapping(t_bytes32,t_struct(Provenance)24737_storage)",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "DIDRegistryChangeInStorageAndLogic": {
        "src": "contracts/test/DIDRegistry/DIDRegistryChangeInStorageAndLogic.sol:13",
        "version": {
          "withMetadata": "18cf3eb040e9042a7a4cb9c3796822d6f644d476706dd685a3430cbd1e5d295f",
          "withoutMetadata": "e7d080bf86197cb4f5c7432d6a5aad7c85802bdd24b92dbb3fd2a909b140a3ee",
          "linkedWithoutMetadata": "e7d080bf86197cb4f5c7432d6a5aad7c85802bdd24b92dbb3fd2a909b140a3ee"
        },
        "inherit": [
          "DIDRegistryChangeInStorage",
          "DIDRegistryChangeFunctionSignature",
          "DIDRegistry",
          "DIDFactory",
          "ProvenanceRegistry",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [
          {
            "src": "contracts/registry/DIDRegistryLibrary.sol",
            "name": "DIDRegistryLibrary",
            "length": 20,
            "start": 2607,
            "placeholder": "__$3d79664e2807efe0e7b78a31ea8a960386$__"
          },
          {
            "src": "contracts/registry/DIDRegistryLibrary.sol",
            "name": "DIDRegistryLibrary",
            "length": 20,
            "start": 3281,
            "placeholder": "__$3d79664e2807efe0e7b78a31ea8a960386$__"
          },
          {
            "src": "contracts/registry/DIDRegistryLibrary.sol",
            "name": "DIDRegistryLibrary",
            "length": 20,
            "start": 3696,
            "placeholder": "__$3d79664e2807efe0e7b78a31ea8a960386$__"
          },
          {
            "src": "contracts/registry/DIDRegistryLibrary.sol",
            "name": "DIDRegistryLibrary",
            "length": 20,
            "start": 3810,
            "placeholder": "__$3d79664e2807efe0e7b78a31ea8a960386$__"
          },
          {
            "src": "contracts/registry/DIDRegistryLibrary.sol",
            "name": "DIDRegistryLibrary",
            "length": 20,
            "start": 6615,
            "placeholder": "__$3d79664e2807efe0e7b78a31ea8a960386$__"
          }
        ],
        "errors": [
          {
            "kind": "external-library-linking",
            "name": "DIDRegistryLibrary",
            "src": "contracts/registry/DIDRegistryLibrary.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "provenanceRegistry",
              "offset": 0,
              "slot": "101",
              "type": "t_struct(ProvenanceRegistryList)24743_storage",
              "contract": "ProvenanceRegistry",
              "src": "contracts/registry/ProvenanceRegistry.sol:55"
            },
            {
              "label": "didRegisterList",
              "offset": 0,
              "slot": "102",
              "type": "t_struct(DIDRegisterList)23866_storage",
              "contract": "DIDFactory",
              "src": "contracts/registry/DIDFactory.sol:27"
            },
            {
              "label": "didPermissions",
              "offset": 0,
              "slot": "104",
              "type": "t_mapping(t_bytes32,t_mapping(t_address,t_bool))",
              "contract": "DIDFactory",
              "src": "contracts/registry/DIDFactory.sol:30"
            },
            {
              "label": "manager",
              "offset": 0,
              "slot": "105",
              "type": "t_address",
              "contract": "DIDFactory",
              "src": "contracts/registry/DIDFactory.sol:32"
            },
            {
              "label": "erc1155",
              "offset": 0,
              "slot": "106",
              "type": "t_contract(NFTUpgradeable)31136",
              "contract": "DIDRegistry",
              "src": "contracts/registry/DIDRegistry.sol:21"
            },
            {
              "label": "erc721",
              "offset": 0,
              "slot": "107",
              "type": "t_contract(NFT721Upgradeable)31422",
              "contract": "DIDRegistry",
              "src": "contracts/registry/DIDRegistry.sol:22"
            },
            {
              "label": "royaltiesCheckers",
              "offset": 0,
              "slot": "108",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "DIDRegistry",
              "src": "contracts/registry/DIDRegistry.sol:24"
            },
            {
              "label": "timeOfRegister",
              "offset": 0,
              "slot": "109",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "contract": "DIDRegistryChangeInStorage",
              "src": "contracts/test/DIDRegistry/DIDRegistryChangeInStorage.sol:15"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_contract(IRoyaltyScheme)18671": {
              "label": "contract IRoyaltyScheme",
              "numberOfBytes": "20"
            },
            "t_contract(NFT721Upgradeable)31422": {
              "label": "contract NFT721Upgradeable",
              "numberOfBytes": "20"
            },
            "t_contract(NFTUpgradeable)31136": {
              "label": "contract NFTUpgradeable",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_mapping(t_address,t_bool))": {
              "label": "mapping(bytes32 => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(DIDRegister)23857_storage)": {
              "label": "mapping(bytes32 => struct DIDRegistryLibrary.DIDRegister)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(Provenance)24737_storage)": {
              "label": "mapping(bytes32 => struct ProvenanceRegistry.Provenance)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(DIDRegister)23857_storage": {
              "label": "struct DIDRegistryLibrary.DIDRegister",
              "members": [
                {
                  "label": "owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "royalties",
                  "type": "t_uint8",
                  "offset": 20,
                  "slot": "0"
                },
                {
                  "label": "nftInitialized",
                  "type": "t_bool",
                  "offset": 21,
                  "slot": "0"
                },
                {
                  "label": "nft721Initialized",
                  "type": "t_bool",
                  "offset": 22,
                  "slot": "0"
                },
                {
                  "label": "creator",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastChecksum",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "url",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "lastUpdatedBy",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "blockNumberUpdated",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "providers",
                  "type": "t_array(t_address)dyn_storage",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "delegates",
                  "type": "t_array(t_address)dyn_storage",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "nftSupply",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "mintCap",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "royaltyRecipient",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "10"
                },
                {
                  "label": "royaltyScheme",
                  "type": "t_contract(IRoyaltyScheme)18671",
                  "offset": 0,
                  "slot": "11"
                }
              ],
              "numberOfBytes": "384"
            },
            "t_struct(DIDRegisterList)23866_storage": {
              "label": "struct DIDRegistryLibrary.DIDRegisterList",
              "members": [
                {
                  "label": "didRegisters",
                  "type": "t_mapping(t_bytes32,t_struct(DIDRegister)23857_storage)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "didRegisterIds",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Provenance)24737_storage": {
              "label": "struct ProvenanceRegistry.Provenance",
              "members": [
                {
                  "label": "did",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "relatedDid",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "agentId",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "activityId",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "agentInvolvedId",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "method",
                  "type": "t_uint8",
                  "offset": 20,
                  "slot": "4"
                },
                {
                  "label": "createdBy",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "blockNumberUpdated",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "signature",
                  "type": "t_bytes_storage",
                  "offset": 0,
                  "slot": "7"
                }
              ],
              "numberOfBytes": "256"
            },
            "t_struct(ProvenanceRegistryList)24743_storage": {
              "label": "struct ProvenanceRegistry.ProvenanceRegistryList",
              "members": [
                {
                  "label": "list",
                  "type": "t_mapping(t_bytes32,t_struct(Provenance)24737_storage)",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "DIDRegistryExtraFunctionality": {
        "src": "contracts/test/DIDRegistry/DIDRegistryExtraFunctionality.sol:11",
        "version": {
          "withMetadata": "aaf2fcab7a7abd54007b1a4e7982d6fcf6ca623a6811a0ec48a7136129733db9",
          "withoutMetadata": "fb688401cbf9fd8d60fb5478c096c0e8d27e055e774887d87defd209bbb3cab2",
          "linkedWithoutMetadata": "fb688401cbf9fd8d60fb5478c096c0e8d27e055e774887d87defd209bbb3cab2"
        },
        "inherit": [
          "DIDRegistry",
          "DIDFactory",
          "ProvenanceRegistry",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "getNumber()"
        ],
        "linkReferences": [
          {
            "src": "contracts/registry/DIDRegistryLibrary.sol",
            "name": "DIDRegistryLibrary",
            "length": 20,
            "start": 2586,
            "placeholder": "__$3d79664e2807efe0e7b78a31ea8a960386$__"
          },
          {
            "src": "contracts/registry/DIDRegistryLibrary.sol",
            "name": "DIDRegistryLibrary",
            "length": 20,
            "start": 3278,
            "placeholder": "__$3d79664e2807efe0e7b78a31ea8a960386$__"
          },
          {
            "src": "contracts/registry/DIDRegistryLibrary.sol",
            "name": "DIDRegistryLibrary",
            "length": 20,
            "start": 3693,
            "placeholder": "__$3d79664e2807efe0e7b78a31ea8a960386$__"
          },
          {
            "src": "contracts/registry/DIDRegistryLibrary.sol",
            "name": "DIDRegistryLibrary",
            "length": 20,
            "start": 3807,
            "placeholder": "__$3d79664e2807efe0e7b78a31ea8a960386$__"
          }
        ],
        "errors": [
          {
            "kind": "external-library-linking",
            "name": "DIDRegistryLibrary",
            "src": "contracts/registry/DIDRegistryLibrary.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "provenanceRegistry",
              "offset": 0,
              "slot": "101",
              "type": "t_struct(ProvenanceRegistryList)24743_storage",
              "contract": "ProvenanceRegistry",
              "src": "contracts/registry/ProvenanceRegistry.sol:55"
            },
            {
              "label": "didRegisterList",
              "offset": 0,
              "slot": "102",
              "type": "t_struct(DIDRegisterList)23866_storage",
              "contract": "DIDFactory",
              "src": "contracts/registry/DIDFactory.sol:27"
            },
            {
              "label": "didPermissions",
              "offset": 0,
              "slot": "104",
              "type": "t_mapping(t_bytes32,t_mapping(t_address,t_bool))",
              "contract": "DIDFactory",
              "src": "contracts/registry/DIDFactory.sol:30"
            },
            {
              "label": "manager",
              "offset": 0,
              "slot": "105",
              "type": "t_address",
              "contract": "DIDFactory",
              "src": "contracts/registry/DIDFactory.sol:32"
            },
            {
              "label": "erc1155",
              "offset": 0,
              "slot": "106",
              "type": "t_contract(NFTUpgradeable)31136",
              "contract": "DIDRegistry",
              "src": "contracts/registry/DIDRegistry.sol:21"
            },
            {
              "label": "erc721",
              "offset": 0,
              "slot": "107",
              "type": "t_contract(NFT721Upgradeable)31422",
              "contract": "DIDRegistry",
              "src": "contracts/registry/DIDRegistry.sol:22"
            },
            {
              "label": "royaltiesCheckers",
              "offset": 0,
              "slot": "108",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "DIDRegistry",
              "src": "contracts/registry/DIDRegistry.sol:24"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_contract(IRoyaltyScheme)18671": {
              "label": "contract IRoyaltyScheme",
              "numberOfBytes": "20"
            },
            "t_contract(NFT721Upgradeable)31422": {
              "label": "contract NFT721Upgradeable",
              "numberOfBytes": "20"
            },
            "t_contract(NFTUpgradeable)31136": {
              "label": "contract NFTUpgradeable",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_mapping(t_address,t_bool))": {
              "label": "mapping(bytes32 => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(DIDRegister)23857_storage)": {
              "label": "mapping(bytes32 => struct DIDRegistryLibrary.DIDRegister)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(Provenance)24737_storage)": {
              "label": "mapping(bytes32 => struct ProvenanceRegistry.Provenance)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(DIDRegister)23857_storage": {
              "label": "struct DIDRegistryLibrary.DIDRegister",
              "members": [
                {
                  "label": "owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "royalties",
                  "type": "t_uint8",
                  "offset": 20,
                  "slot": "0"
                },
                {
                  "label": "nftInitialized",
                  "type": "t_bool",
                  "offset": 21,
                  "slot": "0"
                },
                {
                  "label": "nft721Initialized",
                  "type": "t_bool",
                  "offset": 22,
                  "slot": "0"
                },
                {
                  "label": "creator",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastChecksum",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "url",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "lastUpdatedBy",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "blockNumberUpdated",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "providers",
                  "type": "t_array(t_address)dyn_storage",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "delegates",
                  "type": "t_array(t_address)dyn_storage",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "nftSupply",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "mintCap",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "royaltyRecipient",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "10"
                },
                {
                  "label": "royaltyScheme",
                  "type": "t_contract(IRoyaltyScheme)18671",
                  "offset": 0,
                  "slot": "11"
                }
              ],
              "numberOfBytes": "384"
            },
            "t_struct(DIDRegisterList)23866_storage": {
              "label": "struct DIDRegistryLibrary.DIDRegisterList",
              "members": [
                {
                  "label": "didRegisters",
                  "type": "t_mapping(t_bytes32,t_struct(DIDRegister)23857_storage)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "didRegisterIds",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Provenance)24737_storage": {
              "label": "struct ProvenanceRegistry.Provenance",
              "members": [
                {
                  "label": "did",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "relatedDid",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "agentId",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "activityId",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "agentInvolvedId",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "method",
                  "type": "t_uint8",
                  "offset": 20,
                  "slot": "4"
                },
                {
                  "label": "createdBy",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "blockNumberUpdated",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "signature",
                  "type": "t_bytes_storage",
                  "offset": 0,
                  "slot": "7"
                }
              ],
              "numberOfBytes": "256"
            },
            "t_struct(ProvenanceRegistryList)24743_storage": {
              "label": "struct ProvenanceRegistry.ProvenanceRegistryList",
              "members": [
                {
                  "label": "list",
                  "type": "t_mapping(t_bytes32,t_struct(Provenance)24737_storage)",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "DIDRegistryWithBug": {
        "src": "contracts/test/DIDRegistry/DIDRegistryWithBug.sol:10",
        "version": {
          "withMetadata": "704ef5a818ba73a3a5e1748ae8b16e58c968ff8ae589a6da4f6a1a1e1c5da5f7",
          "withoutMetadata": "ca100d729f918a3c568d3310eaba27ccbb4fcd4a66cc7f923056a35198cc2495",
          "linkedWithoutMetadata": "ca100d729f918a3c568d3310eaba27ccbb4fcd4a66cc7f923056a35198cc2495"
        },
        "inherit": [
          "DIDRegistry",
          "DIDFactory",
          "ProvenanceRegistry",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "DIDRegistryLibrary"
        ],
        "methods": [
          "registerAttribute(bytes32,bytes32,address[],string)"
        ],
        "linkReferences": [
          {
            "src": "contracts/registry/DIDRegistryLibrary.sol",
            "name": "DIDRegistryLibrary",
            "length": 20,
            "start": 2534,
            "placeholder": "__$3d79664e2807efe0e7b78a31ea8a960386$__"
          },
          {
            "src": "contracts/registry/DIDRegistryLibrary.sol",
            "name": "DIDRegistryLibrary",
            "length": 20,
            "start": 3208,
            "placeholder": "__$3d79664e2807efe0e7b78a31ea8a960386$__"
          },
          {
            "src": "contracts/registry/DIDRegistryLibrary.sol",
            "name": "DIDRegistryLibrary",
            "length": 20,
            "start": 3623,
            "placeholder": "__$3d79664e2807efe0e7b78a31ea8a960386$__"
          },
          {
            "src": "contracts/registry/DIDRegistryLibrary.sol",
            "name": "DIDRegistryLibrary",
            "length": 20,
            "start": 3737,
            "placeholder": "__$3d79664e2807efe0e7b78a31ea8a960386$__"
          },
          {
            "src": "contracts/registry/DIDRegistryLibrary.sol",
            "name": "DIDRegistryLibrary",
            "length": 20,
            "start": 4191,
            "placeholder": "__$3d79664e2807efe0e7b78a31ea8a960386$__"
          }
        ],
        "errors": [
          {
            "kind": "external-library-linking",
            "name": "DIDRegistryLibrary",
            "src": "contracts/registry/DIDRegistryLibrary.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "provenanceRegistry",
              "offset": 0,
              "slot": "101",
              "type": "t_struct(ProvenanceRegistryList)24743_storage",
              "contract": "ProvenanceRegistry",
              "src": "contracts/registry/ProvenanceRegistry.sol:55"
            },
            {
              "label": "didRegisterList",
              "offset": 0,
              "slot": "102",
              "type": "t_struct(DIDRegisterList)23866_storage",
              "contract": "DIDFactory",
              "src": "contracts/registry/DIDFactory.sol:27"
            },
            {
              "label": "didPermissions",
              "offset": 0,
              "slot": "104",
              "type": "t_mapping(t_bytes32,t_mapping(t_address,t_bool))",
              "contract": "DIDFactory",
              "src": "contracts/registry/DIDFactory.sol:30"
            },
            {
              "label": "manager",
              "offset": 0,
              "slot": "105",
              "type": "t_address",
              "contract": "DIDFactory",
              "src": "contracts/registry/DIDFactory.sol:32"
            },
            {
              "label": "erc1155",
              "offset": 0,
              "slot": "106",
              "type": "t_contract(NFTUpgradeable)31136",
              "contract": "DIDRegistry",
              "src": "contracts/registry/DIDRegistry.sol:21"
            },
            {
              "label": "erc721",
              "offset": 0,
              "slot": "107",
              "type": "t_contract(NFT721Upgradeable)31422",
              "contract": "DIDRegistry",
              "src": "contracts/registry/DIDRegistry.sol:22"
            },
            {
              "label": "royaltiesCheckers",
              "offset": 0,
              "slot": "108",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "DIDRegistry",
              "src": "contracts/registry/DIDRegistry.sol:24"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_contract(IRoyaltyScheme)18671": {
              "label": "contract IRoyaltyScheme",
              "numberOfBytes": "20"
            },
            "t_contract(NFT721Upgradeable)31422": {
              "label": "contract NFT721Upgradeable",
              "numberOfBytes": "20"
            },
            "t_contract(NFTUpgradeable)31136": {
              "label": "contract NFTUpgradeable",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_mapping(t_address,t_bool))": {
              "label": "mapping(bytes32 => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(DIDRegister)23857_storage)": {
              "label": "mapping(bytes32 => struct DIDRegistryLibrary.DIDRegister)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(Provenance)24737_storage)": {
              "label": "mapping(bytes32 => struct ProvenanceRegistry.Provenance)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(DIDRegister)23857_storage": {
              "label": "struct DIDRegistryLibrary.DIDRegister",
              "members": [
                {
                  "label": "owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "royalties",
                  "type": "t_uint8",
                  "offset": 20,
                  "slot": "0"
                },
                {
                  "label": "nftInitialized",
                  "type": "t_bool",
                  "offset": 21,
                  "slot": "0"
                },
                {
                  "label": "nft721Initialized",
                  "type": "t_bool",
                  "offset": 22,
                  "slot": "0"
                },
                {
                  "label": "creator",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastChecksum",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "url",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "lastUpdatedBy",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "blockNumberUpdated",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "providers",
                  "type": "t_array(t_address)dyn_storage",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "delegates",
                  "type": "t_array(t_address)dyn_storage",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "nftSupply",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "mintCap",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "royaltyRecipient",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "10"
                },
                {
                  "label": "royaltyScheme",
                  "type": "t_contract(IRoyaltyScheme)18671",
                  "offset": 0,
                  "slot": "11"
                }
              ],
              "numberOfBytes": "384"
            },
            "t_struct(DIDRegisterList)23866_storage": {
              "label": "struct DIDRegistryLibrary.DIDRegisterList",
              "members": [
                {
                  "label": "didRegisters",
                  "type": "t_mapping(t_bytes32,t_struct(DIDRegister)23857_storage)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "didRegisterIds",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Provenance)24737_storage": {
              "label": "struct ProvenanceRegistry.Provenance",
              "members": [
                {
                  "label": "did",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "relatedDid",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "agentId",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "activityId",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "agentInvolvedId",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "method",
                  "type": "t_uint8",
                  "offset": 20,
                  "slot": "4"
                },
                {
                  "label": "createdBy",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "blockNumberUpdated",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "signature",
                  "type": "t_bytes_storage",
                  "offset": 0,
                  "slot": "7"
                }
              ],
              "numberOfBytes": "256"
            },
            "t_struct(ProvenanceRegistryList)24743_storage": {
              "label": "struct ProvenanceRegistry.ProvenanceRegistryList",
              "members": [
                {
                  "label": "list",
                  "type": "t_mapping(t_bytes32,t_struct(Provenance)24737_storage)",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IPNFT": {
        "src": "contracts/test/IPNFT.sol:7",
        "version": {
          "withMetadata": "d522d0cfbb17aee9f0c702310cb9d02206db983f6b996d5720d5a8c3cf6d5997",
          "withoutMetadata": "88f6741f94439718a375781d4a9e1b07d3458460cabebd1407b18123a8b40348",
          "linkedWithoutMetadata": "88f6741f94439718a375781d4a9e1b07d3458460cabebd1407b18123a8b40348"
        },
        "inherit": [
          "OwnableUpgradeable",
          "ERC721URIStorageUpgradeable",
          "ERC721Upgradeable",
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(string,string)",
          "setTokenURI(uint256,string)",
          "mint(address,uint256,string)",
          "mintWithoutTokenURI(address,uint256)",
          "transfer(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "101",
              "type": "t_string_storage",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "102",
              "type": "t_string_storage",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "103",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "104",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "105",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "106",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "107",
              "type": "t_array(t_uint256)44_storage",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:458"
            },
            {
              "label": "_tokenURIs",
              "offset": 0,
              "slot": "151",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "ERC721URIStorageUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:21"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "152",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ERC721URIStorageUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:79"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)44_storage": {
              "label": "uint256[44]",
              "numberOfBytes": "1408"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "NeverminedConfigChangeInStorage": {
        "src": "contracts/test/NeverminedConfig/NeverminedChangeInStorage.sol:8",
        "version": {
          "withMetadata": "d39a2f6b3cd76e0072267a97e5f172f03777d29df3eff542cd5870aeb68ebd71",
          "withoutMetadata": "6ee9988486549167f319186dff02cde3e515b3fee261a8e6831da2d411a31e2c",
          "linkedWithoutMetadata": "6ee9988486549167f319186dff02cde3e515b3fee261a8e6831da2d411a31e2c"
        },
        "inherit": [
          "NeverminedConfig",
          "INVMConfig",
          "AccessControlUpgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "IAccessControlUpgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            },
            {
              "label": "_roles",
              "offset": 0,
              "slot": "151",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
              "contract": "AccessControlUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "152",
              "type": "t_array(t_uint256)49_storage",
              "contract": "AccessControlUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:247"
            },
            {
              "label": "marketplaceFee",
              "offset": 0,
              "slot": "201",
              "type": "t_uint256",
              "contract": "NeverminedConfig",
              "src": "contracts/governance/NeverminedConfig.sol:22"
            },
            {
              "label": "feeReceiver",
              "offset": 0,
              "slot": "202",
              "type": "t_address",
              "contract": "NeverminedConfig",
              "src": "contracts/governance/NeverminedConfig.sol:26"
            },
            {
              "label": "newVariable",
              "offset": 0,
              "slot": "203",
              "type": "t_uint256",
              "contract": "NeverminedConfigChangeInStorage",
              "src": "contracts/test/NeverminedConfig/NeverminedChangeInStorage.sol:14"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)34_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "NeverminedConfigChangeFunctionSignature": {
        "src": "contracts/test/NeverminedConfig/NeverminedConfigChangeFunctionSignature.sol:8",
        "version": {
          "withMetadata": "2d2c7f5986aab48f6cc9b1187dabef24cf919cbd13a626fa2e5c4f89c5079b4f",
          "withoutMetadata": "d26d3523ead992f5065a5aa1a909408c05ebef4353775cbb9aeb5c3603f6e9ed",
          "linkedWithoutMetadata": "d26d3523ead992f5065a5aa1a909408c05ebef4353775cbb9aeb5c3603f6e9ed"
        },
        "inherit": [
          "NeverminedConfig",
          "INVMConfig",
          "AccessControlUpgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "IAccessControlUpgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "setMarketplaceFees(uint256,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            },
            {
              "label": "_roles",
              "offset": 0,
              "slot": "151",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
              "contract": "AccessControlUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "152",
              "type": "t_array(t_uint256)49_storage",
              "contract": "AccessControlUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:247"
            },
            {
              "label": "marketplaceFee",
              "offset": 0,
              "slot": "201",
              "type": "t_uint256",
              "contract": "NeverminedConfig",
              "src": "contracts/governance/NeverminedConfig.sol:22"
            },
            {
              "label": "feeReceiver",
              "offset": 0,
              "slot": "202",
              "type": "t_address",
              "contract": "NeverminedConfig",
              "src": "contracts/governance/NeverminedConfig.sol:26"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)34_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "NeverminedConfigChangeInStorageAndLogic": {
        "src": "contracts/test/NeverminedConfig/NeverminedConfigChangeInStorageAndLogic.sol:11",
        "version": {
          "withMetadata": "9ade028be148d12af5d9421b376dca04bdc7047ecc74ed922f32dd49d9e4173e",
          "withoutMetadata": "1c4a044a066487ba529297870316403a707c035bd5c849c74cc207ccb93cc398",
          "linkedWithoutMetadata": "1c4a044a066487ba529297870316403a707c035bd5c849c74cc207ccb93cc398"
        },
        "inherit": [
          "NeverminedConfigChangeInStorage",
          "NeverminedConfigChangeFunctionSignature",
          "NeverminedConfig",
          "INVMConfig",
          "AccessControlUpgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "IAccessControlUpgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            },
            {
              "label": "_roles",
              "offset": 0,
              "slot": "151",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
              "contract": "AccessControlUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "152",
              "type": "t_array(t_uint256)49_storage",
              "contract": "AccessControlUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:247"
            },
            {
              "label": "marketplaceFee",
              "offset": 0,
              "slot": "201",
              "type": "t_uint256",
              "contract": "NeverminedConfig",
              "src": "contracts/governance/NeverminedConfig.sol:22"
            },
            {
              "label": "feeReceiver",
              "offset": 0,
              "slot": "202",
              "type": "t_address",
              "contract": "NeverminedConfig",
              "src": "contracts/governance/NeverminedConfig.sol:26"
            },
            {
              "label": "newVariable",
              "offset": 0,
              "slot": "203",
              "type": "t_uint256",
              "contract": "NeverminedConfigChangeInStorage",
              "src": "contracts/test/NeverminedConfig/NeverminedChangeInStorage.sol:14"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)34_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "NeverminedConfigWithBug": {
        "src": "contracts/test/NeverminedConfig/NeverminedConfigWithBug.sol:8",
        "version": {
          "withMetadata": "afdd8db1cf5252b8227d1e89538e78dc8966a9ccb6f4f94d5f8fbc04f9361d0f",
          "withoutMetadata": "1829e88d9cc7cd537e17a64723bcfe44f3c01cbb9efd9ef3074e435d57a2cc1b",
          "linkedWithoutMetadata": "1829e88d9cc7cd537e17a64723bcfe44f3c01cbb9efd9ef3074e435d57a2cc1b"
        },
        "inherit": [
          "NeverminedConfig",
          "INVMConfig",
          "AccessControlUpgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "IAccessControlUpgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "setMarketplaceFees(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            },
            {
              "label": "_roles",
              "offset": 0,
              "slot": "151",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
              "contract": "AccessControlUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "152",
              "type": "t_array(t_uint256)49_storage",
              "contract": "AccessControlUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:247"
            },
            {
              "label": "marketplaceFee",
              "offset": 0,
              "slot": "201",
              "type": "t_uint256",
              "contract": "NeverminedConfig",
              "src": "contracts/governance/NeverminedConfig.sol:22"
            },
            {
              "label": "feeReceiver",
              "offset": 0,
              "slot": "202",
              "type": "t_address",
              "contract": "NeverminedConfig",
              "src": "contracts/governance/NeverminedConfig.sol:26"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)34_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "TemplateStoreChangeFunctionSignature": {
        "src": "contracts/test/TemplateStoreManager/TemplateStoreChangeFunctionSignature.sol:9",
        "version": {
          "withMetadata": "fdcd1b09e3304ae7e702b05c35cfd8e7945c3d41abd183296faad52de33b9614",
          "withoutMetadata": "4822e564f812cdd6033c00cdcf422f3408b796239ba18502c09f1e6273783ace",
          "linkedWithoutMetadata": "4822e564f812cdd6033c00cdcf422f3408b796239ba18502c09f1e6273783ace"
        },
        "inherit": [
          "TemplateStoreManager",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "TemplateStoreLibrary"
        ],
        "methods": [
          "proposeTemplate(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "templateList",
              "offset": 0,
              "slot": "101",
              "type": "t_struct(TemplateList)29139_storage",
              "contract": "TemplateStoreManager",
              "src": "contracts/templates/TemplateStoreManager.sol:26"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_enum(TemplateState)29120": {
              "label": "enum TemplateStoreLibrary.TemplateState",
              "members": [
                "Uninitialized",
                "Proposed",
                "Approved",
                "Revoked"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_struct(Template)29130_storage)": {
              "label": "mapping(address => struct TemplateStoreLibrary.Template)",
              "numberOfBytes": "32"
            },
            "t_struct(Template)29130_storage": {
              "label": "struct TemplateStoreLibrary.Template",
              "members": [
                {
                  "label": "state",
                  "type": "t_enum(TemplateState)29120",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "owner",
                  "type": "t_address",
                  "offset": 1,
                  "slot": "0"
                },
                {
                  "label": "lastUpdatedBy",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "blockNumberUpdated",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(TemplateList)29139_storage": {
              "label": "struct TemplateStoreLibrary.TemplateList",
              "members": [
                {
                  "label": "templates",
                  "type": "t_mapping(t_address,t_struct(Template)29130_storage)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "templateIds",
                  "type": "t_array(t_address)dyn_storage",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "TemplateStoreChangeInStorage": {
        "src": "contracts/test/TemplateStoreManager/TemplateStoreChangeInStorage.sol:9",
        "version": {
          "withMetadata": "1b70b7b51bf33d596af83c898fbf5d775c78813f18fed3d4258725d0e1ffebdc",
          "withoutMetadata": "9c805e707893f5a7452c2c94da041ed41e41923f46458b8d3e0db6d557c49d38",
          "linkedWithoutMetadata": "9c805e707893f5a7452c2c94da041ed41e41923f46458b8d3e0db6d557c49d38"
        },
        "inherit": [
          "TemplateStoreManager",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "templateList",
              "offset": 0,
              "slot": "101",
              "type": "t_struct(TemplateList)29139_storage",
              "contract": "TemplateStoreManager",
              "src": "contracts/templates/TemplateStoreManager.sol:26"
            },
            {
              "label": "templateCount",
              "offset": 0,
              "slot": "103",
              "type": "t_uint256",
              "contract": "TemplateStoreChangeInStorage",
              "src": "contracts/test/TemplateStoreManager/TemplateStoreChangeInStorage.sol:15"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_enum(TemplateState)29120": {
              "label": "enum TemplateStoreLibrary.TemplateState",
              "members": [
                "Uninitialized",
                "Proposed",
                "Approved",
                "Revoked"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_struct(Template)29130_storage)": {
              "label": "mapping(address => struct TemplateStoreLibrary.Template)",
              "numberOfBytes": "32"
            },
            "t_struct(Template)29130_storage": {
              "label": "struct TemplateStoreLibrary.Template",
              "members": [
                {
                  "label": "state",
                  "type": "t_enum(TemplateState)29120",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "owner",
                  "type": "t_address",
                  "offset": 1,
                  "slot": "0"
                },
                {
                  "label": "lastUpdatedBy",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "blockNumberUpdated",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(TemplateList)29139_storage": {
              "label": "struct TemplateStoreLibrary.TemplateList",
              "members": [
                {
                  "label": "templates",
                  "type": "t_mapping(t_address,t_struct(Template)29130_storage)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "templateIds",
                  "type": "t_array(t_address)dyn_storage",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "TemplateStoreChangeInStorageAndLogic": {
        "src": "contracts/test/TemplateStoreManager/TemplateStoreChangeInStorageAndLogic.sol:12",
        "version": {
          "withMetadata": "1353824c39375f1847ee0251fa728d50f35e0863a50efb34572d24c203745199",
          "withoutMetadata": "a325df7d68080612d00a72f04a6624925578503304be22a6033532dd8ee12436",
          "linkedWithoutMetadata": "a325df7d68080612d00a72f04a6624925578503304be22a6033532dd8ee12436"
        },
        "inherit": [
          "TemplateStoreChangeInStorage",
          "TemplateStoreChangeFunctionSignature",
          "TemplateStoreManager",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "templateList",
              "offset": 0,
              "slot": "101",
              "type": "t_struct(TemplateList)29139_storage",
              "contract": "TemplateStoreManager",
              "src": "contracts/templates/TemplateStoreManager.sol:26"
            },
            {
              "label": "templateCount",
              "offset": 0,
              "slot": "103",
              "type": "t_uint256",
              "contract": "TemplateStoreChangeInStorage",
              "src": "contracts/test/TemplateStoreManager/TemplateStoreChangeInStorage.sol:15"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_enum(TemplateState)29120": {
              "label": "enum TemplateStoreLibrary.TemplateState",
              "members": [
                "Uninitialized",
                "Proposed",
                "Approved",
                "Revoked"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_struct(Template)29130_storage)": {
              "label": "mapping(address => struct TemplateStoreLibrary.Template)",
              "numberOfBytes": "32"
            },
            "t_struct(Template)29130_storage": {
              "label": "struct TemplateStoreLibrary.Template",
              "members": [
                {
                  "label": "state",
                  "type": "t_enum(TemplateState)29120",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "owner",
                  "type": "t_address",
                  "offset": 1,
                  "slot": "0"
                },
                {
                  "label": "lastUpdatedBy",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "blockNumberUpdated",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(TemplateList)29139_storage": {
              "label": "struct TemplateStoreLibrary.TemplateList",
              "members": [
                {
                  "label": "templates",
                  "type": "t_mapping(t_address,t_struct(Template)29130_storage)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "templateIds",
                  "type": "t_array(t_address)dyn_storage",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "TemplateStoreExtraFunctionality": {
        "src": "contracts/test/TemplateStoreManager/TemplateStoreExtraFunctionality.sol:11",
        "version": {
          "withMetadata": "031a753c534e3e3cb94d08c0ada44ccca6b31bf6804a93a365de45f98642a3d6",
          "withoutMetadata": "ae625ee7f235216c5e811b9e3b934f5dec2283c2e8d036b87854ee4aa4ee79e8",
          "linkedWithoutMetadata": "ae625ee7f235216c5e811b9e3b934f5dec2283c2e8d036b87854ee4aa4ee79e8"
        },
        "inherit": [
          "TemplateStoreManager",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "dummyFunction()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "templateList",
              "offset": 0,
              "slot": "101",
              "type": "t_struct(TemplateList)29139_storage",
              "contract": "TemplateStoreManager",
              "src": "contracts/templates/TemplateStoreManager.sol:26"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_enum(TemplateState)29120": {
              "label": "enum TemplateStoreLibrary.TemplateState",
              "members": [
                "Uninitialized",
                "Proposed",
                "Approved",
                "Revoked"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_struct(Template)29130_storage)": {
              "label": "mapping(address => struct TemplateStoreLibrary.Template)",
              "numberOfBytes": "32"
            },
            "t_struct(Template)29130_storage": {
              "label": "struct TemplateStoreLibrary.Template",
              "members": [
                {
                  "label": "state",
                  "type": "t_enum(TemplateState)29120",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "owner",
                  "type": "t_address",
                  "offset": 1,
                  "slot": "0"
                },
                {
                  "label": "lastUpdatedBy",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "blockNumberUpdated",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(TemplateList)29139_storage": {
              "label": "struct TemplateStoreLibrary.TemplateList",
              "members": [
                {
                  "label": "templates",
                  "type": "t_mapping(t_address,t_struct(Template)29130_storage)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "templateIds",
                  "type": "t_array(t_address)dyn_storage",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "TemplateStoreWithBug": {
        "src": "contracts/test/TemplateStoreManager/TemplateStoreWithBug.sol:9",
        "version": {
          "withMetadata": "f5a99ca5331dbe41f9b4a41c93c9aa5c5b10a426a757e8441992b30e7f34fc2c",
          "withoutMetadata": "a2ae923ad585b6701d3252e93090e5d1ead66578b460f4258790d459018d31ce",
          "linkedWithoutMetadata": "a2ae923ad585b6701d3252e93090e5d1ead66578b460f4258790d459018d31ce"
        },
        "inherit": [
          "TemplateStoreManager",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "getTemplateListSize()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "templateList",
              "offset": 0,
              "slot": "101",
              "type": "t_struct(TemplateList)29139_storage",
              "contract": "TemplateStoreManager",
              "src": "contracts/templates/TemplateStoreManager.sol:26"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_enum(TemplateState)29120": {
              "label": "enum TemplateStoreLibrary.TemplateState",
              "members": [
                "Uninitialized",
                "Proposed",
                "Approved",
                "Revoked"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_struct(Template)29130_storage)": {
              "label": "mapping(address => struct TemplateStoreLibrary.Template)",
              "numberOfBytes": "32"
            },
            "t_struct(Template)29130_storage": {
              "label": "struct TemplateStoreLibrary.Template",
              "members": [
                {
                  "label": "state",
                  "type": "t_enum(TemplateState)29120",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "owner",
                  "type": "t_address",
                  "offset": 1,
                  "slot": "0"
                },
                {
                  "label": "lastUpdatedBy",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "blockNumberUpdated",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(TemplateList)29139_storage": {
              "label": "struct TemplateStoreLibrary.TemplateList",
              "members": [
                {
                  "label": "templates",
                  "type": "t_mapping(t_address,t_struct(Template)29130_storage)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "templateIds",
                  "type": "t_array(t_address)dyn_storage",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "TestERC721": {
        "src": "contracts/test/TestERC721.sol:8",
        "version": {
          "withMetadata": "84f6c8f655b6e55401baee89aeac4f7ab10a201b1f5b037c2997dbc74784af9a",
          "withoutMetadata": "84f806d731348dde1ee22d06f74777214298002a3f1bdce219deb433155ad4ad",
          "linkedWithoutMetadata": "84f806d731348dde1ee22d06f74777214298002a3f1bdce219deb433155ad4ad"
        },
        "inherit": [
          "ERC721Upgradeable",
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize()",
          "mint(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "101",
              "type": "t_string_storage",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "102",
              "type": "t_string_storage",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "103",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "104",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "105",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "106",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "107",
              "type": "t_array(t_uint256)44_storage",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:458"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)44_storage": {
              "label": "uint256[44]",
              "numberOfBytes": "1408"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "DIDRegistryLibraryProxy": {
        "src": "contracts/test/libraries/DIDRegistryLibraryProxy.sol:9",
        "version": {
          "withMetadata": "bbc9f3df9f6b35b4a36eb493118ab0914d1c88397ecca8eb0e1788b8826b18bf",
          "withoutMetadata": "0251f8788b165e50e15cc92b56f6c40610259f6782ecce55a9bffcd17e6eda10",
          "linkedWithoutMetadata": "0251f8788b165e50e15cc92b56f6c40610259f6782ecce55a9bffcd17e6eda10"
        },
        "inherit": [],
        "libraries": [
          "DIDRegistryLibrary"
        ],
        "methods": [
          "areRoyaltiesValid(bytes32,uint256[],address[],address)",
          "updateDIDOwner(bytes32,address)",
          "update(bytes32,bytes32,string)",
          "initializeNftConfig(bytes32,uint256,uint8)",
          "initializeNft721Config(bytes32,uint8)",
          "getDIDInfo(bytes32)"
        ],
        "linkReferences": [
          {
            "src": "contracts/registry/DIDRegistryLibrary.sol",
            "name": "DIDRegistryLibrary",
            "length": 20,
            "start": 370,
            "placeholder": "__$3d79664e2807efe0e7b78a31ea8a960386$__"
          }
        ],
        "errors": [
          {
            "kind": "external-library-linking",
            "name": "DIDRegistryLibrary",
            "src": "contracts/registry/DIDRegistryLibrary.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "didRegister",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(DIDRegister)23857_storage",
              "contract": "DIDRegistryLibraryProxy",
              "src": "contracts/test/libraries/DIDRegistryLibraryProxy.sol:14"
            },
            {
              "label": "didRegisterList",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(DIDRegisterList)23866_storage",
              "contract": "DIDRegistryLibraryProxy",
              "src": "contracts/test/libraries/DIDRegistryLibraryProxy.sol:15"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(IRoyaltyScheme)18671": {
              "label": "contract IRoyaltyScheme",
              "numberOfBytes": "20"
            },
            "t_mapping(t_bytes32,t_struct(DIDRegister)23857_storage)": {
              "label": "mapping(bytes32 => struct DIDRegistryLibrary.DIDRegister)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(DIDRegister)23857_storage": {
              "label": "struct DIDRegistryLibrary.DIDRegister",
              "members": [
                {
                  "label": "owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "royalties",
                  "type": "t_uint8",
                  "offset": 20,
                  "slot": "0"
                },
                {
                  "label": "nftInitialized",
                  "type": "t_bool",
                  "offset": 21,
                  "slot": "0"
                },
                {
                  "label": "nft721Initialized",
                  "type": "t_bool",
                  "offset": 22,
                  "slot": "0"
                },
                {
                  "label": "creator",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastChecksum",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "url",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "lastUpdatedBy",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "blockNumberUpdated",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "providers",
                  "type": "t_array(t_address)dyn_storage",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "delegates",
                  "type": "t_array(t_address)dyn_storage",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "nftSupply",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "mintCap",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "royaltyRecipient",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "10"
                },
                {
                  "label": "royaltyScheme",
                  "type": "t_contract(IRoyaltyScheme)18671",
                  "offset": 0,
                  "slot": "11"
                }
              ],
              "numberOfBytes": "384"
            },
            "t_struct(DIDRegisterList)23866_storage": {
              "label": "struct DIDRegistryLibrary.DIDRegisterList",
              "members": [
                {
                  "label": "didRegisters",
                  "type": "t_mapping(t_bytes32,t_struct(DIDRegister)23857_storage)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "didRegisterIds",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "EpochLibraryProxy": {
        "src": "contracts/test/libraries/EpochLibraryProxy.sol:10",
        "version": {
          "withMetadata": "02d6c9f39cad614d34b934c67ae81800e4f8682f3af8ed5d26ff4c34ecff7fa9",
          "withoutMetadata": "9ee1b4d0277ace80f1624f6fe9987f52947f1b3877ab9f3e823cc101776d2161",
          "linkedWithoutMetadata": "9ee1b4d0277ace80f1624f6fe9987f52947f1b3877ab9f3e823cc101776d2161"
        },
        "inherit": [],
        "libraries": [
          "EpochLibrary"
        ],
        "methods": [
          "create(bytes32,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "epoch",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(Epoch)19249_storage",
              "contract": "EpochLibraryProxy",
              "src": "contracts/test/libraries/EpochLibraryProxy.sol:15"
            },
            {
              "label": "epochList",
              "offset": 0,
              "slot": "3",
              "type": "t_struct(EpochList)19258_storage",
              "contract": "EpochLibraryProxy",
              "src": "contracts/test/libraries/EpochLibraryProxy.sol:16"
            }
          ],
          "types": {
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(Epoch)19249_storage)": {
              "label": "mapping(bytes32 => struct EpochLibrary.Epoch)",
              "numberOfBytes": "32"
            },
            "t_struct(Epoch)19249_storage": {
              "label": "struct EpochLibrary.Epoch",
              "members": [
                {
                  "label": "timeLock",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "timeOut",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "blockNumber",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(EpochList)19258_storage": {
              "label": "struct EpochLibrary.EpochList",
              "members": [
                {
                  "label": "epochs",
                  "type": "t_mapping(t_bytes32,t_struct(Epoch)19249_storage)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "epochIds",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "HashListLibraryProxy": {
        "src": "contracts/test/libraries/HashListLibraryProxy.sol:11",
        "version": {
          "withMetadata": "4619800933ccd7ead55caa637bfd2c9f15af878962401a3496c42120253ca542",
          "withoutMetadata": "2570be9176979918f58ab4534e99727239b36a44c512c4cd6f68765e3cd625d4",
          "linkedWithoutMetadata": "2570be9176979918f58ab4534e99727239b36a44c512c4cd6f68765e3cd625d4"
        },
        "inherit": [
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "HashListLibrary"
        ],
        "methods": [
          "initialize(address)",
          "hash(address)",
          "add(bytes32[])",
          "add(bytes32)",
          "update(bytes32,bytes32)",
          "index(uint256,uint256)",
          "has(bytes32)",
          "remove(bytes32)",
          "get(uint256)",
          "size()",
          "all()",
          "indexOf(bytes32)",
          "ownedBy()",
          "isIndexed()"
        ],
        "linkReferences": [
          {
            "src": "contracts/libraries/HashListLibrary.sol",
            "name": "HashListLibrary",
            "length": 20,
            "start": 605,
            "placeholder": "__$5b5e40fcf77e6c8e6f55f186dbefc951ae$__"
          },
          {
            "src": "contracts/libraries/HashListLibrary.sol",
            "name": "HashListLibrary",
            "length": 20,
            "start": 748,
            "placeholder": "__$5b5e40fcf77e6c8e6f55f186dbefc951ae$__"
          },
          {
            "src": "contracts/libraries/HashListLibrary.sol",
            "name": "HashListLibrary",
            "length": 20,
            "start": 896,
            "placeholder": "__$5b5e40fcf77e6c8e6f55f186dbefc951ae$__"
          },
          {
            "src": "contracts/libraries/HashListLibrary.sol",
            "name": "HashListLibrary",
            "length": 20,
            "start": 1031,
            "placeholder": "__$5b5e40fcf77e6c8e6f55f186dbefc951ae$__"
          },
          {
            "src": "contracts/libraries/HashListLibrary.sol",
            "name": "HashListLibrary",
            "length": 20,
            "start": 1178,
            "placeholder": "__$5b5e40fcf77e6c8e6f55f186dbefc951ae$__"
          },
          {
            "src": "contracts/libraries/HashListLibrary.sol",
            "name": "HashListLibrary",
            "length": 20,
            "start": 1457,
            "placeholder": "__$5b5e40fcf77e6c8e6f55f186dbefc951ae$__"
          },
          {
            "src": "contracts/libraries/HashListLibrary.sol",
            "name": "HashListLibrary",
            "length": 20,
            "start": 1584,
            "placeholder": "__$5b5e40fcf77e6c8e6f55f186dbefc951ae$__"
          },
          {
            "src": "contracts/libraries/HashListLibrary.sol",
            "name": "HashListLibrary",
            "length": 20,
            "start": 1645,
            "placeholder": "__$5b5e40fcf77e6c8e6f55f186dbefc951ae$__"
          },
          {
            "src": "contracts/libraries/HashListLibrary.sol",
            "name": "HashListLibrary",
            "length": 20,
            "start": 1713,
            "placeholder": "__$5b5e40fcf77e6c8e6f55f186dbefc951ae$__"
          },
          {
            "src": "contracts/libraries/HashListLibrary.sol",
            "name": "HashListLibrary",
            "length": 20,
            "start": 1839,
            "placeholder": "__$5b5e40fcf77e6c8e6f55f186dbefc951ae$__"
          },
          {
            "src": "contracts/libraries/HashListLibrary.sol",
            "name": "HashListLibrary",
            "length": 20,
            "start": 1921,
            "placeholder": "__$5b5e40fcf77e6c8e6f55f186dbefc951ae$__"
          },
          {
            "src": "contracts/libraries/HashListLibrary.sol",
            "name": "HashListLibrary",
            "length": 20,
            "start": 2019,
            "placeholder": "__$5b5e40fcf77e6c8e6f55f186dbefc951ae$__"
          },
          {
            "src": "contracts/libraries/HashListLibrary.sol",
            "name": "HashListLibrary",
            "length": 20,
            "start": 2205,
            "placeholder": "__$5b5e40fcf77e6c8e6f55f186dbefc951ae$__"
          }
        ],
        "errors": [
          {
            "kind": "external-library-linking",
            "name": "HashListLibrary",
            "src": "contracts/libraries/HashListLibrary.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "testData",
              "offset": 0,
              "slot": "101",
              "type": "t_struct(List)19442_storage",
              "contract": "HashListLibraryProxy",
              "src": "contracts/test/libraries/HashListLibraryProxy.sol:14"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(List)19442_storage": {
              "label": "struct HashListLibrary.List",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "indices",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "NFTBase": {
        "src": "contracts/token/NFTBase.sol:16",
        "inherit": [
          "AccessControlUpgradeable",
          "ERC165Upgradeable",
          "OwnableUpgradeable",
          "IERC2981Upgradeable",
          "IERC165Upgradeable",
          "IAccessControlUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "setProxyApproval(address,bool)",
          "royaltyInfo(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            },
            {
              "label": "_roles",
              "offset": 0,
              "slot": "151",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
              "contract": "AccessControlUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "152",
              "type": "t_array(t_uint256)49_storage",
              "contract": "AccessControlUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:247"
            },
            {
              "label": "_proxyApprovals",
              "offset": 0,
              "slot": "201",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "NFTBase",
              "src": "contracts/token/NFTBase.sol:19"
            },
            {
              "label": "_royalties",
              "offset": 0,
              "slot": "202",
              "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)30761_storage)",
              "contract": "NFTBase",
              "src": "contracts/token/NFTBase.sol:33"
            },
            {
              "label": "_metadata",
              "offset": 0,
              "slot": "203",
              "type": "t_mapping(t_uint256,t_struct(NFTMetadata)30764_storage)",
              "contract": "NFTBase",
              "src": "contracts/token/NFTBase.sol:35"
            },
            {
              "label": "_expiration",
              "offset": 0,
              "slot": "204",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "NFTBase",
              "src": "contracts/token/NFTBase.sol:37"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(NFTMetadata)30764_storage)": {
              "label": "mapping(uint256 => struct NFTBase.NFTMetadata)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(RoyaltyInfo)30761_storage)": {
              "label": "mapping(uint256 => struct NFTBase.RoyaltyInfo)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(NFTMetadata)30764_storage": {
              "label": "struct NFTBase.NFTMetadata",
              "members": [
                {
                  "label": "nftURI",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)34_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(RoyaltyInfo)30761_storage": {
              "label": "struct NFTBase.RoyaltyInfo",
              "members": [
                {
                  "label": "receiver",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "royaltyAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "NFTUpgradeable": {
        "src": "contracts/token/erc1155/NFTUpgradeable.sol:13",
        "version": {
          "withMetadata": "93d1acfe06f4e9fded57b92a971ad1316581196c298c94b7b72dc067c1290be1",
          "withoutMetadata": "9c80abbd5e5616af500784a98805bd40d4cc15a9a03da90f47e41eb9a5cf78ea",
          "linkedWithoutMetadata": "9c80abbd5e5616af500784a98805bd40d4cc15a9a03da90f47e41eb9a5cf78ea"
        },
        "inherit": [
          "NFTBase",
          "AccessControlUpgradeable",
          "ERC1155Upgradeable",
          "IERC1155MetadataURIUpgradeable",
          "IERC1155Upgradeable",
          "ERC165Upgradeable",
          "OwnableUpgradeable",
          "IERC2981Upgradeable",
          "IERC165Upgradeable",
          "IAccessControlUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(string)",
          "isApprovedForAll(address,address)",
          "mint(address,uint256,uint256,bytes)",
          "burn(address,uint256,uint256)",
          "addMinter(address)",
          "uri(uint256)",
          "setNFTMetadata(uint256,string)",
          "setTokenRoyalty(uint256,address,uint256)",
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "151",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "contract": "ERC1155Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:25"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "152",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC1155Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:28"
            },
            {
              "label": "_uri",
              "offset": 0,
              "slot": "153",
              "type": "t_string_storage",
              "contract": "ERC1155Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:31"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "154",
              "type": "t_array(t_uint256)47_storage",
              "contract": "ERC1155Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:522"
            },
            {
              "label": "_roles",
              "offset": 0,
              "slot": "201",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
              "contract": "AccessControlUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "AccessControlUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:247"
            },
            {
              "label": "_proxyApprovals",
              "offset": 0,
              "slot": "251",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "NFTBase",
              "src": "contracts/token/NFTBase.sol:19"
            },
            {
              "label": "_royalties",
              "offset": 0,
              "slot": "252",
              "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)30761_storage)",
              "contract": "NFTBase",
              "src": "contracts/token/NFTBase.sol:33"
            },
            {
              "label": "_metadata",
              "offset": 0,
              "slot": "253",
              "type": "t_mapping(t_uint256,t_struct(NFTMetadata)30764_storage)",
              "contract": "NFTBase",
              "src": "contracts/token/NFTBase.sol:35"
            },
            {
              "label": "_expiration",
              "offset": 0,
              "slot": "254",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "NFTBase",
              "src": "contracts/token/NFTBase.sol:37"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)47_storage": {
              "label": "uint256[47]",
              "numberOfBytes": "1504"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(NFTMetadata)30764_storage)": {
              "label": "mapping(uint256 => struct NFTBase.NFTMetadata)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(RoyaltyInfo)30761_storage)": {
              "label": "mapping(uint256 => struct NFTBase.RoyaltyInfo)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(NFTMetadata)30764_storage": {
              "label": "struct NFTBase.NFTMetadata",
              "members": [
                {
                  "label": "nftURI",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)34_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(RoyaltyInfo)30761_storage": {
              "label": "struct NFTBase.RoyaltyInfo",
              "members": [
                {
                  "label": "receiver",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "royaltyAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "NFT721SubscriptionUpgradeable": {
        "src": "contracts/token/erc721/NFT721SubscriptionUpgradeable.sol:9",
        "version": {
          "withMetadata": "6c88c85da6807eafcd232290e1a05be45188ec28a8f9a386e33ea79b711497ba",
          "withoutMetadata": "8cbc27a846fd1173197d93735789489b05a7f6241e80ae6a58f749ba423496d5",
          "linkedWithoutMetadata": "8cbc27a846fd1173197d93735789489b05a7f6241e80ae6a58f749ba423496d5"
        },
        "inherit": [
          "NFT721Upgradeable",
          "NFTBase",
          "AccessControlUpgradeable",
          "ERC721Upgradeable",
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "OwnableUpgradeable",
          "IERC2981Upgradeable",
          "IERC165Upgradeable",
          "IAccessControlUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "mint(address,uint256,uint256)",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "151",
              "type": "t_string_storage",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "152",
              "type": "t_string_storage",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "153",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "154",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "155",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "156",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "157",
              "type": "t_array(t_uint256)44_storage",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:458"
            },
            {
              "label": "_roles",
              "offset": 0,
              "slot": "201",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
              "contract": "AccessControlUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "AccessControlUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:247"
            },
            {
              "label": "_proxyApprovals",
              "offset": 0,
              "slot": "251",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "NFTBase",
              "src": "contracts/token/NFTBase.sol:19"
            },
            {
              "label": "_royalties",
              "offset": 0,
              "slot": "252",
              "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)30761_storage)",
              "contract": "NFTBase",
              "src": "contracts/token/NFTBase.sol:33"
            },
            {
              "label": "_metadata",
              "offset": 0,
              "slot": "253",
              "type": "t_mapping(t_uint256,t_struct(NFTMetadata)30764_storage)",
              "contract": "NFTBase",
              "src": "contracts/token/NFTBase.sol:35"
            },
            {
              "label": "_expiration",
              "offset": 0,
              "slot": "254",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "NFTBase",
              "src": "contracts/token/NFTBase.sol:37"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)44_storage": {
              "label": "uint256[44]",
              "numberOfBytes": "1408"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(NFTMetadata)30764_storage)": {
              "label": "mapping(uint256 => struct NFTBase.NFTMetadata)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(RoyaltyInfo)30761_storage)": {
              "label": "mapping(uint256 => struct NFTBase.RoyaltyInfo)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(NFTMetadata)30764_storage": {
              "label": "struct NFTBase.NFTMetadata",
              "members": [
                {
                  "label": "nftURI",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)34_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(RoyaltyInfo)30761_storage": {
              "label": "struct NFTBase.RoyaltyInfo",
              "members": [
                {
                  "label": "receiver",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "royaltyAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "NFT721Upgradeable": {
        "src": "contracts/token/erc721/NFT721Upgradeable.sol:14",
        "version": {
          "withMetadata": "8d112ee36372c5531735f2844515f73d254df4caee15a515913ea206fe1ba701",
          "withoutMetadata": "2a37222cbd1fec7d1fe4c1d2619048dc9f537c6793d061689e32a364d716de3d",
          "linkedWithoutMetadata": "2a37222cbd1fec7d1fe4c1d2619048dc9f537c6793d061689e32a364d716de3d"
        },
        "inherit": [
          "NFTBase",
          "AccessControlUpgradeable",
          "ERC721Upgradeable",
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "OwnableUpgradeable",
          "IERC2981Upgradeable",
          "IERC165Upgradeable",
          "IAccessControlUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize()",
          "isApprovedForAll(address,address)",
          "addMinter(address)",
          "mint(address,uint256)",
          "burn(uint256)",
          "tokenURI(uint256)",
          "setNFTMetadata(uint256,string)",
          "setTokenRoyalty(uint256,address,uint256)",
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "151",
              "type": "t_string_storage",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "152",
              "type": "t_string_storage",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "153",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "154",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "155",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "156",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "157",
              "type": "t_array(t_uint256)44_storage",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:458"
            },
            {
              "label": "_roles",
              "offset": 0,
              "slot": "201",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
              "contract": "AccessControlUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "AccessControlUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:247"
            },
            {
              "label": "_proxyApprovals",
              "offset": 0,
              "slot": "251",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "NFTBase",
              "src": "contracts/token/NFTBase.sol:19"
            },
            {
              "label": "_royalties",
              "offset": 0,
              "slot": "252",
              "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)30761_storage)",
              "contract": "NFTBase",
              "src": "contracts/token/NFTBase.sol:33"
            },
            {
              "label": "_metadata",
              "offset": 0,
              "slot": "253",
              "type": "t_mapping(t_uint256,t_struct(NFTMetadata)30764_storage)",
              "contract": "NFTBase",
              "src": "contracts/token/NFTBase.sol:35"
            },
            {
              "label": "_expiration",
              "offset": 0,
              "slot": "254",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "NFTBase",
              "src": "contracts/token/NFTBase.sol:37"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)44_storage": {
              "label": "uint256[44]",
              "numberOfBytes": "1408"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(NFTMetadata)30764_storage)": {
              "label": "mapping(uint256 => struct NFTBase.NFTMetadata)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(RoyaltyInfo)30761_storage)": {
              "label": "mapping(uint256 => struct NFTBase.RoyaltyInfo)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(NFTMetadata)30764_storage": {
              "label": "struct NFTBase.NFTMetadata",
              "members": [
                {
                  "label": "nftURI",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)34_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(RoyaltyInfo)30761_storage": {
              "label": "struct NFTBase.RoyaltyInfo",
              "members": [
                {
                  "label": "receiver",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "royaltyAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "POAPUpgradeable": {
        "src": "contracts/token/erc721/POAPUpgradeable.sol:13",
        "version": {
          "withMetadata": "12022d4603fec7085ccc5779c1e2e7d9556cfc9020eba9e2786b1f7686f43a3e",
          "withoutMetadata": "6128fda26cfc370ea44d322ca19fa79047ae344701b784b4b6f5e846f1fba7a9",
          "linkedWithoutMetadata": "6128fda26cfc370ea44d322ca19fa79047ae344701b784b4b6f5e846f1fba7a9"
        },
        "inherit": [
          "ERC721EnumerableUpgradeable",
          "IERC721EnumerableUpgradeable",
          "ERC721URIStorageUpgradeable",
          "NFT721Upgradeable",
          "NFTBase",
          "AccessControlUpgradeable",
          "ERC721Upgradeable",
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "OwnableUpgradeable",
          "IERC2981Upgradeable",
          "IERC165Upgradeable",
          "IAccessControlUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "CountersUpgradeable"
        ],
        "methods": [
          "initialize()",
          "mint(address,string,uint256)",
          "mint(address,uint256)",
          "tokenEvent(uint256)",
          "tokenDetailsOfOwner(address)",
          "tokenURI(uint256)",
          "isApprovedForAll(address,address)",
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "151",
              "type": "t_string_storage",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "152",
              "type": "t_string_storage",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "153",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "154",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "155",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "156",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "157",
              "type": "t_array(t_uint256)44_storage",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:458"
            },
            {
              "label": "_roles",
              "offset": 0,
              "slot": "201",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
              "contract": "AccessControlUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "AccessControlUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:247"
            },
            {
              "label": "_proxyApprovals",
              "offset": 0,
              "slot": "251",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "NFTBase",
              "src": "contracts/token/NFTBase.sol:19"
            },
            {
              "label": "_royalties",
              "offset": 0,
              "slot": "252",
              "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)30761_storage)",
              "contract": "NFTBase",
              "src": "contracts/token/NFTBase.sol:33"
            },
            {
              "label": "_metadata",
              "offset": 0,
              "slot": "253",
              "type": "t_mapping(t_uint256,t_struct(NFTMetadata)30764_storage)",
              "contract": "NFTBase",
              "src": "contracts/token/NFTBase.sol:35"
            },
            {
              "label": "_expiration",
              "offset": 0,
              "slot": "254",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "NFTBase",
              "src": "contracts/token/NFTBase.sol:37"
            },
            {
              "label": "_tokenURIs",
              "offset": 0,
              "slot": "255",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "ERC721URIStorageUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:21"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "256",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ERC721URIStorageUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:79"
            },
            {
              "label": "_ownedTokens",
              "offset": 0,
              "slot": "305",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "ERC721EnumerableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
            },
            {
              "label": "_ownedTokensIndex",
              "offset": 0,
              "slot": "306",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "ERC721EnumerableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
            },
            {
              "label": "_allTokens",
              "offset": 0,
              "slot": "307",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "ERC721EnumerableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
            },
            {
              "label": "_allTokensIndex",
              "offset": 0,
              "slot": "308",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "ERC721EnumerableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "309",
              "type": "t_array(t_uint256)46_storage",
              "contract": "ERC721EnumerableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:175"
            },
            {
              "label": "_tokenIdCounter",
              "offset": 0,
              "slot": "355",
              "type": "t_struct(Counter)5173_storage",
              "contract": "POAPUpgradeable",
              "src": "contracts/token/erc721/POAPUpgradeable.sol:16"
            },
            {
              "label": "_tokenEvent",
              "offset": 0,
              "slot": "356",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "POAPUpgradeable",
              "src": "contracts/token/erc721/POAPUpgradeable.sol:19"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)44_storage": {
              "label": "uint256[44]",
              "numberOfBytes": "1408"
            },
            "t_array(t_uint256)46_storage": {
              "label": "uint256[46]",
              "numberOfBytes": "1472"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(address => mapping(uint256 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(NFTMetadata)30764_storage)": {
              "label": "mapping(uint256 => struct NFTBase.NFTMetadata)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(RoyaltyInfo)30761_storage)": {
              "label": "mapping(uint256 => struct NFTBase.RoyaltyInfo)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Counter)5173_storage": {
              "label": "struct CountersUpgradeable.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(NFTMetadata)30764_storage": {
              "label": "struct NFTBase.NFTMetadata",
              "members": [
                {
                  "label": "nftURI",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)34_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(RoyaltyInfo)30761_storage": {
              "label": "struct NFTBase.RoyaltyInfo",
              "members": [
                {
                  "label": "receiver",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "royaltyAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "fdbb8626a913261fd27c103f264df53a90ecb95541491cbb84b9afa21db95995",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "EpochLibraryTest": {
        "src": "test/unit/libraries/sol/EpochLibraryTest.sol:9",
        "version": {
          "withMetadata": "72dca946d4ffed718c60ddff2de72aba6415b4702c7a5668389871165a94c8b6",
          "withoutMetadata": "3755acb9deb964e3b17c525cddc36756db1bbb24857fdbf9f161b35e4d69b010",
          "linkedWithoutMetadata": "3755acb9deb964e3b17c525cddc36756db1bbb24857fdbf9f161b35e4d69b010"
        },
        "inherit": [],
        "libraries": [
          "EpochLibrary"
        ],
        "methods": [
          "beforeEach()",
          "testBigNumberShouldNotFail()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "epochList",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(EpochList)19258_storage",
              "contract": "EpochLibraryTest",
              "src": "test/unit/libraries/sol/EpochLibraryTest.sol:13"
            },
            {
              "label": "maxBigNumberDoesNotFail",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "EpochLibraryTest",
              "src": "test/unit/libraries/sol/EpochLibraryTest.sol:15"
            }
          ],
          "types": {
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(Epoch)19249_storage)": {
              "label": "mapping(bytes32 => struct EpochLibrary.Epoch)",
              "numberOfBytes": "32"
            },
            "t_struct(Epoch)19249_storage": {
              "label": "struct EpochLibrary.Epoch",
              "members": [
                {
                  "label": "timeLock",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "timeOut",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "blockNumber",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(EpochList)19258_storage": {
              "label": "struct EpochLibrary.EpochList",
              "members": [
                {
                  "label": "epochs",
                  "type": "t_mapping(t_bytes32,t_struct(Epoch)19249_storage)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "epochIds",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "GnosisSafe": {
        "src": "@gnosis.pm/safe-contracts/contracts/GnosisSafe.sol:19",
        "version": {
          "withMetadata": "127a2ca5d87d633afa06b0ed5bdee8c26f196397f4de4d465a001d3c4e00a140",
          "withoutMetadata": "32abba629d7005c1307daadf37f6117c6752c9f9431e42cfe2375441e4c61de2",
          "linkedWithoutMetadata": "32abba629d7005c1307daadf37f6117c6752c9f9431e42cfe2375441e4c61de2"
        },
        "inherit": [
          "GuardManager",
          "StorageAccessible",
          "FallbackManager",
          "ISignatureValidatorConstants",
          "SecuredTokenTransfer",
          "SignatureDecoder",
          "OwnerManager",
          "ModuleManager",
          "Executor",
          "SelfAuthorized",
          "Singleton",
          "EtherPaymentFallback"
        ],
        "libraries": [
          "GnosisSafeMath"
        ],
        "methods": [
          "()",
          "setup(address[],uint256,address,bytes,address,address,uint256,address payable)",
          "execTransaction(address,uint256,bytes,uint8,uint256,uint256,uint256,address,address payable,bytes)",
          "checkSignatures(bytes32,bytes,bytes)",
          "checkNSignatures(bytes32,bytes,bytes,uint256)",
          "requiredTxGas(address,uint256,bytes,uint8)",
          "approveHash(bytes32)",
          "getChainId()",
          "domainSeparator()",
          "encodeTransactionData(address,uint256,bytes,uint8,uint256,uint256,uint256,address,address,uint256)",
          "getTransactionHash(address,uint256,bytes,uint8,uint256,uint256,uint256,address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "GnosisSafe",
            "src": "@gnosis.pm/safe-contracts/contracts/GnosisSafe.sol:59"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "singleton",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Singleton",
              "src": "@gnosis.pm/safe-contracts/contracts/common/Singleton.sol:10"
            },
            {
              "label": "modules",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_address)",
              "contract": "ModuleManager",
              "src": "@gnosis.pm/safe-contracts/contracts/base/ModuleManager.sol:18"
            },
            {
              "label": "owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_address)",
              "contract": "OwnerManager",
              "src": "@gnosis.pm/safe-contracts/contracts/base/OwnerManager.sol:15"
            },
            {
              "label": "ownerCount",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "OwnerManager",
              "src": "@gnosis.pm/safe-contracts/contracts/base/OwnerManager.sol:16"
            },
            {
              "label": "threshold",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "OwnerManager",
              "src": "@gnosis.pm/safe-contracts/contracts/base/OwnerManager.sol:17"
            },
            {
              "label": "nonce",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "GnosisSafe",
              "src": "@gnosis.pm/safe-contracts/contracts/GnosisSafe.sol:51"
            },
            {
              "label": "_deprecatedDomainSeparator",
              "offset": 0,
              "slot": "6",
              "type": "t_bytes32",
              "contract": "GnosisSafe",
              "src": "@gnosis.pm/safe-contracts/contracts/GnosisSafe.sol:52"
            },
            {
              "label": "signedMessages",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "contract": "GnosisSafe",
              "src": "@gnosis.pm/safe-contracts/contracts/GnosisSafe.sol:54"
            },
            {
              "label": "approvedHashes",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_mapping(t_bytes32,t_uint256))",
              "contract": "GnosisSafe",
              "src": "@gnosis.pm/safe-contracts/contracts/GnosisSafe.sol:56"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_bytes32,t_uint256))": {
              "label": "mapping(address => mapping(bytes32 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Executor": {
        "src": "@gnosis.pm/safe-contracts/contracts/base/Executor.sol:7",
        "version": {
          "withMetadata": "0a4a87e609b9b14422a5e12d16c1c699feeeb02d6f219e0579df3c7722bd0230",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "FallbackManager": {
        "src": "@gnosis.pm/safe-contracts/contracts/base/FallbackManager.sol:8",
        "version": {
          "withMetadata": "1a3fc895e761475effd8f940c0777e1602a026df5e7ddfb940327e4ccab0f67e",
          "withoutMetadata": "a6c6e2ee6ed4371d03dd013a357333dc28f95e0493468fd21186eb688f6fa36c",
          "linkedWithoutMetadata": "a6c6e2ee6ed4371d03dd013a357333dc28f95e0493468fd21186eb688f6fa36c"
        },
        "inherit": [
          "SelfAuthorized"
        ],
        "libraries": [],
        "methods": [
          "setFallbackHandler(address)",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Guard": {
        "src": "@gnosis.pm/safe-contracts/contracts/base/GuardManager.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "checkTransaction(address,uint256,bytes,uint8,uint256,uint256,uint256,address,address payable,bytes,address)",
          "checkAfterExecution(bytes32,bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "GuardManager": {
        "src": "@gnosis.pm/safe-contracts/contracts/base/GuardManager.sol:27",
        "version": {
          "withMetadata": "8d977a78a50693effad5bc05d217ac54dc5011979adf804637b57bea6cf50d2a",
          "withoutMetadata": "c40fff295ce1ebab796f4c29403e8c53d777ee8b8a75c145866f299647141bb4",
          "linkedWithoutMetadata": "c40fff295ce1ebab796f4c29403e8c53d777ee8b8a75c145866f299647141bb4"
        },
        "inherit": [
          "SelfAuthorized"
        ],
        "libraries": [],
        "methods": [
          "setGuard(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ModuleManager": {
        "src": "@gnosis.pm/safe-contracts/contracts/base/ModuleManager.sol:10",
        "version": {
          "withMetadata": "2e3a064e6c821acac997015a08f9742091b6fe6c77d0c3075d7a51bc225ef0f5",
          "withoutMetadata": "ce90a5daf96c9e852191b73935a02cf746eb4063751bcdc2d89ba25c8dd5eafd",
          "linkedWithoutMetadata": "ce90a5daf96c9e852191b73935a02cf746eb4063751bcdc2d89ba25c8dd5eafd"
        },
        "inherit": [
          "Executor",
          "SelfAuthorized"
        ],
        "libraries": [],
        "methods": [
          "enableModule(address)",
          "disableModule(address,address)",
          "execTransactionFromModule(address,uint256,bytes,uint8)",
          "execTransactionFromModuleReturnData(address,uint256,bytes,uint8)",
          "isModuleEnabled(address)",
          "getModulesPaginated(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "modules",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_address)",
              "contract": "ModuleManager",
              "src": "@gnosis.pm/safe-contracts/contracts/base/ModuleManager.sol:18"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "OwnerManager": {
        "src": "@gnosis.pm/safe-contracts/contracts/base/OwnerManager.sol:8",
        "version": {
          "withMetadata": "99729f55c956c1df29030ddf46efbef39cd5fcde76d2dbfc4608749b7334f759",
          "withoutMetadata": "3b950c61056b68199575307c9afa19de1f88f73aeeafeb90b64fa26766a8462b",
          "linkedWithoutMetadata": "3b950c61056b68199575307c9afa19de1f88f73aeeafeb90b64fa26766a8462b"
        },
        "inherit": [
          "SelfAuthorized"
        ],
        "libraries": [],
        "methods": [
          "addOwnerWithThreshold(address,uint256)",
          "removeOwner(address,address,uint256)",
          "swapOwner(address,address,address)",
          "changeThreshold(uint256)",
          "getThreshold()",
          "isOwner(address)",
          "getOwners()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "owners",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_address)",
              "contract": "OwnerManager",
              "src": "@gnosis.pm/safe-contracts/contracts/base/OwnerManager.sol:15"
            },
            {
              "label": "ownerCount",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "OwnerManager",
              "src": "@gnosis.pm/safe-contracts/contracts/base/OwnerManager.sol:16"
            },
            {
              "label": "threshold",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "OwnerManager",
              "src": "@gnosis.pm/safe-contracts/contracts/base/OwnerManager.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Enum": {
        "src": "@gnosis.pm/safe-contracts/contracts/common/Enum.sol:6",
        "version": {
          "withMetadata": "cbbc84e91a3a4f36cf5f34654accfd9f7061ba2d6f931f2f437e030fe034809f",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "EtherPaymentFallback": {
        "src": "@gnosis.pm/safe-contracts/contracts/common/EtherPaymentFallback.sol:6",
        "version": {
          "withMetadata": "8754c04a02e097b87ef5422cddfc4d49c4d633dea7025cd191953c2dbc0c52b1",
          "withoutMetadata": "2df5b0a6e815736a589f0331577b6d497e1b407aaa2113a81067671b40e55a4b",
          "linkedWithoutMetadata": "2df5b0a6e815736a589f0331577b6d497e1b407aaa2113a81067671b40e55a4b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SecuredTokenTransfer": {
        "src": "@gnosis.pm/safe-contracts/contracts/common/SecuredTokenTransfer.sol:6",
        "version": {
          "withMetadata": "67ebc82febda1b7585b141e132f2659b7bc34e3ae7fb307fac1143697c657a5d",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SelfAuthorized": {
        "src": "@gnosis.pm/safe-contracts/contracts/common/SelfAuthorized.sol:6",
        "version": {
          "withMetadata": "6539ad48ee8fbda461e1c46ac84385768020154608161bf5d8b0fc1ec14dbe02",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SignatureDecoder": {
        "src": "@gnosis.pm/safe-contracts/contracts/common/SignatureDecoder.sol:6",
        "version": {
          "withMetadata": "e521535471ca6441d1bf1a49b24f771145e69a559b775d75b04ef423b80f94cb",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Singleton": {
        "src": "@gnosis.pm/safe-contracts/contracts/common/Singleton.sol:7",
        "version": {
          "withMetadata": "bc686638c2f0ba8e08803d38d2eed776aa4cabc4820209a8bdbe32634e7e8520",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "singleton",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Singleton",
              "src": "@gnosis.pm/safe-contracts/contracts/common/Singleton.sol:10"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "StorageAccessible": {
        "src": "@gnosis.pm/safe-contracts/contracts/common/StorageAccessible.sol:6",
        "version": {
          "withMetadata": "035a42899135b3130b0530f9ecaa373083389eea41d4e2c14ae3d1aedde57049",
          "withoutMetadata": "aceef781d206c4161bb88e306e8b0babffa9f6ada26c2e4f8a2ab26fa8cd3e43",
          "linkedWithoutMetadata": "aceef781d206c4161bb88e306e8b0babffa9f6ada26c2e4f8a2ab26fa8cd3e43"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "getStorageAt(uint256,uint256)",
          "simulateAndRevert(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "GnosisSafeMath": {
        "src": "@gnosis.pm/safe-contracts/contracts/external/GnosisSafeMath.sol:10",
        "version": {
          "withMetadata": "5845ef292c344b70c71cf8e58e2f68057dae59418115727fa64f823e42c250c3",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISignatureValidator": {
        "src": "@gnosis.pm/safe-contracts/contracts/interfaces/ISignatureValidator.sol:9",
        "inherit": [
          "ISignatureValidatorConstants"
        ],
        "libraries": [],
        "methods": [
          "isValidSignature(bytes,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISignatureValidatorConstants": {
        "src": "@gnosis.pm/safe-contracts/contracts/interfaces/ISignatureValidator.sol:4",
        "version": {
          "withMetadata": "a2e2e9d7fcccd571bca8867562f6106e9d2f9c4115072528a84eb143346bb06d",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "PlonkVerifier": {
        "src": "contracts/verifier.sol:24",
        "version": {
          "withMetadata": "75cc41cc7fb87977329e23973eea646a65ffcabdf5efcf843d89ee56700775cd",
          "withoutMetadata": "76b31d224076a67032a85ecba53ee3c41e0c5fe09c253aa8475673e5c0b596f2",
          "linkedWithoutMetadata": "76b31d224076a67032a85ecba53ee3c41e0c5fe09c253aa8475673e5c0b596f2"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "verifyProof(bytes,uint256[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "GnosisSafeProxy": {
        "src": "@gnosis.pm/safe-contracts/contracts/proxies/GnosisSafeProxy.sol:13",
        "version": {
          "withMetadata": "948547af25e7fd4ad76bab419b45064f3e701a64b725ccc77398f704ddd085ab",
          "withoutMetadata": "1df740ef3a28d33093ea03939152ecd810da18058a3f8931a9dc2a9d9aae2254",
          "linkedWithoutMetadata": "1df740ef3a28d33093ea03939152ecd810da18058a3f8931a9dc2a9d9aae2254"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "GnosisSafeProxy",
            "src": "@gnosis.pm/safe-contracts/contracts/proxies/GnosisSafeProxy.sol:20"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "singleton",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "GnosisSafeProxy",
              "src": "@gnosis.pm/safe-contracts/contracts/proxies/GnosisSafeProxy.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IProxy": {
        "src": "@gnosis.pm/safe-contracts/contracts/proxies/GnosisSafeProxy.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "masterCopy()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "GnosisSafeProxyFactory": {
        "src": "@gnosis.pm/safe-contracts/contracts/proxies/GnosisSafeProxyFactory.sol:9",
        "version": {
          "withMetadata": "6bab7a83d557c1f4676f4ab2f9da68c9a425e291ba7da838e8c690117d7a3697",
          "withoutMetadata": "b7949fcdd41136c9576dc98deddfa08d11b3b14e056bab45024953b4272eb568",
          "linkedWithoutMetadata": "b7949fcdd41136c9576dc98deddfa08d11b3b14e056bab45024953b4272eb568"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "createProxy(address,bytes)",
          "proxyRuntimeCode()",
          "proxyCreationCode()",
          "createProxyWithNonce(address,bytes,uint256)",
          "createProxyWithCallback(address,bytes,uint256,address)",
          "calculateCreateProxyWithNonceAddress(address,bytes,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IProxyCreationCallback": {
        "src": "@gnosis.pm/safe-contracts/contracts/proxies/IProxyCreationCallback.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "proxyCreated(address,address,bytes,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "TestDisputeManager": {
        "src": "contracts/test/TestDisputeManager.sol:6",
        "version": {
          "withMetadata": "5d0d88ca7ac1b72590da9f96af1a81bfb90c794852192c279a52fd06542524a4",
          "withoutMetadata": "23626733b3a31740206e27d9c6f73e84a32030e1d64eea2b26c8bc71b1448c41",
          "linkedWithoutMetadata": "23626733b3a31740206e27d9c6f73e84a32030e1d64eea2b26c8bc71b1448c41"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "accepted(address,address,bytes32,bytes32)",
          "setAccepted(bytes32,bytes32,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "accept",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes32,t_bool)",
              "contract": "TestDisputeManager",
              "src": "contracts/test/TestDisputeManager.sol:8"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_bool)": {
              "label": "mapping(bytes32 => bool)",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "MultiSend": {
        "src": "@gnosis.pm/safe-contracts/contracts/libraries/MultiSend.sol:9",
        "version": {
          "withMetadata": "725849a8f25ea819c8898593164a3594779220ed514b8a5f03cd881950fc72d3",
          "withoutMetadata": "17654cb5b9455ea109bf8a780de713253dff73707188cd48171c6407f2d54607",
          "linkedWithoutMetadata": "17654cb5b9455ea109bf8a780de713253dff73707188cd48171c6407f2d54607"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "multiSend(bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MultiSend",
            "src": "@gnosis.pm/safe-contracts/contracts/libraries/MultiSend.sol:12"
          },
          {
            "kind": "state-variable-immutable",
            "name": "multisendSingleton",
            "src": "@gnosis.pm/safe-contracts/contracts/libraries/MultiSend.sol:10"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    }
  ]
}